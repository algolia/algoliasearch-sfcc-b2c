name: Main Workflow

on:
  pull_request:
    branches:
      - main

env:
  SFCC_OAUTH_CLIENT_ID: ${{ secrets.SFCC_CLIENT_ID }}
  SFCC_OAUTH_CLIENT_SECRET: ${{ secrets.SFCC_CLIENT_SECRET }}
  ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
  ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
  SANDBOX_HOST: ${{ secrets.SANDBOX_HOST }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
  CODE_VERSION: ${{ vars.CODE_VERSION }}

jobs:
  prepare-site-import:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          repository: algolia/storefront-reference-architecture
          ref: master
          token: ${{ secrets.GITHUB_AUTH_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install required packages
        run: |
          apt-get update
          apt-get install -y zip

      - name: Install npm packages
        run: npm i

      - name: Compile js files
        run: npm run compile:js

      - name: Compile css files
        run: npm run compile:scss

      - name: Install sfcc-ci
        run: npm install -g sfcc-ci

      - name: Authenticate with SFCC and get access token
        run: |
          sfcc-ci client:auth $SFCC_OAUTH_CLIENT_ID $SFCC_OAUTH_CLIENT_SECRET
          echo "Raw output of sfcc-ci client:auth:token:"
          ACCESS_TOKEN=$(sfcc-ci client:auth:token)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Create Code Version Directory
        run: mkdir ${{ env.CODE_VERSION }}

      - name: Copy Cartridges
        run: |
          if [ -d "cartridges" ]; then
            cp -R cartridges/* ${{ env.CODE_VERSION }}/
          else
            echo "Cartridges directory not found. Skipping."
          fi

      - name: Package Code
        run: zip -r ${{ env.CODE_VERSION }}.zip ${{ env.CODE_VERSION }}

      - name: Deploy Code to Sandbox
        run: sfcc-ci code:deploy ${{ env.CODE_VERSION }}.zip --instance $SANDBOX_HOST

      - name: Prepare Site Import Directory
        run: |
          mkdir -p site_import/sites/RefArch
          mkdir -p site_import/meta

      - name: Generate preferences.xml
        run: |
          cat << EOF > site_import/sites/RefArch/preferences.xml
          <?xml version="1.0" encoding="UTF-8"?>
          <preferences xmlns="http://www.demandware.com/xml/impex/preferences/2007-03-31">
              <custom-preferences>
                <all-instances>
                  <preference preference-id="Algolia_RecordModel">variant-level</preference>
                  <preference preference-id="Algolia_IndexPrefix">varx</preference>
                  <preference preference-id="Algolia_AdditionalAttributes">color,size,colorVariations,masterID,short_description,brand,name,pricebooks</preference>
                </all-instances>
              </custom-preferences>
          </preferences>
          EOF

      - name: Package Site Import
        run: zip -r site_import.zip site_import

      - name: Upload Site Preferences
        run: sfcc-ci instance:upload site_import.zip --instance $SANDBOX_HOST

      - name: Import Site Preferences
        run: sfcc-ci instance:import site_import.zip --instance $SANDBOX_HOST --sync

      - name: Clean up
        run: rm -rf site_import site_import.zip

  deployment-and-jobs:
    needs: prepare-site-import
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check folder structure
        run: |
          cd cartridges && ls

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install required packages
        run: |
          apt-get update
          apt-get install -y zip

      - name: Install sfcc-ci
        run: npm install -g sfcc-ci

      - name: Authenticate with SFCC and get access token
        run: |
          sfcc-ci client:auth $SFCC_OAUTH_CLIENT_ID $SFCC_OAUTH_CLIENT_SECRET
          echo "Raw output of sfcc-ci client:auth:token:"
          ACCESS_TOKEN=$(sfcc-ci client:auth:token)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Create Code Version Directory
        run: mkdir ${{ env.CODE_VERSION }}

      - name: Copy Cartridges
        run: |
          if [ -d "cartridges" ]; then
            cp -R cartridges/* ${{ env.CODE_VERSION }}/
          else
            echo "Cartridges directory not found. Skipping."
          fi

      - name: Package Code
        run: zip -r ${{ env.CODE_VERSION }}.zip ${{ env.CODE_VERSION }}

      - name: Deploy Code to Sandbox
        run: sfcc-ci code:deploy ${{ env.CODE_VERSION }}.zip --instance $SANDBOX_HOST

      - name: Activate Code Version
        run: sfcc-ci code:activate ${{ env.CODE_VERSION }} -i $SANDBOX_HOST

      - name: Trigger SFCC Job
        run: sfcc-ci job:run AlgoliaProductIndex_v2 --instance $SANDBOX_HOST

      - name: Wait for Job Completion (Needs to be replaced with job status check)
        run: |
          echo "Waiting for 4 minutes to allow job completion..."
          sleep 240

      - name: Install Dependencies
        run: npm install algoliasearch

      - name: Validate Algolia Indices
        run: |
          if [ -f "test/e2e/validate_algolia.js" ]; then
            node test/e2e/validate_algolia.js
          else
            echo "validate_algolia.js not found. Skipping Algolia index validation."
          fi

      - name: Run Frontend Tests
        run: |
          if [ -d "cypress" ]; then
            npx cypress run --config baseUrl=https://$SANDBOX_HOST
          else
            echo "Cypress directory not found. Skipping frontend tests."
          fi

  index-tests:
    needs: deployment-and-jobs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm i

      - name: Run Algolia Index Tests
        run: npm test -- test/e2e/variation_index.test.js

  e2e-tests:
    needs: index-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm ci

      - name: Run Algolia Index Tests
        run: npm test -- test/e2e/validate_algolia.test.js

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          headless: true
          config-file: cypress.config.js