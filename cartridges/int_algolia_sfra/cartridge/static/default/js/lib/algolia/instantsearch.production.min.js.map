{"version":3,"file":"instantsearch.production.min.js","sources":["../src/lib/utils/noop.ts","../src/lib/utils/logger.ts","../src/lib/utils/checkRendering.ts","../src/lib/utils/getObjectType.ts","../src/lib/utils/clearRefinements.ts","../src/lib/utils/escape-html.ts","../src/lib/utils/isPlainObject.ts","../src/lib/utils/escape-highlight.ts","../src/lib/utils/concatHighlightedParts.ts","../src/lib/utils/createSendEventForFacet.ts","../src/lib/utils/isFacetRefined.ts","../src/lib/utils/serializer.ts","../src/lib/utils/createSendEventForHits.ts","../src/lib/utils/isIndexWidget.ts","../src/lib/utils/setIndexHelperState.ts","../src/lib/utils/debounce.ts","../src/lib/utils/defer.ts","../src/lib/utils/documentation.ts","../src/lib/utils/escapeFacetValue.ts","../src/lib/utils/find.ts","../src/lib/utils/geo-search.ts","../src/lib/utils/getContainerNode.ts","../src/lib/utils/isDomElement.ts","../src/lib/utils/getHighlightedParts.ts","../src/lib/utils/getHighlightFromSiblings.ts","../src/lib/utils/getPropertyByPath.ts","../src/lib/utils/getRefinements.ts","../src/lib/utils/getWidgetAttribute.ts","../src/lib/utils/hits-absolute-position.ts","../src/lib/utils/hits-query-id.ts","../src/lib/utils/isEqual.ts","../src/lib/utils/isFiniteNumber.ts","../src/lib/utils/isSpecialClick.ts","../src/lib/utils/uniq.ts","../src/lib/utils/mergeSearchParameters.ts","../src/lib/utils/findIndex.ts","../src/lib/utils/omit.ts","../src/lib/utils/range.ts","../src/lib/utils/render-args.ts","../src/lib/utils/reverseHighlightedParts.ts","../src/lib/utils/safelyRunOnBrowser.ts","../src/lib/utils/toArray.ts","../src/connectors/answers/connectAnswers.ts","../src/lib/utils/createConcurrentSafePromise.ts","../src/connectors/dynamic-widgets/connectDynamicWidgets.ts","../src/connectors/clear-refinements/connectClearRefinements.ts","../src/connectors/current-refinements/connectCurrentRefinements.ts","../src/connectors/hierarchical-menu/connectHierarchicalMenu.ts","../src/connectors/hits/connectHits.ts","../src/lib/insights/client.ts","../../../node_modules/preact/dist/preact.module.js","../src/helpers/insights.ts","../src/lib/insights/listener.tsx","../src/connectors/hits-per-page/connectHitsPerPage.ts","../src/connectors/hits/connectHitsWithInsights.ts","../src/connectors/infinite-hits/connectInfiniteHits.ts","../src/connectors/menu/connectMenu.ts","../src/connectors/numeric-menu/connectNumericMenu.ts","../src/connectors/infinite-hits/connectInfiniteHitsWithInsights.ts","../src/connectors/pagination/connectPagination.ts","../src/connectors/pagination/Paginator.ts","../src/connectors/range/connectRange.ts","../src/connectors/refinement-list/connectRefinementList.ts","../src/connectors/search-box/connectSearchBox.ts","../src/connectors/sort-by/connectSortBy.ts","../src/connectors/rating-menu/connectRatingMenu.ts","../src/connectors/stats/connectStats.ts","../src/connectors/toggle-refinement/connectToggleRefinement.ts","../src/connectors/breadcrumb/connectBreadcrumb.ts","../src/connectors/geo-search/connectGeoSearch.ts","../src/connectors/powered-by/connectPoweredBy.ts","../../../node_modules/algoliasearch-helper/src/functions/merge.js","../../../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","../../../node_modules/algoliasearch-helper/src/functions/intersection.js","../../../node_modules/algoliasearch-helper/src/functions/find.js","../../../node_modules/algoliasearch-helper/src/functions/valToNumber.js","../../../node_modules/algoliasearch-helper/src/functions/omit.js","../../../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","../../../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","../../../node_modules/algoliasearch-helper/src/SearchParameters/index.js","../../../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","../../../node_modules/algoliasearch-helper/src/functions/compact.js","../../../node_modules/algoliasearch-helper/src/functions/findIndex.js","../../../node_modules/algoliasearch-helper/src/functions/formatSort.js","../../../node_modules/algoliasearch-helper/src/functions/orderBy.js","../../../node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","../../../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../../../node_modules/algoliasearch-helper/src/SearchResults/index.js","../../../node_modules/@algolia/events/events.js","../../../node_modules/algoliasearch-helper/src/functions/inherits.js","../../../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","../../../node_modules/algoliasearch-helper/src/requestBuilder.js","../../../node_modules/algoliasearch-helper/src/version.js","../../../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","../../../node_modules/algoliasearch-helper/index.js","../src/connectors/configure/connectConfigure.ts","../src/connectors/configure-related-items/connectConfigureRelatedItems.ts","../src/connectors/autocomplete/connectAutocomplete.ts","../src/connectors/query-rules/connectQueryRules.ts","../src/lib/voiceSearchHelper/index.ts","../src/connectors/voice-search/connectVoiceSearch.ts","../src/connectors/relevant-sort/connectRelevantSort.ts","../src/lib/suit.ts","../src/connectors/index.ts","../src/helpers/highlight.ts","../src/helpers/reverseHighlight.ts","../src/helpers/snippet.ts","../src/helpers/reverseSnippet.ts","../src/helpers/get-insights-anonymous-user-token.ts","../src/lib/infiniteHitsCache/sessionStorage.ts","../src/middlewares/createMetadataMiddleware.ts","../node_modules/qs/lib/utils.js","../node_modules/qs/lib/stringify.js","../src/lib/routers/history.ts","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/parse.js","../node_modules/qs/lib/index.js","../src/lib/stateMappings/simple.ts","../src/middlewares/createRouterMiddleware.ts","../src/widgets/index/index.ts","../src/lib/utils/resolveSearchParameters.ts","../src/lib/formatNumber.ts","../src/lib/InstantSearch.ts","../src/lib/createHelpers.ts","../src/lib/version.ts","../src/lib/stateMappings/singleIndex.ts","../src/middlewares/createInsightsMiddleware.ts","../src/lib/utils/getAppIdAndApiKey.ts","../../../node_modules/@algolia/ui-components-shared/dist/esm/cx.js","../src/lib/templating/prepareTemplateProps.ts","../../../node_modules/hogan.js/lib/compiler.js","../../../node_modules/hogan.js/lib/template.js","../../../node_modules/hogan.js/lib/hogan.js","../../../node_modules/htm/dist/htm.module.js","../../../node_modules/htm/preact/index.module.js","../../../node_modules/@babel/runtime/helpers/extends.js","../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../../node_modules/@algolia/ui-components-highlight-vdom/dist/esm/Highlight.js","../src/components/InternalHighlight/InternalHighlight.tsx","../src/components/Highlight/Highlight.tsx","../src/helpers/components/Highlight.tsx","../src/components/ReverseHighlight/ReverseHighlight.tsx","../src/helpers/components/ReverseHighlight.tsx","../src/components/ReverseSnippet/ReverseSnippet.tsx","../src/helpers/components/ReverseSnippet.tsx","../src/components/Snippet/Snippet.tsx","../src/helpers/components/Snippet.tsx","../src/lib/templating/renderTemplate.ts","../src/components/Template/Template.tsx","../src/components/Answers/Answers.tsx","../src/widgets/answers/defaultTemplates.ts","../src/widgets/answers/answers.tsx","../src/widgets/dynamic-widgets/dynamic-widgets.ts","../src/widgets/current-refinements/current-refinements.tsx","../src/components/GeoSearchControls/GeoSearchButton.tsx","../src/components/GeoSearchControls/GeoSearchToggle.tsx","../src/widgets/geo-search/GeoSearchRenderer.js","../src/widgets/analytics/analytics.ts","../src/components/Breadcrumb/Breadcrumb.tsx","../src/widgets/breadcrumb/defaultTemplates.ts","../src/widgets/breadcrumb/breadcrumb.tsx","../src/components/ClearRefinements/ClearRefinements.tsx","../src/widgets/clear-refinements/defaultTemplates.ts","../src/widgets/clear-refinements/clear-refinements.tsx","../src/components/CurrentRefinements/CurrentRefinements.tsx","../src/lib/utils/capitalize.ts","../src/widgets/geo-search/defaultTemplates.tsx","../src/components/GeoSearchControls/GeoSearchControls.tsx","../src/widgets/geo-search/geo-search.ts","../src/components/SearchBox/SearchBox.tsx","../src/components/RefinementList/RefinementListItem.tsx","../src/components/RefinementList/RefinementList.tsx","../src/widgets/hierarchical-menu/defaultTemplates.tsx","../src/widgets/hierarchical-menu/hierarchical-menu.tsx","../src/widgets/hits/defaultTemplates.ts","../src/widgets/hits/hits.tsx","../src/components/Hits/Hits.tsx","../src/components/Selector/Selector.tsx","../src/widgets/hits-per-page/hits-per-page.tsx","../src/widgets/infinite-hits/defaultTemplates.ts","../src/widgets/infinite-hits/infinite-hits.tsx","../src/components/InfiniteHits/InfiniteHits.tsx","../src/widgets/menu/defaultTemplates.tsx","../src/widgets/menu/menu.tsx","../src/components/MenuSelect/MenuSelect.tsx","../src/widgets/menu-select/defaultTemplates.ts","../src/widgets/menu-select/menu-select.tsx","../src/widgets/numeric-menu/defaultTemplates.tsx","../src/widgets/numeric-menu/numeric-menu.tsx","../src/components/Pagination/Pagination.tsx","../src/widgets/pagination/pagination.tsx","../../../node_modules/preact/hooks/dist/hooks.module.js","../src/components/Panel/Panel.tsx","../src/components/Slider/Pit.tsx","../src/widgets/panel/panel.tsx","../src/components/PoweredBy/PoweredBy.tsx","../src/widgets/powered-by/powered-by.tsx","../src/widgets/query-rule-context/query-rule-context.tsx","../src/components/QueryRuleCustomData/QueryRuleCustomData.tsx","../src/widgets/query-rule-custom-data/query-rule-custom-data.tsx","../src/components/RangeInput/RangeInput.tsx","../src/widgets/range-input/range-input.tsx","../src/components/Slider/Rheostat.tsx","../src/components/Slider/Slider.tsx","../src/widgets/range-slider/range-slider.tsx","../src/widgets/rating-menu/defaultTemplates.tsx","../src/widgets/rating-menu/rating-menu.tsx","../src/widgets/search-box/defaultTemplates.tsx","../src/widgets/refinement-list/defaultTemplates.tsx","../src/widgets/refinement-list/refinement-list.tsx","../src/components/RelevantSort/RelevantSort.tsx","../src/widgets/relevant-sort/defaultTemplates.ts","../src/widgets/relevant-sort/relevant-sort.tsx","../src/widgets/search-box/search-box.tsx","../src/widgets/sort-by/sort-by.tsx","../src/components/Stats/Stats.tsx","../src/widgets/stats/stats.tsx","../src/widgets/voice-search/defaultTemplates.tsx","../src/index.ts","../src/components/ToggleRefinement/ToggleRefinement.tsx","../src/widgets/toggle-refinement/defaultTemplates.ts","../src/widgets/toggle-refinement/toggle-refinement.tsx","../src/components/VoiceSearch/VoiceSearch.tsx","../src/widgets/voice-search/voice-search.tsx","../src/widgets/index.ts","../src/widgets/configure/configure.ts","../src/widgets/configure-related-items/configure-related-items.ts","../src/widgets/geo-search/createHTMLMarker.ts","../src/widgets/places/places.ts"],"sourcesContent":["export function noop(..._args: any[]): void {}\n","import { noop } from './noop';\n\ntype Warn = (message: string) => void;\n\ntype Warning = {\n  (condition: boolean, message: string): void;\n  cache: { [message: string]: boolean };\n};\n\n/**\n * Logs a warning when this function is called, in development environment only.\n */\nlet deprecate = <TCallback extends (...args: any[]) => any>(\n  fn: TCallback,\n  // @ts-ignore this parameter is used in the __DEV__ branch\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  message: string\n) => fn;\n\n/**\n * Logs a warning\n * This is used to log issues in development environment only.\n */\nlet warn: Warn = noop;\n\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\nlet warning = noop as Warning;\n\nif (__DEV__) {\n  warn = (message) => {\n    // eslint-disable-next-line no-console\n    console.warn(`[InstantSearch.js]: ${message.trim()}`);\n  };\n\n  deprecate = (fn, message) => {\n    let hasAlreadyPrinted = false;\n\n    return function (...args) {\n      if (!hasAlreadyPrinted) {\n        hasAlreadyPrinted = true;\n\n        warn(message);\n      }\n\n      return fn(...args);\n    } as typeof fn;\n  };\n\n  warning = ((condition, message) => {\n    if (condition) {\n      return;\n    }\n\n    const hasAlreadyPrinted = warning.cache[message];\n\n    if (!hasAlreadyPrinted) {\n      warning.cache[message] = true;\n\n      warn(message);\n    }\n  }) as Warning;\n\n  warning.cache = {};\n}\n\nexport { warn, deprecate, warning };\n","import { getObjectType } from './getObjectType';\n\nimport type { Renderer } from '../../types/connector';\n\nexport function checkRendering<TRenderOptions, TWidgetParams>(\n  rendering: Renderer<TRenderOptions, TWidgetParams>,\n  usage: string\n): void {\n  if (rendering === undefined || typeof rendering !== 'function') {\n    throw new Error(`The render function is not valid (received type ${getObjectType(\n      rendering\n    )}).\n\n${usage}`);\n  }\n}\n","export function getObjectType(object: unknown): string {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\n/**\n * Clears the refinements of a SearchParameters object based on rules provided.\n * The included attributes list is applied before the excluded attributes list. If the list\n * is not provided, this list of all the currently refined attributes is used as included attributes.\n * @returns search parameters with refinements cleared\n */\nexport function clearRefinements({\n  helper,\n  attributesToClear = [],\n}: {\n  helper: AlgoliaSearchHelper;\n  attributesToClear?: string[];\n}): SearchParameters {\n  let finalState = helper.state.setPage(0);\n\n  finalState = attributesToClear.reduce((state, attribute) => {\n    if (finalState.isNumericRefined(attribute)) {\n      return state.removeNumericRefinement(attribute);\n    }\n    if (finalState.isHierarchicalFacet(attribute)) {\n      return state.removeHierarchicalFacetRefinement(attribute);\n    }\n    if (finalState.isDisjunctiveFacet(attribute)) {\n      return state.removeDisjunctiveFacetRefinement(attribute);\n    }\n    if (finalState.isConjunctiveFacet(attribute)) {\n      return state.removeFacetRefinement(attribute);\n    }\n\n    return state;\n  }, finalState);\n\n  if (attributesToClear.indexOf('query') !== -1) {\n    finalState = finalState.setQuery('');\n  }\n\n  return finalState;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/escape.js\n */\n\n// Used to map characters to HTML entities.\nconst htmlEntities = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexUnescapedHtml = /[&<>\"']/g;\nconst regexHasUnescapedHtml = RegExp(regexUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n */\nexport function escape(value: string): string {\n  return value && regexHasUnescapedHtml.test(value)\n    ? value.replace(\n        regexUnescapedHtml,\n        (character) => htmlEntities[character as keyof typeof htmlEntities]\n      )\n    : value;\n}\n\n/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n// Used to map HTML entities to characters.\nconst htmlCharacters = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nconst regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\nexport function unescape(value: string): string {\n  return value && regexHasEscapedHtml.test(value)\n    ? value.replace(\n        regexEscapedHtml,\n        (character) => htmlCharacters[character as keyof typeof htmlCharacters]\n      )\n    : value;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/master/isPlainObject.js\n */\n\nfunction getTag(value: any): string {\n  if (value === null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nfunction isObjectLike(value: any): boolean {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks if `value` is a plain object.\n *\n * A plain object is an object created by the `Object`\n * constructor or with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value: any): boolean {\n  if (!isObjectLike(value) || getTag(value) !== '[object Object]') {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  let proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n","import { escape } from './escape-html';\nimport { isPlainObject } from './isPlainObject';\n\nimport type { Hit, FacetHit, EscapedHits } from '../../types';\n\nexport const TAG_PLACEHOLDER = {\n  highlightPreTag: '__ais-highlight__',\n  highlightPostTag: '__/ais-highlight__',\n};\n\nexport const TAG_REPLACEMENT = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nfunction replaceTagsAndEscape(value: string): string {\n  return escape(value)\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPreTag, 'g'),\n      TAG_REPLACEMENT.highlightPreTag\n    )\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPostTag, 'g'),\n      TAG_REPLACEMENT.highlightPostTag\n    );\n}\n\nfunction recursiveEscape(input: any): any {\n  if (isPlainObject(input) && typeof input.value !== 'string') {\n    return Object.keys(input).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: recursiveEscape(input[key]),\n      }),\n      {}\n    );\n  }\n\n  if (Array.isArray(input)) {\n    return input.map(recursiveEscape);\n  }\n\n  return {\n    ...input,\n    value: replaceTagsAndEscape(input.value),\n  };\n}\n\nexport function escapeHits<THit extends Hit>(\n  hits: THit[] | EscapedHits<THit>\n): EscapedHits<THit> {\n  if ((hits as EscapedHits).__escaped === undefined) {\n    // We don't override the value on hit because it will mutate the raw results\n    // instead we make a shallow copy and we assign the escaped values on it.\n    hits = hits.map(({ ...hit }) => {\n      if (hit._highlightResult) {\n        hit._highlightResult = recursiveEscape(hit._highlightResult);\n      }\n\n      if (hit._snippetResult) {\n        hit._snippetResult = recursiveEscape(hit._snippetResult);\n      }\n\n      return hit;\n    });\n\n    (hits as EscapedHits).__escaped = true;\n  }\n\n  return hits as EscapedHits<THit>;\n}\n\nexport function escapeFacets(facetHits: FacetHit[]): FacetHit[] {\n  return facetHits.map((h) => ({\n    ...h,\n    highlighted: replaceTagsAndEscape(h.highlighted),\n  }));\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nimport type { HighlightedParts } from '../../types';\n\nexport function concatHighlightedParts(parts: HighlightedParts[]) {\n  const { highlightPreTag, highlightPostTag } = TAG_REPLACEMENT;\n\n  return parts\n    .map((part) =>\n      part.isHighlighted\n        ? highlightPreTag + part.value + highlightPostTag\n        : part.value\n    )\n    .join('');\n}\n","import { isFacetRefined } from './isFacetRefined';\n\nimport type { InstantSearch } from '../../types';\nimport type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\ntype BuiltInSendEventForFacet = (\n  eventType: string,\n  facetValue: string,\n  eventName?: string\n) => void;\ntype CustomSendEventForFacet = (customPayload: any) => void;\n\nexport type SendEventForFacet = BuiltInSendEventForFacet &\n  CustomSendEventForFacet;\n\ntype CreateSendEventForFacetOptions = {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string | ((facetValue: string) => string);\n  widgetType: string;\n};\n\nexport function createSendEventForFacet({\n  instantSearchInstance,\n  helper,\n  attribute: attr,\n  widgetType,\n}: CreateSendEventForFacetOptions): SendEventForFacet {\n  const sendEventForFacet: SendEventForFacet = (...args: any[]) => {\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    const attribute = typeof attr === 'string' ? attr : attr(facetValue);\n\n    if (args.length === 1 && typeof args[0] === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (\n      eventType === 'click' &&\n      (args.length === 2 || args.length === 3)\n    ) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType,\n          eventType,\n          payload: {\n            eventName,\n            index: helper.getIndex(),\n            filters: [`${attribute}:${facetValue}`],\n          },\n          attribute,\n        });\n      }\n    } else if (__DEV__) {\n      throw new Error(\n        `You need to pass two arguments like:\n  sendEvent('click', facetValue);\n\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\n`\n      );\n    }\n  };\n\n  return sendEventForFacet;\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nexport function isFacetRefined(\n  helper: AlgoliaSearchHelper,\n  facet: string,\n  value: string\n) {\n  if (helper.state.isHierarchicalFacet(facet)) {\n    return helper.state.isHierarchicalFacetRefined(facet, value);\n  } else if (helper.state.isConjunctiveFacet(facet)) {\n    return helper.state.isFacetRefined(facet, value);\n  } else {\n    return helper.state.isDisjunctiveFacetRefined(facet, value);\n  }\n}\n","export function serializePayload<TPayload>(payload: TPayload): string {\n  return btoa(encodeURIComponent(JSON.stringify(payload)));\n}\n\nexport function deserializePayload<TPayload>(serialized: string): TPayload {\n  return JSON.parse(decodeURIComponent(atob(serialized)));\n}\n","import { serializePayload } from './serializer';\n\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { InstantSearch, Hit, EscapedHits } from '../../types';\n\ntype BuiltInSendEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string\n) => void;\ntype CustomSendEventForHits = (customPayload: any) => void;\nexport type SendEventForHits = BuiltInSendEventForHits & CustomSendEventForHits;\n\nexport type BuiltInBindEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string\n) => string;\n\nexport type CustomBindEventForHits = (customPayload: any) => string;\n\nexport type BindEventForHits = BuiltInBindEventForHits & CustomBindEventForHits;\n\nfunction chunk<TItem>(arr: TItem[], chunkSize: number = 20): TItem[][] {\n  const chunks: TItem[][] = [];\n  for (let i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n  return chunks;\n}\n\nconst buildPayloads = ({\n  index,\n  widgetType,\n  methodName,\n  args,\n  instantSearchInstance,\n}: {\n  widgetType: string;\n  index: string;\n  methodName: 'sendEvent' | 'bindEvent';\n  args: any[];\n  instantSearchInstance: InstantSearch;\n}): InsightsEvent[] => {\n  // when there's only one argument, that means it's custom\n  if (args.length === 1 && typeof args[0] === 'object') {\n    return [args[0]];\n  }\n  const eventType: string = args[0];\n  const hits: Hit | Hit[] | EscapedHits = args[1];\n  const eventName: string | undefined = args[2];\n  if (!hits) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass hit or hits as the second argument like:\n  ${methodName}(eventType, hit);\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass eventName as the third argument for 'click' or 'conversion' events like:\n  ${methodName}('click', hit, 'Product Purchased');\n\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  const hitsArray: Hit[] = Array.isArray(hits) ? hits : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n  const queryID = hitsArray[0].__queryID;\n  const hitsChunks = chunk(hitsArray);\n  const objectIDsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.objectID)\n  );\n  const positionsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.__position)\n  );\n\n  if (eventType === 'view') {\n    if (instantSearchInstance.status !== 'idle') {\n      return [];\n    }\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType,\n        eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index,\n          objectIDs: objectIDsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName,\n          index,\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName,\n          index,\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (__DEV__) {\n    throw new Error(`eventType(\"${eventType}\") is not supported.\n    If you want to send a custom payload, you can pass one object: ${methodName}(customPayload);\n    `);\n  } else {\n    return [];\n  }\n};\n\nexport function createSendEventForHits({\n  instantSearchInstance,\n  index,\n  widgetType,\n}: {\n  instantSearchInstance: InstantSearch;\n  index: string;\n  widgetType: string;\n}): SendEventForHits {\n  const sendEventForHits: SendEventForHits = (...args: any[]) => {\n    const payloads = buildPayloads({\n      widgetType,\n      index,\n      methodName: 'sendEvent',\n      args,\n      instantSearchInstance,\n    });\n\n    payloads.forEach((payload) =>\n      instantSearchInstance.sendEventToInsights(payload)\n    );\n  };\n  return sendEventForHits;\n}\n\nexport function createBindEventForHits({\n  index,\n  widgetType,\n  instantSearchInstance,\n}: {\n  index: string;\n  widgetType: string;\n  instantSearchInstance: InstantSearch;\n}): BindEventForHits {\n  const bindEventForHits: BindEventForHits = (...args: any[]) => {\n    const payloads = buildPayloads({\n      widgetType,\n      index,\n      methodName: 'bindEvent',\n      args,\n      instantSearchInstance,\n    });\n\n    return payloads.length\n      ? `data-insights-event=${serializePayload(payloads)}`\n      : '';\n  };\n  return bindEventForHits;\n}\n","import type { Widget } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function isIndexWidget(\n  widget: Widget | IndexWidget\n): widget is IndexWidget {\n  return widget.$$type === 'ais.index';\n}\n","import { checkIndexUiState } from './checkIndexUiState';\nimport { isIndexWidget } from './isIndexWidget';\n\nimport type { UiState } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function setIndexHelperState<TUiState extends UiState>(\n  finalUiState: TUiState,\n  indexWidget: IndexWidget\n) {\n  const nextIndexUiState = finalUiState[indexWidget.getIndexId()] || {};\n\n  if (__DEV__) {\n    checkIndexUiState({\n      index: indexWidget,\n      indexUiState: nextIndexUiState,\n    });\n  }\n\n  indexWidget.getHelper()!.setState(\n    indexWidget.getWidgetSearchParameters(indexWidget.getHelper()!.state, {\n      uiState: nextIndexUiState,\n    })\n  );\n\n  indexWidget\n    .getWidgets()\n    .filter(isIndexWidget)\n    .forEach((widget) => setIndexHelperState(finalUiState, widget));\n}\n","import type { Awaited } from '../../types';\n\ntype Func = (...args: any[]) => any;\n\nexport type DebouncedFunction<TFunction extends Func> = (\n  this: ThisParameterType<TFunction>,\n  ...args: Parameters<TFunction>\n) => Promise<Awaited<ReturnType<TFunction>>>;\n\n// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce<TFunction extends Func>(\n  func: TFunction,\n  wait: number\n): DebouncedFunction<TFunction> {\n  let lastTimeout: ReturnType<typeof setTimeout> | null = null;\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n      lastTimeout = setTimeout(() => {\n        lastTimeout = null;\n        Promise.resolve(func(...args))\n          .then(resolve)\n          .catch(reject);\n      }, wait);\n    });\n  };\n}\n","const nextMicroTask = Promise.resolve();\n\ntype Callback = (...args: any[]) => void;\ntype Defer = {\n  wait(): Promise<void>;\n  cancel(): void;\n};\n\nexport function defer<TCallback extends Callback>(\n  callback: TCallback\n): TCallback & Defer {\n  let progress: Promise<void> | null = null;\n  let cancelled = false;\n\n  const fn = ((...args: Parameters<TCallback>) => {\n    if (progress !== null) {\n      return;\n    }\n\n    progress = nextMicroTask.then(() => {\n      progress = null;\n\n      if (cancelled) {\n        cancelled = false;\n        return;\n      }\n\n      callback(...args);\n    });\n  }) as TCallback & Defer;\n\n  fn.wait = () => {\n    if (progress === null) {\n      throw new Error(\n        'The deferred function should be called before calling `wait()`'\n      );\n    }\n\n    return progress;\n  };\n\n  fn.cancel = () => {\n    if (progress === null) {\n      return;\n    }\n\n    cancelled = true;\n  };\n\n  return fn;\n}\n","type WidgetParam = {\n  name: string;\n  connector?: boolean;\n};\n\nexport function createDocumentationLink({\n  name,\n  connector = false,\n}: WidgetParam): string {\n  return [\n    'https://www.algolia.com/doc/api-reference/widgets/',\n    name,\n    '/js/',\n    connector ? '#connector' : '',\n  ].join('');\n}\n\ntype DocumentationMessageGenerator = (message?: string) => string;\n\nexport function createDocumentationMessageGenerator(\n  ...widgets: WidgetParam[]\n): DocumentationMessageGenerator {\n  const links = widgets\n    .map((widget) => createDocumentationLink(widget))\n    .join(', ');\n\n  return (message?: string) =>\n    [message, `See documentation: ${links}`].filter(Boolean).join('\\n\\n');\n}\n","type FacetValue = string | number | boolean | undefined;\n\nexport function unescapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if (typeof value === 'string') {\n    return value.replace(/^\\\\-/, '-') as TFacetValue;\n  }\n\n  return value;\n}\n\nexport function escapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if ((typeof value === 'number' && value < 0) || typeof value === 'string') {\n    return String(value).replace(/^-/, '\\\\-') as TFacetValue;\n  }\n\n  return value;\n}\n","// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nexport function find<TItem>(\n  items: TItem[],\n  predicate: (value: TItem, index: number, obj: TItem[]) => boolean\n): TItem | undefined {\n  let value: TItem;\n  for (let i = 0; i < items.length; i++) {\n    value = items[i];\n    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n","const latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\n\nexport function aroundLatLngToPosition(value: string) {\n  const pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(`Invalid value for \"aroundLatLng\" parameter: \"${value}\"`);\n  }\n\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2]),\n  };\n}\n\nexport type LatLng = Array<[number, number, number, number]>;\n\nfunction insideBoundingBoxArrayToBoundingBox(value: LatLng) {\n  const [\n    [neLat, neLng, swLat, swLng] = [undefined, undefined, undefined, undefined],\n  ] = value;\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: [${value}]`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nfunction insideBoundingBoxStringToBoundingBox(value: string) {\n  const [neLat, neLng, swLat, swLng] = value.split(',').map(parseFloat);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: \"${value}\"`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nexport function insideBoundingBoxToBoundingBox(value: string | LatLng) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n\n  return insideBoundingBoxStringToBoundingBox(value);\n}\n","import { isDomElement } from './isDomElement';\n\n/**\n * Return the container. If it's a string, it is considered a\n * css selector and retrieves the first matching element. Otherwise\n * test if it validates that it's a correct DOMElement.\n *\n * @param {string|HTMLElement} selectorOrHTMLElement CSS Selector or container node.\n * @return {HTMLElement} Container node\n * @throws Error when the type is not correct\n */\nexport function getContainerNode(\n  selectorOrHTMLElement: string | HTMLElement\n): HTMLElement {\n  const isSelectorString = typeof selectorOrHTMLElement === 'string';\n  const domElement = isSelectorString\n    ? document.querySelector(selectorOrHTMLElement)\n    : selectorOrHTMLElement;\n\n  if (!isDomElement(domElement)) {\n    let errorMessage = 'Container must be `string` or `HTMLElement`.';\n\n    if (isSelectorString) {\n      errorMessage += ` Unable to find ${selectorOrHTMLElement}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  return domElement;\n}\n","export function isDomElement(object: any): object is HTMLElement {\n  return (\n    object instanceof HTMLElement || (Boolean(object) && object.nodeType > 0)\n  );\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nexport function getHighlightedParts(highlightedValue: string) {\n  const { highlightPostTag, highlightPreTag } = TAG_REPLACEMENT;\n\n  const splitByPreTag = highlightedValue.split(highlightPreTag);\n  const firstValue = splitByPreTag.shift();\n  const elements = !firstValue\n    ? []\n    : [{ value: firstValue, isHighlighted: false }];\n\n  splitByPreTag.forEach((split) => {\n    const splitByPostTag = split.split(highlightPostTag);\n\n    elements.push({\n      value: splitByPostTag[0],\n      isHighlighted: true,\n    });\n\n    if (splitByPostTag[1] !== '') {\n      elements.push({\n        value: splitByPostTag[1],\n        isHighlighted: false,\n      });\n    }\n  });\n\n  return elements;\n}\n","import { unescape } from './escape-html';\n\nimport type { HighlightedParts } from '../../types';\n\nconst hasAlphanumeric = new RegExp(/\\w/i);\n\nexport function getHighlightFromSiblings(parts: HighlightedParts[], i: number) {\n  const current = parts[i];\n  const isNextHighlighted = parts[i + 1]?.isHighlighted || true;\n  const isPreviousHighlighted = parts[i - 1]?.isHighlighted || true;\n\n  if (\n    !hasAlphanumeric.test(unescape(current.value)) &&\n    isPreviousHighlighted === isNextHighlighted\n  ) {\n    return isPreviousHighlighted;\n  }\n\n  return current.isHighlighted;\n}\n","export function getPropertyByPath(\n  object: Record<string, any> | undefined,\n  path: string | string[]\n): any {\n  const parts = Array.isArray(path) ? path : path.split('.');\n\n  return parts.reduce((current, key) => current && current[key], object);\n}\n","import { unescapeFacetValue, escapeFacetValue } from './escapeFacetValue';\nimport { find } from './find';\n\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\n\nexport type FacetRefinement = {\n  type: 'facet' | 'disjunctive' | 'hierarchical';\n  attribute: string;\n  name: string;\n  escapedValue: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type TagRefinement = {\n  type: 'tag';\n  attribute: string;\n  name: string;\n};\n\nexport type QueryRefinement = {\n  type: 'query';\n  attribute: 'query';\n  query: string;\n  name: string;\n};\n\nexport type NumericRefinement = {\n  type: 'numeric';\n  numericValue: number;\n  operator: '<' | '<=' | '=' | '!=' | '>=' | '>';\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type FacetExcludeRefinement = {\n  type: 'exclude';\n  exclude: boolean;\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type Refinement =\n  | FacetRefinement\n  | QueryRefinement\n  | NumericRefinement\n  | FacetExcludeRefinement\n  | TagRefinement;\n\nfunction getRefinement(\n  state: SearchParameters,\n  type: FacetRefinement['type'],\n  attribute: FacetRefinement['attribute'],\n  name: FacetRefinement['name'],\n  resultsFacets: SearchResults['facets' | 'hierarchicalFacets'] = []\n): FacetRefinement {\n  const res: FacetRefinement = {\n    type,\n    attribute,\n    name,\n    escapedValue: escapeFacetValue(name),\n  };\n  let facet: any = find(\n    resultsFacets,\n    (resultsFacet) => resultsFacet.name === attribute\n  );\n  let count: number;\n\n  if (type === 'hierarchical') {\n    const facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    const nameParts = name.split(facetDeclaration.separator);\n\n    const getFacetRefinement =\n      (facetData: any): ((refinementKey: string) => any) =>\n      (refinementKey: string): any =>\n        facetData[refinementKey];\n\n    for (let i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      facet =\n        facet &&\n        facet.data &&\n        find(\n          Object.keys(facet.data).map(getFacetRefinement(facet.data)),\n          (refinement) => refinement.name === nameParts[i]\n        );\n    }\n\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n\n  return res;\n}\n\nexport function getRefinements(\n  results: SearchResults | Record<string, never>,\n  state: SearchParameters,\n  includesQuery: boolean = false\n): Refinement[] {\n  const refinements: Refinement[] = [];\n  const {\n    facetsRefinements = {},\n    facetsExcludes = {},\n    disjunctiveFacetsRefinements = {},\n    hierarchicalFacetsRefinements = {},\n    numericRefinements = {},\n    tagRefinements = [],\n  } = state;\n\n  Object.keys(facetsRefinements).forEach((attribute) => {\n    const refinementNames = facetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(state, 'facet', attribute, refinementName, results.facets)\n      );\n    });\n  });\n\n  Object.keys(facetsExcludes).forEach((attribute) => {\n    const refinementNames = facetsExcludes[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push({\n        type: 'exclude',\n        attribute,\n        name: refinementName,\n        exclude: true,\n      });\n    });\n  });\n\n  Object.keys(disjunctiveFacetsRefinements).forEach((attribute) => {\n    const refinementNames = disjunctiveFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attribute,\n          // We unescape any disjunctive refined values with `unescapeFacetValue` because\n          // they can be escaped on negative numeric values with `escapeFacetValue`.\n          unescapeFacetValue(refinementName),\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(hierarchicalFacetsRefinements).forEach((attribute) => {\n    const refinementNames = hierarchicalFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinement) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'hierarchical',\n          attribute,\n          refinement,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(numericRefinements).forEach((attribute) => {\n    const operators = numericRefinements[attribute];\n\n    Object.keys(operators).forEach((operatorOriginal) => {\n      const operator = operatorOriginal as SearchParameters.Operator;\n      const valueOrValues = operators[operator];\n      const refinementNames = Array.isArray(valueOrValues)\n        ? valueOrValues\n        : [valueOrValues];\n\n      refinementNames.forEach((refinementName: any) => {\n        refinements.push({\n          type: 'numeric',\n          attribute,\n          name: `${refinementName}`,\n          numericValue: refinementName,\n          operator: operator as NumericRefinement['operator'],\n        });\n      });\n    });\n  });\n\n  tagRefinements.forEach((refinementName) => {\n    refinements.push({ type: 'tag', attribute: '_tags', name: refinementName });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query,\n    });\n  }\n\n  return refinements;\n}\n","import type { InitOptions, Widget } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function getWidgetAttribute(\n  widget: Widget | IndexWidget,\n  initOptions: InitOptions\n): string {\n  const renderState = widget.getWidgetRenderState?.(initOptions);\n\n  let attribute = null;\n\n  if (renderState && renderState.widgetParams) {\n    // casting as widgetParams is checked just before\n    const widgetParams = renderState.widgetParams as Record<string, unknown>;\n\n    if (widgetParams.attribute) {\n      attribute = widgetParams.attribute;\n    } else if (Array.isArray(widgetParams.attributes)) {\n      attribute = widgetParams.attributes[0];\n    }\n  }\n\n  if (typeof attribute !== 'string') {\n    throw new Error(`Could not find the attribute of the widget:\n\n${JSON.stringify(widget)}\n\nPlease check whether the widget's getWidgetRenderState returns widgetParams.attribute correctly.`);\n  }\n\n  return attribute;\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addAbsolutePosition<THit extends AlgoliaHit>(\n  hits: THit[],\n  page: number,\n  hitsPerPage: number\n): Array<THit & { __position: number }> {\n  return hits.map((hit, idx) => ({\n    ...hit,\n    __position: hitsPerPage * page + idx + 1,\n  }));\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addQueryID<THit extends AlgoliaHit>(\n  hits: THit[],\n  queryID?: string\n): Array<THit & { __queryID?: string }> {\n  if (!queryID) {\n    return hits;\n  }\n  return hits.map((hit) => ({\n    ...hit,\n    __queryID: queryID,\n  }));\n}\n","function isPrimitive(obj: any): boolean {\n  return obj !== Object(obj);\n}\n\nexport function isEqual(first: any, second: any): boolean {\n  if (first === second) {\n    return true;\n  }\n\n  if (\n    isPrimitive(first) ||\n    isPrimitive(second) ||\n    typeof first === 'function' ||\n    typeof second === 'function'\n  ) {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  // @TODO avoid for..of because of the large polyfill\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of Object.keys(first)) {\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// This is the `Number.isFinite()` polyfill recommended by MDN.\n// We do not provide any tests for this function.\n// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n// @MAJOR Replace with the native `Number.isFinite` method\nexport function isFiniteNumber(value: any): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n","export function isSpecialClick(event: MouseEvent): boolean {\n  const isMiddleClick = event.button === 1;\n\n  return (\n    isMiddleClick ||\n    event.altKey ||\n    event.ctrlKey ||\n    event.metaKey ||\n    event.shiftKey\n  );\n}\n","export function uniq<TItem>(array: TItem[]): TItem[] {\n  return array.filter((value, index, self) => self.indexOf(value) === index);\n}\n","import { findIndex } from './findIndex';\nimport { uniq } from './uniq';\n\nimport type { SearchParameters } from 'algoliasearch-helper';\n\ntype Merger = (\n  left: SearchParameters,\n  right: SearchParameters\n) => SearchParameters;\n\nconst mergeWithRest: Merger = (left, right) => {\n  const {\n    facets,\n    disjunctiveFacets,\n    facetsRefinements,\n    facetsExcludes,\n    disjunctiveFacetsRefinements,\n    numericRefinements,\n    tagRefinements,\n    hierarchicalFacets,\n    hierarchicalFacetsRefinements,\n    ruleContexts,\n    ...rest\n  } = right;\n\n  return left.setQueryParameters(rest);\n};\n\n// Merge facets\nconst mergeFacets: Merger = (left, right) =>\n  right.facets!.reduce((_, name) => _.addFacet(name), left);\n\nconst mergeDisjunctiveFacets: Merger = (left, right) =>\n  right.disjunctiveFacets.reduce(\n    (_, name) => _.addDisjunctiveFacet(name),\n    left\n  );\n\nconst mergeHierarchicalFacets: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce((facets, facet) => {\n      const index = findIndex(facets, (_) => _.name === facet.name);\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      const nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n\n      return nextFacets;\n    }, left.hierarchicalFacets),\n  });\n\n// Merge facet refinements\nconst mergeTagRefinements: Merger = (left, right) =>\n  right.tagRefinements.reduce((_, value) => _.addTagRefinement(value), left);\n\nconst mergeFacetRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsRefinements: {\n      ...left.facetsRefinements,\n      ...right.facetsRefinements,\n    },\n  });\n\nconst mergeFacetsExcludes: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsExcludes: {\n      ...left.facetsExcludes,\n      ...right.facetsExcludes,\n    },\n  });\n\nconst mergeDisjunctiveFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    disjunctiveFacetsRefinements: {\n      ...left.disjunctiveFacetsRefinements,\n      ...right.disjunctiveFacetsRefinements,\n    },\n  });\n\nconst mergeNumericRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    numericRefinements: {\n      ...left.numericRefinements,\n      ...right.numericRefinements,\n    },\n  });\n\nconst mergeHierarchicalFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacetsRefinements: {\n      ...left.hierarchicalFacetsRefinements,\n      ...right.hierarchicalFacetsRefinements,\n    },\n  });\n\nconst mergeRuleContexts: Merger = (left, right) => {\n  const ruleContexts: string[] = uniq(\n    ([] as any)\n      .concat(left.ruleContexts)\n      .concat(right.ruleContexts)\n      .filter(Boolean)\n  );\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts,\n    });\n  }\n\n  return left;\n};\n\nexport const mergeSearchParameters = (\n  ...parameters: SearchParameters[]\n): SearchParameters =>\n  parameters.reduce((left, right) => {\n    const hierarchicalFacetsRefinementsMerged =\n      mergeHierarchicalFacetsRefinements(left, right);\n    const hierarchicalFacetsMerged = mergeHierarchicalFacets(\n      hierarchicalFacetsRefinementsMerged,\n      right\n    );\n    const tagRefinementsMerged = mergeTagRefinements(\n      hierarchicalFacetsMerged,\n      right\n    );\n    const numericRefinementsMerged = mergeNumericRefinements(\n      tagRefinementsMerged,\n      right\n    );\n    const disjunctiveFacetsRefinementsMerged =\n      mergeDisjunctiveFacetsRefinements(numericRefinementsMerged, right);\n    const facetsExcludesMerged = mergeFacetsExcludes(\n      disjunctiveFacetsRefinementsMerged,\n      right\n    );\n    const facetRefinementsMerged = mergeFacetRefinements(\n      facetsExcludesMerged,\n      right\n    );\n    const disjunctiveFacetsMerged = mergeDisjunctiveFacets(\n      facetRefinementsMerged,\n      right\n    );\n    const ruleContextsMerged = mergeRuleContexts(\n      disjunctiveFacetsMerged,\n      right\n    );\n    const facetsMerged = mergeFacets(ruleContextsMerged, right);\n\n    return mergeWithRest(facetsMerged, right);\n  });\n","// We aren't using the native `Array.prototype.findIndex` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `findIndex` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.findIndex` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\nexport function findIndex<TItem>(\n  array: TItem[],\n  comparator: (value: TItem) => boolean\n): number {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n","/**\n * Creates a new object with the same keys as the original object, but without the excluded keys.\n * @param source original object\n * @param excluded keys to remove from the original object\n * @returns the new object\n */\nexport function omit<\n  TSource extends Record<string, unknown>,\n  TExcluded extends keyof TSource\n>(source: TSource, excluded: TExcluded[]): Omit<TSource, TExcluded> {\n  if (source === null || source === undefined) {\n    return source;\n  }\n\n  type Output = Omit<TSource, TExcluded>;\n  return Object.keys(source).reduce((target, key) => {\n    if ((excluded as Array<keyof TSource>).indexOf(key) >= 0) {\n      return target;\n    }\n\n    const validKey = key as keyof Output;\n    target[validKey] = source[validKey];\n\n    return target;\n  }, {} as unknown as Output);\n}\n","type RangeOptions = {\n  start?: number;\n  end: number;\n  step?: number;\n};\n\nexport function range({ start = 0, end, step = 1 }: RangeOptions): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n","import type { InstantSearch, UiState } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function createInitArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget,\n  uiState: UiState\n) {\n  const helper = parent.getHelper()!;\n  return {\n    uiState,\n    helper,\n    parent,\n    instantSearchInstance,\n    state: helper.state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    scopedResults: [],\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n\nexport function createRenderArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget\n) {\n  const results = parent.getResults()!;\n\n  return {\n    helper: parent.getHelper()!,\n    parent,\n    instantSearchInstance,\n    results,\n    scopedResults: parent.getScopedResults(),\n    state: results._state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n","import { getHighlightFromSiblings } from './getHighlightFromSiblings';\n\nimport type { HighlightedParts } from '../../types';\n\nexport function reverseHighlightedParts(parts: HighlightedParts[]) {\n  if (!parts.some((part) => part.isHighlighted)) {\n    return parts.map((part) => ({ ...part, isHighlighted: false }));\n  }\n\n  return parts.map((part, i) => ({\n    ...part,\n    isHighlighted: !getHighlightFromSiblings(parts, i),\n  }));\n}\n","// eslint-disable-next-line no-restricted-globals\ntype BrowserCallback<TReturn> = (params: { window: typeof window }) => TReturn;\ntype SafelyRunOnBrowserOptions<TReturn> = {\n  /**\n   * Fallback to run on server environments.\n   */\n  fallback: () => TReturn;\n};\n\n/**\n * Runs code on browser environments safely.\n */\nexport function safelyRunOnBrowser<TReturn>(\n  callback: BrowserCallback<TReturn>,\n  { fallback }: SafelyRunOnBrowserOptions<TReturn> = {\n    fallback: () => undefined as unknown as TReturn,\n  }\n): TReturn {\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof window === 'undefined') {\n    return fallback();\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  return callback({ window });\n}\n","type ToArray<T> = T extends unknown[] ? T : T[];\n\nexport function toArray<T>(value: T): ToArray<T> {\n  return (Array.isArray(value) ? value : [value]) as ToArray<T>;\n}\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createConcurrentSafePromise,\n  addQueryID,\n  debounce,\n  addAbsolutePosition,\n  noop,\n  escapeHits,\n} from '../../lib/utils';\n\nimport type { DebouncedFunction } from '../../lib/utils';\nimport type {\n  Connector,\n  Hit,\n  FindAnswersOptions,\n  FindAnswersResponse,\n  WidgetRenderState,\n  SearchClient,\n} from '../../types';\n\ntype IndexWithAnswers = {\n  readonly findAnswers: any;\n};\n\nfunction hasFindAnswersMethod(\n  answersIndex: IndexWithAnswers | any\n): answersIndex is IndexWithAnswers {\n  return typeof (answersIndex as IndexWithAnswers).findAnswers === 'function';\n}\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true,\n});\n\nexport type AnswersRenderState = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Hit[];\n\n  /**\n   * Whether it's still loading the results from the Answers API.\n   */\n  isLoading: boolean;\n};\n\nexport type AnswersConnectorParams = {\n  /**\n   * Attributes to use for predictions.\n   * If empty, we use all `searchableAttributes` to find answers.\n   * All your `attributesForPrediction` must be part of your `searchableAttributes`.\n   */\n  attributesForPrediction?: string[];\n\n  /**\n   * The languages in the query. Currently only supports `en`.\n   */\n  queryLanguages: ['en'];\n\n  /**\n   * Maximum number of answers to retrieve from the Answers Engine.\n   * Cannot be greater than 1000.\n   * @default 1\n   */\n  nbHits?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce render\n   * @default 100\n   */\n  renderDebounceTime?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce search\n   * @default 100\n   */\n  searchDebounceTime?: number;\n\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Extra parameters to pass to findAnswers method.\n   * @default {}\n   */\n  extraParameters?: FindAnswersOptions;\n};\n\nexport type AnswersWidgetDescription = {\n  $$type: 'ais.answers';\n  renderState: AnswersRenderState;\n  indexRenderState: {\n    answers: WidgetRenderState<AnswersRenderState, AnswersConnectorParams>;\n  };\n};\n\nexport type AnswersConnector = Connector<\n  AnswersWidgetDescription,\n  AnswersConnectorParams\n>;\n\nconst connectAnswers: AnswersConnector = function connectAnswers(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      queryLanguages,\n      attributesForPrediction,\n      nbHits = 1,\n      renderDebounceTime = 100,\n      searchDebounceTime = 100,\n      escapeHTML = true,\n      extraParameters = {},\n    } = widgetParams || {};\n\n    // @ts-expect-error checking for the wrong value\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(\n        withUsage('The `queryLanguages` expects an array of strings.')\n      );\n    }\n\n    const runConcurrentSafePromise =\n      createConcurrentSafePromise<FindAnswersResponse<Hit>>();\n\n    let lastHits: FindAnswersResponse<Hit>['hits'] = [];\n    let isLoading = false;\n    const debouncedRender = debounce(renderFn, renderDebounceTime);\n\n    // this does not directly use DebouncedFunction<findAnswers>, since then the generic will disappear\n    let debouncedRefine: DebouncedFunction<\n      ReturnType<NonNullable<SearchClient['initIndex']>> extends {\n        findAnswers: infer FindAnswers;\n      }\n        ? FindAnswers\n        : any\n    >;\n\n    return {\n      $$type: 'ais.answers',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n        const answersIndex = instantSearchInstance.client.initIndex!(\n          state.index\n        );\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n        debouncedRefine = debounce(\n          answersIndex.findAnswers,\n          searchDebounceTime\n        );\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const query = renderOptions.state.query;\n        if (!query) {\n          // renders nothing with empty query\n          lastHits = [];\n          isLoading = false;\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n          return;\n        }\n\n        // render the loader\n        lastHits = [];\n        isLoading = true;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        // call /answers API\n        runConcurrentSafePromise(\n          debouncedRefine(query, queryLanguages, {\n            ...extraParameters,\n            nbHits,\n            attributesForPrediction,\n          }) as unknown as Promise<FindAnswersResponse<Hit>>\n        ).then((result) => {\n          if (!result) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && result.hits.length > 0) {\n            result.hits = escapeHits(result.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            result.hits,\n            0,\n            nbHits\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            result.queryID\n          );\n\n          lastHits = hitsWithAbsolutePositionAndQueryID;\n          isLoading = false;\n          debouncedRender(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        });\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          answers: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          hits: lastHits,\n          isLoading,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state;\n      },\n\n      getWidgetSearchParameters(state) {\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectAnswers;\n","export type MaybePromise<TResolution> =\n  | Readonly<Promise<TResolution>>\n  | Promise<TResolution>\n  | TResolution;\n\n// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise<TValue>() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: TValue | undefined = undefined;\n\n  return function runConcurrentSafePromise(promise: MaybePromise<TValue>) {\n    const currentPromiseId = ++basePromiseId;\n\n    return Promise.resolve(promise).then((x) => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  getWidgetAttribute,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  TransformItemsMetadata,\n  Widget,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n  connector: true,\n});\n\nexport type DynamicWidgetsRenderState = {\n  attributesToRender: string[];\n};\n\nexport type DynamicWidgetsConnectorParams = {\n  /**\n   * An array of widgets, displayed in the order defined by `facetOrdering`.\n   */\n  widgets: Widget[];\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?(args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n  }): Widget;\n\n  /**\n   * Function to transform the items to render.\n   * The function also exposes the full search response.\n   */\n  transformItems?: TransformItems<\n    string,\n    Omit<TransformItemsMetadata, 'results'> & {\n      results: NonNullable<TransformItemsMetadata['results']>;\n    }\n  >;\n\n  /**\n   * To prevent unneeded extra network requests when widgets mount or unmount,\n   * we request all facet values.\n   *\n   * @default ['*']\n   */\n  facets?: ['*'] | never[];\n\n  /**\n   * If you have more than 20 facet values pinned, you need to increase the\n   * maxValuesPerFacet to at least that value.\n   *\n   * @default 20\n   */\n  maxValuesPerFacet?: number;\n};\n\nexport type DynamicWidgetsWidgetDescription = {\n  $$type: 'ais.dynamicWidgets';\n  renderState: DynamicWidgetsRenderState;\n  indexRenderState: {\n    dynamicWidgets: DynamicWidgetsRenderState;\n  };\n};\n\nexport type DynamicWidgetsConnector = Connector<\n  DynamicWidgetsWidgetDescription,\n  DynamicWidgetsConnectorParams\n>;\n\nconst MAX_WILDCARD_FACETS = 20;\n\nconst connectDynamicWidgets: DynamicWidgetsConnector =\n  function connectDynamicWidgets(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        widgets,\n        maxValuesPerFacet = 20,\n        facets = ['*'],\n        transformItems = (items) => items,\n        fallbackWidget,\n      } = widgetParams;\n\n      if (\n        !(\n          widgets &&\n          Array.isArray(widgets) &&\n          widgets.every((widget) => typeof widget === 'object')\n        )\n      ) {\n        throw new Error(\n          withUsage('The `widgets` option expects an array of widgets.')\n        );\n      }\n\n      if (\n        !(\n          Array.isArray(facets) &&\n          facets.length <= 1 &&\n          (facets[0] === '*' || facets[0] === undefined)\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            `The \\`facets\\` option only accepts [] or [\"*\"], you passed ${JSON.stringify(\n              facets\n            )}`\n          )\n        );\n      }\n\n      const localWidgets: Map<string, { widget: Widget; isMounted: boolean }> =\n        new Map();\n\n      return {\n        $$type: 'ais.dynamicWidgets',\n        init(initOptions) {\n          widgets.forEach((widget) => {\n            const attribute = getWidgetAttribute(widget, initOptions);\n            localWidgets.set(attribute, { widget, isMounted: false });\n          });\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n        render(renderOptions) {\n          const { parent } = renderOptions;\n          const renderState = this.getWidgetRenderState(renderOptions);\n\n          const widgetsToUnmount: Widget[] = [];\n          const widgetsToMount: Widget[] = [];\n\n          if (fallbackWidget) {\n            renderState.attributesToRender.forEach((attribute) => {\n              if (!localWidgets.has(attribute)) {\n                const widget = fallbackWidget({ attribute });\n                localWidgets.set(attribute, { widget, isMounted: false });\n              }\n            });\n          }\n\n          localWidgets.forEach(({ widget, isMounted }, attribute) => {\n            const shouldMount =\n              renderState.attributesToRender.indexOf(attribute) > -1;\n\n            if (!isMounted && shouldMount) {\n              widgetsToMount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: true,\n              });\n            } else if (isMounted && !shouldMount) {\n              widgetsToUnmount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: false,\n              });\n            }\n          });\n\n          parent.addWidgets(widgetsToMount);\n          // make sure this only happens after the regular render, otherwise it\n          // happens too quick, since render is \"deferred\" for the next microtask,\n          // so this needs to be a whole task later\n          setTimeout(() => parent.removeWidgets(widgetsToUnmount), 0);\n\n          renderFn(\n            {\n              ...renderState,\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n        dispose({ parent }) {\n          const toRemove: Widget[] = [];\n          localWidgets.forEach(({ widget, isMounted }) => {\n            if (isMounted) {\n              toRemove.push(widget);\n            }\n          });\n          parent.removeWidgets(toRemove);\n\n          unmountFn();\n        },\n        getWidgetSearchParameters(state) {\n          // broadening the scope of facets to avoid conflict between never and *\n          return (facets as string[]).reduce(\n            (acc, curr) => acc.addFacet(curr),\n            state.setQueryParameters({\n              maxValuesPerFacet: Math.max(\n                maxValuesPerFacet || 0,\n                state.maxValuesPerFacet || 0\n              ),\n            })\n          );\n        },\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            dynamicWidgets: this.getWidgetRenderState(renderOptions),\n          };\n        },\n        getWidgetRenderState({ results, state }) {\n          if (!results) {\n            return { attributesToRender: [], widgetParams };\n          }\n\n          const attributesToRender = transformItems(\n            results.renderingContent?.facetOrdering?.facets?.order ?? [],\n            { results }\n          );\n\n          if (!Array.isArray(attributesToRender)) {\n            throw new Error(\n              withUsage(\n                'The `transformItems` option expects a function that returns an Array.'\n              )\n            );\n          }\n\n          warning(\n            maxValuesPerFacet >= (state.maxValuesPerFacet || 0),\n            `The maxValuesPerFacet set by dynamic widgets (${maxValuesPerFacet}) is smaller than one of the limits set by a widget (${state.maxValuesPerFacet}). This causes a mismatch in query parameters and thus an extra network request when that widget is mounted.`\n          );\n\n          warning(\n            attributesToRender.length <= MAX_WILDCARD_FACETS ||\n              widgetParams.facets !== undefined,\n            `More than ${MAX_WILDCARD_FACETS} facets are requested to be displayed without explicitly setting which facets to retrieve. This could have a performance impact. Set \"facets\" to [] to do two smaller network requests, or explicitly to ['*'] to avoid this warning.`\n          );\n\n          return {\n            attributesToRender,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nexport default connectDynamicWidgets;\n","import {\n  checkRendering,\n  clearRefinements,\n  getRefinements,\n  createDocumentationMessageGenerator,\n  noop,\n  uniq,\n  mergeSearchParameters,\n} from '../../lib/utils';\n\nimport type {\n  TransformItems,\n  CreateURL,\n  Connector,\n  WidgetRenderState,\n  ScopedResult,\n} from '../../types';\nimport type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n  connector: true,\n});\n\nexport type ClearRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the refinements to clear (all by default). Cannot be used with `excludedAttributes`.\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the refinements to clear. Cannot be used with `includedAttributes`.\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<string>;\n};\n\nexport type ClearRefinementsRenderState = {\n  /**\n   * Triggers the clear of all the currently refined values.\n   */\n  refine: () => void;\n\n  /**\n   * Indicates if search state is refined.\n   * @deprecated prefer reading canRefine\n   */\n  hasRefinements: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Creates a url for the next state when refinements are cleared.\n   */\n  createURL: CreateURL<void>;\n};\n\nexport type ClearRefinementsWidgetDescription = {\n  $$type: 'ais.clearRefinements';\n  renderState: ClearRefinementsRenderState;\n  indexRenderState: {\n    clearRefinements: WidgetRenderState<\n      ClearRefinementsRenderState,\n      ClearRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type ClearRefinementsConnector = Connector<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n>;\n\ntype AttributesToClear = {\n  helper: AlgoliaSearchHelper;\n  items: string[];\n};\n\nconst connectClearRefinements: ClearRefinementsConnector =\n  function connectClearRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        includedAttributes = [],\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          ClearRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        widgetParams &&\n        widgetParams.includedAttributes &&\n        widgetParams.excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      type ConnectorState = {\n        refine(): void;\n        createURL(): string;\n        attributesToClear: AttributesToClear[];\n      };\n\n      const connectorState: ConnectorState = {\n        refine: noop,\n        createURL: () => '',\n        attributesToClear: [],\n      };\n\n      const cachedRefine = () => connectorState.refine();\n      const cachedCreateURL = () => connectorState.createURL();\n\n      return {\n        $$type: 'ais.clearRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            clearRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ createURL, scopedResults, results }) {\n          connectorState.attributesToClear = scopedResults.reduce<\n            Array<ReturnType<typeof getAttributesToClear>>\n          >((attributesToClear, scopedResult) => {\n            return attributesToClear.concat(\n              getAttributesToClear({\n                scopedResult,\n                includedAttributes,\n                excludedAttributes,\n                transformItems,\n                results,\n              })\n            );\n          }, []);\n\n          connectorState.refine = () => {\n            connectorState.attributesToClear.forEach(\n              ({ helper: indexHelper, items }) => {\n                indexHelper\n                  .setState(\n                    clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    })\n                  )\n                  .search();\n              }\n            );\n          };\n\n          connectorState.createURL = () =>\n            createURL(\n              mergeSearchParameters(\n                ...connectorState.attributesToClear.map(\n                  ({ helper: indexHelper, items }) => {\n                    return clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    });\n                  }\n                )\n              )\n            );\n\n          const canRefine = connectorState.attributesToClear.some(\n            (attributeToClear) => attributeToClear.items.length > 0\n          );\n\n          return {\n            canRefine,\n            hasRefinements: canRefine,\n            refine: cachedRefine,\n            createURL: cachedCreateURL,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getAttributesToClear({\n  scopedResult,\n  includedAttributes,\n  excludedAttributes,\n  transformItems,\n  results,\n}: {\n  scopedResult: ScopedResult;\n  includedAttributes: string[];\n  excludedAttributes: string[];\n  transformItems: TransformItems<string>;\n  results: SearchResults | undefined;\n}): AttributesToClear {\n  const includesQuery =\n    includedAttributes.indexOf('query') !== -1 ||\n    excludedAttributes.indexOf('query') === -1;\n\n  return {\n    helper: scopedResult.helper,\n    items: transformItems(\n      uniq(\n        getRefinements(\n          scopedResult.results,\n          scopedResult.helper.state,\n          includesQuery\n        )\n          .map((refinement) => refinement.attribute)\n          .filter(\n            (attribute) =>\n              // If the array is empty (default case), we keep all the attributes\n              includedAttributes.length === 0 ||\n              // Otherwise, only add the specified attributes\n              includedAttributes.indexOf(attribute) !== -1\n          )\n          .filter(\n            (attribute) =>\n              // If the query is included, we ignore the default `excludedAttributes = ['query']`\n              (attribute === 'query' && includesQuery) ||\n              // Otherwise, ignore the excluded attributes\n              excludedAttributes.indexOf(attribute) === -1\n          )\n      ),\n      { results }\n    ),\n  };\n}\n\nexport default connectClearRefinements;\n","import {\n  getRefinements,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type {\n  Refinement,\n  FacetRefinement,\n  NumericRefinement,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nexport type CurrentRefinementsConnectorParamsRefinement = {\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The type of the refinement.\n   */\n  type:\n    | 'facet'\n    | 'exclude'\n    | 'disjunctive'\n    | 'hierarchical'\n    | 'numeric'\n    | 'query'\n    | 'tag';\n\n  /**\n   * The raw value of the refinement.\n   */\n  value: string | number;\n\n  /**\n   * The label of the refinement to display.\n   */\n  label: string;\n\n  /**\n   * The value of the operator (only if applicable).\n   */\n  operator?: string;\n\n  /**\n   * The number of found items (only if applicable).\n   */\n  count?: number;\n\n  /**\n   * Whether the count is exhaustive (only if applicable).\n   */\n  exhaustive?: boolean;\n};\n\nexport type CurrentRefinementsConnectorParamsItem = {\n  /**\n   * The index name.\n   */\n  indexName: string;\n\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The textual representation of this attribute.\n   */\n  label: string;\n\n  /**\n   * Currently applied refinements.\n   */\n  refinements: CurrentRefinementsConnectorParamsRefinement[];\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n};\n\nexport type CurrentRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the widget (all by default).\n   * Cannot be used with `excludedAttributes`.\n   *\n   * @default `[]`\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the widget.\n   * Cannot be used with `includedAttributes`.\n   *\n   * @default `['query']`\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<CurrentRefinementsConnectorParamsItem>;\n};\n\nexport type CurrentRefinementsRenderState = {\n  /**\n   * All the currently refined items, grouped by attribute.\n   */\n  items: CurrentRefinementsConnectorParamsItem[];\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n\n  /**\n   * Generates a URL for the next state.\n   */\n  createURL: CreateURL<CurrentRefinementsConnectorParamsRefinement>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n  connector: true,\n});\n\nexport type CurrentRefinementsWidgetDescription = {\n  $$type: 'ais.currentRefinements';\n  renderState: CurrentRefinementsRenderState;\n  indexRenderState: {\n    currentRefinements: WidgetRenderState<\n      CurrentRefinementsRenderState,\n      CurrentRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type CurrentRefinementsConnector = Connector<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n>;\n\nconst connectCurrentRefinements: CurrentRefinementsConnector =\n  function connectCurrentRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      if (\n        (widgetParams || {}).includedAttributes &&\n        (widgetParams || {}).excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      const {\n        includedAttributes,\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          CurrentRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      return {\n        $$type: 'ais.currentRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            currentRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ results, scopedResults, createURL, helper }) {\n          function getItems() {\n            if (!results) {\n              return transformItems(\n                getRefinementsItems({\n                  results: {},\n                  helper,\n                  includedAttributes,\n                  excludedAttributes,\n                }),\n                { results }\n              );\n            }\n\n            return scopedResults.reduce<\n              CurrentRefinementsConnectorParamsItem[]\n            >((accResults, scopedResult) => {\n              return accResults.concat(\n                transformItems(\n                  getRefinementsItems({\n                    results: scopedResult.results,\n                    helper: scopedResult.helper,\n                    includedAttributes,\n                    excludedAttributes,\n                  }),\n                  { results }\n                )\n              );\n            }, []);\n          }\n\n          const items = getItems();\n\n          return {\n            items,\n            canRefine: items.length > 0,\n            refine: (refinement) => clearRefinement(helper, refinement),\n            createURL: (refinement) =>\n              createURL(clearRefinementFromState(helper.state, refinement)),\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getRefinementsItems({\n  results,\n  helper,\n  includedAttributes,\n  excludedAttributes,\n}: {\n  results: SearchResults | Record<string, never>;\n  helper: AlgoliaSearchHelper;\n  includedAttributes: CurrentRefinementsConnectorParams['includedAttributes'];\n  excludedAttributes: CurrentRefinementsConnectorParams['excludedAttributes'];\n}): CurrentRefinementsConnectorParamsItem[] {\n  const includesQuery =\n    (includedAttributes || []).indexOf('query') !== -1 ||\n    (excludedAttributes || []).indexOf('query') === -1;\n\n  const filterFunction = includedAttributes\n    ? (item: CurrentRefinementsConnectorParamsRefinement) =>\n        includedAttributes.indexOf(item.attribute) !== -1\n    : (item: CurrentRefinementsConnectorParamsRefinement) =>\n        excludedAttributes!.indexOf(item.attribute) === -1;\n\n  const items = getRefinements(results, helper.state, includesQuery)\n    .map(normalizeRefinement)\n    .filter(filterFunction);\n\n  return items.reduce<CurrentRefinementsConnectorParamsItem[]>(\n    (allItems, currentItem) => [\n      ...allItems.filter((item) => item.attribute !== currentItem.attribute),\n      {\n        indexName: helper.state.index,\n        attribute: currentItem.attribute,\n        label: currentItem.attribute,\n        refinements: items\n          .filter((result) => result.attribute === currentItem.attribute)\n          // We want to keep the order of refinements except the numeric ones.\n          .sort((a, b) =>\n            a.type === 'numeric' ? (a.value as number) - (b.value as number) : 0\n          ),\n        refine: (refinement) => clearRefinement(helper, refinement),\n      },\n    ],\n    []\n  );\n}\n\nfunction clearRefinementFromState(\n  state: SearchParameters,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): SearchParameters {\n  state = state.resetPage();\n  switch (refinement.type) {\n    case 'facet':\n      return state.removeFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'disjunctive':\n      return state.removeDisjunctiveFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'hierarchical':\n      return state.removeHierarchicalFacetRefinement(refinement.attribute);\n    case 'exclude':\n      return state.removeExcludeRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'numeric':\n      return state.removeNumericRefinement(\n        refinement.attribute,\n        refinement.operator,\n        String(refinement.value)\n      );\n    case 'tag':\n      return state.removeTagRefinement(String(refinement.value));\n    case 'query':\n      return state.setQueryParameter('query', '');\n    default:\n      warning(\n        false,\n        `The refinement type \"${refinement.type}\" does not exist and cannot be cleared from the current refinements.`\n      );\n      return state;\n  }\n}\n\nfunction clearRefinement(\n  helper: AlgoliaSearchHelper,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): void {\n  helper.setState(clearRefinementFromState(helper.state, refinement)).search();\n}\n\nfunction getOperatorSymbol(operator: SearchParameters.Operator): string {\n  switch (operator) {\n    case '>=':\n      return '≥';\n    case '<=':\n      return '≤';\n    default:\n      return operator;\n  }\n}\n\nfunction normalizeRefinement(\n  refinement: Refinement\n): CurrentRefinementsConnectorParamsRefinement {\n  const value = getValue(refinement);\n  const label = (refinement as NumericRefinement).operator\n    ? `${getOperatorSymbol(\n        (refinement as NumericRefinement).operator as SearchParameters.Operator\n      )} ${refinement.name}`\n    : refinement.name;\n\n  const normalizedRefinement: CurrentRefinementsConnectorParamsRefinement = {\n    attribute: refinement.attribute,\n    type: refinement.type,\n    value,\n    label,\n  };\n\n  if ((refinement as NumericRefinement).operator !== undefined) {\n    normalizedRefinement.operator = (refinement as NumericRefinement).operator;\n  }\n  if ((refinement as FacetRefinement).count !== undefined) {\n    normalizedRefinement.count = (refinement as FacetRefinement).count;\n  }\n  if ((refinement as FacetRefinement).exhaustive !== undefined) {\n    normalizedRefinement.exhaustive = (\n      refinement as FacetRefinement\n    ).exhaustive;\n  }\n\n  return normalizedRefinement;\n}\n\nfunction getValue(refinement: Refinement) {\n  if (refinement.type === 'numeric') {\n    return Number(refinement.name);\n  }\n\n  if ('escapedValue' in refinement) {\n    return refinement.escapedValue;\n  }\n\n  return refinement.name;\n}\n\nexport default connectCurrentRefinements;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  isEqual,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  TransformItems,\n  RenderOptions,\n  Widget,\n  SortBy,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['name:asc'];\n\nexport type HierarchicalMenuItem = {\n  /**\n   * Value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n  /**\n   * n+1 level of items, same structure HierarchicalMenuItem\n   */\n  data: HierarchicalMenuItem[] | null;\n};\n\nexport type HierarchicalMenuConnectorParams = {\n  /**\n   *  Attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string | null;\n  /**\n   * Show the siblings of the selected parent levels of the current refined value. This\n   * does not impact the root level.\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n};\n\nexport type HierarchicalMenuRenderState = {\n  /**\n   * Creates an url for the next state for a clicked item.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Values to be rendered.\n   */\n  items: HierarchicalMenuItem[];\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore: () => void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type HierarchicalMenuWidgetDescription = {\n  $$type: 'ais.hierarchicalMenu';\n  renderState: HierarchicalMenuRenderState;\n  indexRenderState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: WidgetRenderState<\n        HierarchicalMenuRenderState,\n        HierarchicalMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: string[];\n    };\n  };\n};\n\nexport type HierarchicalMenuConnector = Connector<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n>;\n\n/**\n * **HierarchicalMenu** connector provides the logic to build a custom widget\n * that will give the user the ability to explore facets in a tree-like structure.\n *\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two\n * levels deep.\n *\n * @type {Connector}\n * @param {function(HierarchicalMenuRenderingOptions, boolean)} renderFn Rendering function for the custom **HierarchicalMenu** widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomHierarchicalMenuWidgetParams)} Re-usable widget factory for a custom **HierarchicalMenu** widget.\n */\nconst connectHierarchicalMenu: HierarchicalMenuConnector =\n  function connectHierarchicalMenu(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attributes,\n        separator = ' > ',\n        rootPath = null,\n        showParentLevel = true,\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        transformItems = ((items) => items) as NonNullable<\n          HierarchicalMenuConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        !attributes ||\n        !Array.isArray(attributes) ||\n        attributes.length === 0\n      ) {\n        throw new Error(\n          withUsage('The `attributes` option expects an array of strings.')\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('The `showMoreLimit` option must be greater than `limit`.')\n        );\n      }\n\n      type ThisWidget = Widget<\n        HierarchicalMenuWidgetDescription & {\n          widgetParams: typeof widgetParams;\n        }\n      >;\n\n      // we need to provide a hierarchicalFacet name for the search state\n      // so that we can always map $hierarchicalFacetName => real attributes\n      // we use the first attribute name\n      const [hierarchicalFacetName] = attributes;\n\n      let sendEvent: HierarchicalMenuRenderState['sendEvent'];\n\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      let _refine: HierarchicalMenuRenderState['refine'] | undefined;\n\n      let isShowingMore = false;\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      function _prepareFacetValues(\n        facetValues: SearchResults.HierarchicalFacet[]\n      ): HierarchicalMenuItem[] {\n        return facetValues\n          .slice(0, getLimit())\n          .map(\n            ({ name: label, escapedValue: value, data, path, ...subValue }) => {\n              const item: HierarchicalMenuItem = {\n                ...subValue,\n                value,\n                label,\n                data: null,\n              };\n              if (Array.isArray(data)) {\n                item.data = _prepareFacetValues(data);\n              }\n              return item;\n            }\n          );\n      }\n\n      return {\n        $$type: 'ais.hierarchicalMenu',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .setQueryParameter('maxValuesPerFacet', undefined);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            hierarchicalMenu: {\n              ...renderState.hierarchicalMenu,\n              [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          results,\n          state,\n          createURL,\n          instantSearchInstance,\n          helper,\n        }) {\n          let items: HierarchicalMenuRenderState['items'] = [];\n          let canToggleShowMore = false;\n\n          // Bind createURL to this specific attribute\n          function _createURL(facetValue: string) {\n            return createURL(\n              state\n                .resetPage()\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n            );\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute(facetValue) {\n                const index = facetValue.split(separator).length - 1;\n\n                return attributes[index];\n              },\n              widgetType: this.$$type,\n            });\n          }\n\n          if (!_refine) {\n            _refine = function (facetValue) {\n              sendEvent('click', facetValue);\n              helper\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n                .search();\n            };\n          }\n\n          if (results) {\n            const facetValues = results.getFacetValues(hierarchicalFacetName, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            const facetItems =\n              facetValues && !Array.isArray(facetValues) && facetValues.data\n                ? facetValues.data\n                : [];\n\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            const hasExhaustiveItems =\n              (state.maxValuesPerFacet || 0) > getLimit()\n                ? facetItems.length <= getLimit()\n                : facetItems.length < getLimit();\n\n            canToggleShowMore =\n              showMore && (isShowingMore || !hasExhaustiveItems);\n\n            items = transformItems(_prepareFacetValues(facetItems), {\n              results,\n            });\n          }\n\n          return {\n            items,\n            refine: _refine,\n            canRefine: items.length > 0,\n            createURL: _createURL,\n            sendEvent,\n            widgetParams,\n            isShowingMore,\n            toggleShowMore: cachedToggleShowMore,\n            canToggleShowMore,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const path = searchParameters.getHierarchicalFacetBreadcrumb(\n            hierarchicalFacetName\n          );\n\n          if (!path.length) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            hierarchicalMenu: {\n              ...uiState.hierarchicalMenu,\n              [hierarchicalFacetName]: path,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const values =\n            uiState.hierarchicalMenu &&\n            uiState.hierarchicalMenu[hierarchicalFacetName];\n\n          if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n            const facet = searchParameters.getHierarchicalFacetByName(\n              hierarchicalFacetName\n            );\n\n            warning(\n              isEqual(facet.attributes, attributes) &&\n                facet.separator === separator &&\n                facet.rootPath === rootPath,\n              'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n            );\n          }\n\n          const withFacetConfiguration = searchParameters\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .addHierarchicalFacet({\n              name: hierarchicalFacetName,\n              attributes,\n              separator,\n              rootPath,\n              showParentLevel,\n            });\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            return withMaxValuesPerFacet.setQueryParameters({\n              hierarchicalFacetsRefinements: {\n                ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n                [hierarchicalFacetName]: [],\n              },\n            });\n          }\n\n          return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n            hierarchicalFacetName,\n            values.join(separator)\n          );\n        },\n      };\n    };\n  };\n\nexport default connectHierarchicalMenu;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  addAbsolutePosition,\n  addQueryID,\n  createSendEventForHits,\n  createBindEventForHits,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport type {\n  TransformItems,\n  Connector,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits',\n  connector: true,\n});\n\nexport type HitsRenderState<THit extends BaseHit = BaseHit> = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n\n  /**\n   * Sends an event to the Insights middleware.\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string for the `data-insights-event` attribute for the Insights middleware\n   */\n  bindEvent: BindEventForHits;\n};\n\nexport type HitsConnectorParams<THit extends BaseHit = BaseHit> = {\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n};\n\nexport type HitsWidgetDescription<THit extends BaseHit = BaseHit> = {\n  $$type: 'ais.hits';\n  renderState: HitsRenderState<THit>;\n  indexRenderState: {\n    hits: WidgetRenderState<HitsRenderState<THit>, HitsConnectorParams<THit>>;\n  };\n};\n\nexport type HitsConnector<THit extends BaseHit = BaseHit> = Connector<\n  HitsWidgetDescription<THit>,\n  HitsConnectorParams<THit>\n>;\n\nconst connectHits: HitsConnector = function connectHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        HitsConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n\n    return {\n      $$type: 'ais.hits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        renderState.sendEvent('view', renderState.hits);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!bindEvent) {\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n            instantSearchInstance,\n          });\n        }\n\n        if (!results) {\n          return {\n            hits: [],\n            results: undefined,\n            sendEvent,\n            bindEvent,\n            widgetParams,\n          };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        const hitsWithAbsolutePosition = addAbsolutePosition(\n          results.hits,\n          results.page,\n          results.hitsPerPage\n        );\n\n        const hitsWithAbsolutePositionAndQueryID = addQueryID(\n          hitsWithAbsolutePosition,\n          results.queryID\n        );\n\n        const transformedHits = transformItems(\n          hitsWithAbsolutePositionAndQueryID,\n          { results }\n        );\n\n        return {\n          hits: transformedHits,\n          results,\n          sendEvent,\n          bindEvent,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetSearchParameters(state) {\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(TAG_PLACEHOLDER);\n      },\n    };\n  };\n};\n\nexport default connectHits;\n","import {\n  uniq,\n  find,\n  createDocumentationMessageGenerator,\n  warning,\n} from '../utils';\n\nimport type {\n  Hit,\n  InsightsClient,\n  InsightsClientMethod,\n  InsightsClientPayload,\n  Connector,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst getSelectedHits = (hits: Hit[], selectedObjectIDs: string[]): Hit[] => {\n  return selectedObjectIDs.map((objectID) => {\n    const hit = find(hits, (h) => h.objectID === objectID);\n    if (typeof hit === 'undefined') {\n      throw new Error(\n        `Could not find objectID \"${objectID}\" passed to \\`clickedObjectIDsAfterSearch\\` in the returned hits. This is necessary to infer the absolute position and the query ID.`\n      );\n    }\n    return hit;\n  });\n};\n\nconst getQueryID = (selectedHits: Hit[]): string => {\n  const queryIDs = uniq(selectedHits.map((hit) => hit.__queryID));\n  if (queryIDs.length > 1) {\n    throw new Error(\n      'Insights currently allows a single `queryID`. The `objectIDs` provided map to multiple `queryID`s.'\n    );\n  }\n  const queryID = queryIDs[0];\n  if (typeof queryID !== 'string') {\n    throw new Error(\n      `Could not infer \\`queryID\\`. Ensure InstantSearch \\`clickAnalytics: true\\` was added with the Configure widget.\n\nSee: https://alg.li/lNiZZ7`\n    );\n  }\n  return queryID;\n};\n\nconst getPositions = (selectedHits: Hit[]): number[] =>\n  selectedHits.map((hit) => hit.__position);\n\nexport const inferPayload = ({\n  method,\n  results,\n  hits,\n  objectIDs,\n}: {\n  method: InsightsClientMethod;\n  results: SearchResults;\n  hits: Hit[];\n  objectIDs: string[];\n}): Omit<InsightsClientPayload, 'eventName'> => {\n  const { index } = results;\n  const selectedHits = getSelectedHits(hits, objectIDs);\n  const queryID = getQueryID(selectedHits);\n\n  switch (method) {\n    case 'clickedObjectIDsAfterSearch': {\n      const positions = getPositions(selectedHits);\n      return { index, queryID, objectIDs, positions };\n    }\n\n    case 'convertedObjectIDsAfterSearch':\n      return { index, queryID, objectIDs };\n\n    default:\n      throw new Error(`Unsupported method passed to insights: \"${method}\".`);\n  }\n};\n\nconst wrapInsightsClient =\n  (\n    aa: InsightsClient | null,\n    results: SearchResults,\n    hits: Hit[]\n  ): InsightsClient =>\n  (method, ...payloads) => {\n    const [payload] = payloads;\n    warning(\n      false,\n      `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n    if (!aa) {\n      const withInstantSearchUsage = createDocumentationMessageGenerator({\n        name: 'instantsearch',\n      });\n      throw new Error(\n        withInstantSearchUsage(\n          'The `insightsClient` option has not been provided to `instantsearch`.'\n        )\n      );\n    }\n    if (!Array.isArray(payload.objectIDs)) {\n      throw new TypeError('Expected `objectIDs` to be an array.');\n    }\n    const inferredPayload = inferPayload({\n      method,\n      results,\n      hits,\n      objectIDs: payload.objectIDs,\n    });\n    aa(method, { ...inferredPayload, ...payload });\n  };\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n * It passes `insights` to `HitsWithInsightsListener` and `InfiniteHitsWithInsightsListener`.\n */\nexport default function withInsights<TConnector extends Connector<any, any>>(\n  connector: TConnector\n): TConnector {\n  return ((renderFn, unmountFn) =>\n    connector((renderOptions, isFirstRender) => {\n      const { results, hits, instantSearchInstance } = renderOptions;\n      if (results && hits && instantSearchInstance) {\n        const insights = wrapInsightsClient(\n          instantSearchInstance.insightsClient,\n          results,\n          hits\n        );\n        return renderFn({ ...renderOptions, insights }, isFirstRender);\n      }\n      return renderFn(renderOptions, isFirstRender);\n    }, unmountFn)) as TConnector;\n}\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&(\"function\"==typeof u.type&&null!=x[h].__e&&x[h].__e==u.__d&&(u.__d=_(i,h+1)),N(x[h],x[h]));if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof H){if(g=u.props,m=(a=H.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in H&&H.prototype.render?u.__c=h=new H(g,x):(u.__c=h=new d(g,x),h.constructor=H,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=H.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,H.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==H.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==H.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,A=l.__r,C=0,\"prototype\"in H&&H.prototype.render)h.state=h.__s,h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context);else do{h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++C<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),$=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray($)?$:[$],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import { warning, serializePayload, deserializePayload } from '../lib/utils';\n\nimport type { InsightsClientMethod, InsightsClientPayload } from '../types';\n\nexport function readDataAttributes(domElement: HTMLElement): {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n} {\n  const method = domElement.getAttribute(\n    'data-insights-method'\n  ) as InsightsClientMethod;\n\n  const serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    const payload =\n      deserializePayload<Partial<InsightsClientPayload>>(serializedPayload);\n    return { method, payload };\n  } catch (error) {\n    throw new Error(\n      'The insights helper was unable to parse `data-insights-payload`.'\n    );\n  }\n}\n\nexport function hasDataAttributes(domElement: HTMLElement): boolean {\n  return domElement.hasAttribute('data-insights-method');\n}\n\nexport function writeDataAttributes({\n  method,\n  payload,\n}: {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n}): string {\n  if (typeof payload !== 'object') {\n    throw new Error(`The insights helper expects the payload to be an object.`);\n  }\n\n  let serializedPayload: string;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(`Could not JSON serialize the payload object.`);\n  }\n\n  return `data-insights-method=\"${method}\" data-insights-payload=\"${serializedPayload}\"`;\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(\n  method: InsightsClientMethod,\n  payload: Partial<InsightsClientPayload>\n): string {\n  warning(\n    false,\n    `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return writeDataAttributes({ method, payload });\n}\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport { readDataAttributes, hasDataAttributes } from '../../helpers/insights';\nimport { deserializePayload } from '../utils';\n\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { InsightsClient } from '../../types';\n\ntype WithInsightsListenerProps = {\n  [key: string]: unknown;\n  insights: InsightsClient;\n  sendEvent?: (event: InsightsEvent) => void;\n};\n\nconst findInsightsTarget = (\n  startElement: HTMLElement | null,\n  endElement: HTMLElement | null,\n  validator: (element: HTMLElement) => boolean\n): HTMLElement | null => {\n  let element: HTMLElement | null = startElement;\n  while (element && !validator(element)) {\n    if (element === endElement) {\n      return null;\n    }\n    element = element.parentElement;\n  }\n  return element;\n};\n\nconst parseInsightsEvent = (element: HTMLElement): InsightsEvent[] => {\n  const serializedPayload = element.getAttribute('data-insights-event');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights middleware expects `data-insights-event` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    return deserializePayload(serializedPayload);\n  } catch (error) {\n    throw new Error(\n      'The insights middleware was unable to parse `data-insights-event`.'\n    );\n  }\n};\n\nconst insightsListener = (BaseComponent: any) => {\n  function WithInsightsListener(props: WithInsightsListenerProps) {\n    const handleClick = (event: MouseEvent): void => {\n      if (props.sendEvent) {\n        // new way with insights middleware\n        const targetWithEvent = findInsightsTarget(\n          event.target as HTMLElement | null,\n          event.currentTarget as HTMLElement | null,\n          (element) => element.hasAttribute('data-insights-event')\n        );\n        if (targetWithEvent) {\n          const payload = parseInsightsEvent(targetWithEvent);\n\n          payload.forEach((single) => props.sendEvent!(single));\n        }\n      }\n\n      // old way, e.g. instantsearch.insights(\"clickedObjectIDsAfterSearch\", { .. })\n      const insightsTarget = findInsightsTarget(\n        event.target as HTMLElement | null,\n        event.currentTarget as HTMLElement | null,\n        (element) => hasDataAttributes(element)\n      );\n      if (insightsTarget) {\n        const { method, payload } = readDataAttributes(insightsTarget);\n        props.insights(method, payload);\n      }\n    };\n\n    return (\n      <div onClick={handleClick}>\n        <BaseComponent {...props} />\n      </div>\n    );\n  }\n\n  return WithInsightsListener;\n};\n\nexport default insightsListener;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  InitOptions,\n  RenderOptions,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n  connector: true,\n});\n\nexport type HitsPerPageRenderStateItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * Indicates if it's the current refined value.\n   */\n  isRefined: boolean;\n};\n\nexport type HitsPerPageConnectorParamsItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * The default hits per page on first search.\n   *\n   * @default false\n   */\n  default?: boolean;\n};\n\nexport type HitsPerPageConnectorParams = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HitsPerPageRenderStateItem>;\n};\n\nexport type HitsPerPageRenderState = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageRenderStateItem[];\n\n  /**\n   * Creates the URL for a single item name in the list.\n   *\n   * @internal\n   */\n  createURL: CreateURL<HitsPerPageConnectorParamsItem['value']>;\n\n  /**\n   * Sets the number of hits per page and triggers a search.\n   */\n  refine: (value: number) => void;\n\n  /**\n   * Indicates whether or not the search has results.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n};\n\nexport type HitsPerPageWidgetDescription = {\n  $$type: 'ais.hitsPerPage';\n  renderState: HitsPerPageRenderState;\n  indexRenderState: {\n    hitsPerPage: WidgetRenderState<\n      HitsPerPageRenderState,\n      HitsPerPageConnectorParams\n    >;\n  };\n  indexUiState: {\n    hitsPerPage: number;\n  };\n};\n\nexport type HitsPerPageConnector = Connector<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n>;\n\nconst connectHitsPerPage: HitsPerPageConnector = function connectHitsPerPage(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      items: userItems,\n      transformItems = ((items) => items) as NonNullable<\n        HitsPerPageConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(userItems)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    let items = userItems;\n\n    const defaultItems = items.filter((item) => item.default === true);\n\n    if (defaultItems.length === 0) {\n      throw new Error(\n        withUsage(`A default value must be specified in \\`items\\`.`)\n      );\n    }\n\n    if (defaultItems.length > 1) {\n      throw new Error(\n        withUsage('More than one default value is specified in `items`.')\n      );\n    }\n\n    const defaultItem = defaultItems[0];\n\n    const normalizeItems = ({ hitsPerPage }: SearchParameters) => {\n      return items.map((item) => ({\n        ...item,\n        isRefined: Number(item.value) === Number(hitsPerPage),\n      }));\n    };\n\n    type ConnectorState = {\n      getRefine: (\n        helper: AlgoliaSearchHelper\n      ) => (value: HitsPerPageConnectorParamsItem['value']) => any;\n      createURLFactory: (props: {\n        state: SearchParameters;\n        createURL: (InitOptions | RenderOptions)['createURL'];\n      }) => HitsPerPageRenderState['createURL'];\n    };\n\n    const connectorState: ConnectorState = {\n      getRefine: (helper) => (value) => {\n        return !value && value !== 0\n          ? helper.setQueryParameter('hitsPerPage', undefined).search()\n          : helper.setQueryParameter('hitsPerPage', value).search();\n      },\n      createURLFactory:\n        ({ state, createURL }) =>\n        (value) =>\n          createURL(\n            state\n              .resetPage()\n              .setQueryParameter(\n                'hitsPerPage',\n                !value && value !== 0 ? undefined : value\n              )\n          ),\n    };\n\n    return {\n      $$type: 'ais.hitsPerPage',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n\n        const isCurrentInOptions = items.some(\n          (item) => Number(state.hitsPerPage) === Number(item.value)\n        );\n\n        if (!isCurrentInOptions) {\n          warning(\n            state.hitsPerPage !== undefined,\n            `\n\\`hitsPerPage\\` is not defined.\nThe option \\`hitsPerPage\\` needs to be set using the \\`configure\\` widget.\n\nLearn more: https://www.algolia.com/doc/api-reference/widgets/hits-per-page/js/\n            `\n          );\n\n          warning(\n            false,\n            `\nThe \\`items\\` option of \\`hitsPerPage\\` does not contain the \"hits per page\" value coming from the state: ${state.hitsPerPage}.\n\nYou may want to add another entry to the \\`items\\` option with this value.`\n          );\n\n          items = [\n            // The helper will convert the empty string to `undefined`.\n            { value: '' as unknown as number, label: '' },\n            ...items,\n          ];\n        }\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('hitsPerPage', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hitsPerPage: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ state, results, createURL, helper }) {\n        const canRefine = results ? results.nbHits > 0 : false;\n\n        return {\n          items: transformItems(normalizeItems(state), { results }),\n          refine: connectorState.getRefine(helper),\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          hasNoResults: !canRefine,\n          canRefine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const hitsPerPage = searchParameters.hitsPerPage;\n\n        if (hitsPerPage === undefined || hitsPerPage === defaultItem.value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          hitsPerPage,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameters({\n          hitsPerPage: uiState.hitsPerPage || defaultItem.value,\n        });\n      },\n    };\n  };\n};\n\nexport default connectHitsPerPage;\n","import { withInsights } from '../../lib/insights';\n\nimport connectHits from './connectHits';\n\nimport type { Connector } from '../../types';\nimport type { HitsConnectorParams, HitsWidgetDescription } from './connectHits';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  HitsWidgetDescription,\n  HitsConnectorParams\n>;\n\nconst connectHitsWithInsights = withInsights(connectHits);\n\nexport default connectHitsWithInsights;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isEqual,\n  addAbsolutePosition,\n  addQueryID,\n  noop,\n  createSendEventForHits,\n  createBindEventForHits,\n} from '../../lib/utils';\n\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper as Helper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nexport type InfiniteHitsCachedHits<THit extends BaseHit> = {\n  [page: number]: Array<Hit<THit>>;\n};\n\ntype Read<THit extends BaseHit> = ({\n  state,\n}: {\n  state: PlainSearchParameters;\n}) => InfiniteHitsCachedHits<THit> | null;\n\ntype Write<THit extends BaseHit> = ({\n  state,\n  hits,\n}: {\n  state: PlainSearchParameters;\n  hits: InfiniteHitsCachedHits<THit>;\n}) => void;\n\nexport type InfiniteHitsCache<THit extends BaseHit = BaseHit> = {\n  read: Read<THit>;\n  write: Write<THit>;\n};\n\nexport type InfiniteHitsConnectorParams<THit extends BaseHit = BaseHit> = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Enable the button to load previous results.\n   *\n   * @default `false`\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Receives the items, and is called before displaying them.\n   * Useful for mapping over the items to transform, and remove or reorder them.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache<THit>;\n};\n\nexport type InfiniteHitsRenderState<THit extends BaseHit = BaseHit> = {\n  /**\n   * Loads the previous results.\n   */\n  showPrevious: () => void;\n\n  /**\n   * Loads the next page of hits.\n   */\n  showMore: () => void;\n\n  /**\n   * Indicates whether the first page of hits has been reached.\n   */\n  isFirstPage: boolean;\n\n  /**\n   * Indicates whether the last page of hits has been reached.\n   */\n  isLastPage: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string of data-insights-event attribute for insights middleware\n   */\n  bindEvent: BindEventForHits;\n\n  /**\n   * Hits for the current page\n   */\n  currentPageHits: Array<Hit<THit>>;\n\n  /**\n   * Hits for current and cached pages\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n  connector: true,\n});\n\nexport type InfiniteHitsWidgetDescription<THit extends BaseHit = BaseHit> = {\n  $$type: 'ais.infiniteHits';\n  renderState: InfiniteHitsRenderState<THit>;\n  indexRenderState: {\n    infiniteHits: WidgetRenderState<\n      InfiniteHitsRenderState<THit>,\n      InfiniteHitsConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type InfiniteHitsConnector<THit extends BaseHit = BaseHit> = Connector<\n  InfiniteHitsWidgetDescription<THit>,\n  InfiniteHitsConnectorParams<THit>\n>;\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nfunction getInMemoryCache<THit extends BaseHit>(): InfiniteHitsCache<THit> {\n  let cachedHits: InfiniteHitsCachedHits<THit> | null = null;\n  let cachedState: PlainSearchParameters | null = null;\n  return {\n    read({ state }) {\n      return isEqual(cachedState, getStateWithoutPage(state))\n        ? cachedHits\n        : null;\n    },\n    write({ state, hits }) {\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    },\n  };\n}\n\nfunction extractHitsFromCachedHits<THit extends BaseHit>(\n  cachedHits: InfiniteHitsCachedHits<THit>\n) {\n  return Object.keys(cachedHits)\n    .map(Number)\n    .sort((a, b) => a - b)\n    .reduce((acc: Array<Hit<THit>>, page) => {\n      return acc.concat(cachedHits[page]);\n    }, []);\n}\n\nconst connectInfiniteHits: InfiniteHitsConnector = function connectInfiniteHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  // @TODO: this should be a generic, but a Connector can not yet be generic itself\n  type THit = BaseHit;\n\n  return (widgetParams) => {\n    const {\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        InfiniteHitsConnectorParams['transformItems']\n      >,\n      cache = getInMemoryCache(),\n    } = widgetParams || {};\n    let showPrevious: () => void;\n    let showMore: () => void;\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n    const getFirstReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.min(page, ...pages);\n      }\n    };\n    const getLastReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.max(page, ...pages);\n      }\n    };\n\n    const getShowPrevious =\n      (helper: Helper): (() => void) =>\n      () => {\n        // Using the helper's `overrideStateWithoutTriggeringChangeEvent` method\n        // avoid updating the browser URL when the user displays the previous page.\n        helper\n          .overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            page:\n              getFirstReceivedPage(\n                helper.state,\n                cache.read({ state: helper.state }) || {}\n              ) - 1,\n          })\n          .searchWithoutTriggeringOnStateChange();\n      };\n\n    const getShowMore =\n      (helper: Helper): (() => void) =>\n      () => {\n        helper\n          .setPage(\n            getLastReceivedPage(\n              helper.state,\n              cache.read({ state: helper.state }) || {}\n            ) + 1\n          )\n          .search();\n      };\n\n    return {\n      $$type: 'ais.infiniteHits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          false\n        );\n\n        sendEvent('view', widgetRenderState.currentPageHits);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          infiniteHits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        helper,\n        parent,\n        state: existingState,\n        instantSearchInstance,\n      }) {\n        let isFirstPage: boolean;\n        let currentPageHits: Array<Hit<THit>> = [];\n        /**\n         * We bail out of optimistic UI here, as the cache is based on search\n         * parameters, and we don't want to invalidate the cache when the search\n         * is loading.\n         */\n        const state = parent.getPreviousState() || existingState;\n\n        const cachedHits = cache.read({ state }) || {};\n\n        if (!results) {\n          showPrevious = getShowPrevious(helper);\n          showMore = getShowMore(helper);\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n            instantSearchInstance,\n          });\n          isFirstPage =\n            state.page === undefined ||\n            getFirstReceivedPage(state, cachedHits) === 0;\n        } else {\n          const { page = 0 } = state;\n\n          if (escapeHTML && results.hits.length > 0) {\n            results.hits = escapeHits(results.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            results.hits,\n            results.page,\n            results.hitsPerPage\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            results.queryID\n          );\n\n          const transformedHits = transformItems(\n            hitsWithAbsolutePositionAndQueryID,\n            { results }\n          );\n\n          if (\n            cachedHits[page] === undefined &&\n            !results.__isArtificial &&\n            instantSearchInstance.status === 'idle'\n          ) {\n            cachedHits[page] = transformedHits;\n            cache.write({ state, hits: cachedHits });\n          }\n          currentPageHits = transformedHits;\n\n          isFirstPage = getFirstReceivedPage(state, cachedHits) === 0;\n        }\n\n        const hits = extractHitsFromCachedHits(cachedHits);\n        const isLastPage = results\n          ? results.nbPages <= getLastReceivedPage(state, cachedHits) + 1\n          : true;\n\n        return {\n          hits,\n          currentPageHits,\n          sendEvent,\n          bindEvent,\n          results,\n          showPrevious,\n          showMore,\n          isFirstPage,\n          isLastPage,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutPage = state.setQueryParameter('page', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutPage;\n        }\n\n        return stateWithoutPage.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          // return without adding `page` to uiState\n          // because we don't want `page=1` in the URL\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          // The page in the UI state is incremented by one\n          // to expose the user value (not `0`).\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters;\n\n        if (escapeHTML) {\n          widgetSearchParameters =\n            searchParameters.setQueryParameters(TAG_PLACEHOLDER);\n        }\n\n        // The page in the search parameters is decremented by one\n        // to get to the actual parameter value from the UI state.\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return widgetSearchParameters.setQueryParameter('page', page);\n      },\n    };\n  };\n};\n\nexport default connectInfiniteHits;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  RenderOptions,\n  SortBy,\n  TransformItems,\n  Widget,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'name:asc'];\n\nexport type MenuItem = {\n  /**\n   * The value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type MenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * How many facets values to retrieve.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * How many facets values to retrieve when `toggleShowMore` is called, this value is meant to be greater than `limit` option.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<MenuItem>;\n};\n\nexport type MenuRenderState = {\n  /**\n   * The elements that can be refined for the current search results.\n   */\n  items: MenuItem[];\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Filter the search to item value.\n   */\n  refine(value: string): void;\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMore.limit`.\n   */\n  toggleShowMore(): void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type MenuWidgetDescription = {\n  $$type: 'ais.menu';\n  renderState: MenuRenderState;\n  indexRenderState: {\n    menu: {\n      [attribute: string]: WidgetRenderState<\n        MenuRenderState,\n        MenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    menu: {\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type MenuConnector = Connector<\n  MenuWidgetDescription,\n  MenuConnectorParams\n>;\n\n/**\n * **Menu** connector provides the logic to build a widget that will give the user the ability to choose a single value for a specific facet. The typical usage of menu is for navigation in categories.\n *\n * This connector provides a `toggleShowMore()` function to display more or less items and a `refine()`\n * function to select an item. While selecting a new element, the `refine` will also unselect the\n * one that is currently selected.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in \"attributes for faceting\" on the Algolia dashboard or configured as attributesForFaceting via a set settings call to the Algolia API.\n */\nconst connectMenu: MenuConnector = function connectMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute,\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = DEFAULT_SORT,\n      transformItems = ((items) => items) as NonNullable<\n        MenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('The `showMoreLimit` option must be greater than `limit`.')\n      );\n    }\n\n    type ThisWidget = Widget<\n      MenuWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    let sendEvent: MenuRenderState['sendEvent'] | undefined;\n    let _createURL: MenuRenderState['createURL'] | undefined;\n    let _refine: MenuRenderState['refine'] | undefined;\n\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let isShowingMore = false;\n    let toggleShowMore = () => {};\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    return {\n      $$type: 'ais.menu' as const,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeHierarchicalFacet(attribute)\n          .setQueryParameter('maxValuesPerFacet', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          menu: {\n            ...renderState.menu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { results, createURL, instantSearchInstance, helper } =\n          renderOptions;\n\n        let items: MenuRenderState['items'] = [];\n        let canToggleShowMore = false;\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute,\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!_createURL) {\n          _createURL = (facetValue: string) =>\n            createURL(\n              helper.state\n                .resetPage()\n                .toggleFacetRefinement(attribute, facetValue)\n            );\n        }\n\n        if (!_refine) {\n          _refine = function (facetValue: string) {\n            const [refinedItem] =\n              helper.getHierarchicalFacetBreadcrumb(attribute);\n            sendEvent!('click', facetValue ? facetValue : refinedItem);\n            helper\n              .toggleFacetRefinement(\n                attribute,\n                facetValue ? facetValue : refinedItem\n              )\n              .search();\n          };\n        }\n\n        if (renderOptions.results) {\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n        }\n\n        if (results) {\n          const facetValues = results.getFacetValues(attribute, {\n            sortBy,\n            facetOrdering: sortBy === DEFAULT_SORT,\n          });\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n\n          canToggleShowMore =\n            showMore && (isShowingMore || facetItems.length > getLimit());\n\n          items = transformItems(\n            facetItems\n              .slice(0, getLimit())\n              .map(({ name: label, escapedValue: value, path, ...item }) => ({\n                ...item,\n                label,\n                value,\n              })),\n            { results }\n          );\n        }\n\n        return {\n          items,\n          createURL: _createURL,\n          refine: _refine,\n          sendEvent,\n          canRefine: items.length > 0,\n          widgetParams,\n          isShowingMore,\n          toggleShowMore: cachedToggleShowMore,\n          canToggleShowMore,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const [value] =\n          searchParameters.getHierarchicalFacetBreadcrumb(attribute);\n\n        if (!value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          menu: {\n            ...uiState.menu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.menu && uiState.menu[attribute];\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(attribute)\n          .addHierarchicalFacet({\n            name: attribute,\n            attributes: [attribute],\n          });\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!value) {\n          return withMaxValuesPerFacet.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        }\n\n        return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n          attribute,\n          value\n        );\n      },\n    };\n  };\n};\n\nexport default connectMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type { InsightsEvent } from '../../middlewares';\nimport type {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'numeric-menu',\n  connector: true,\n});\n\nexport type NumericMenuConnectorParamsItem = {\n  /**\n   * Name of the option\n   */\n  label: string;\n\n  /**\n   * Higher bound of the option (<=)\n   */\n  start?: number;\n\n  /**\n   * Lower bound of the option (>=)\n   */\n  end?: number;\n};\n\nexport type NumericMenuRenderStateItem = {\n  /**\n   *  Name of the option.\n   */\n  label: string;\n\n  /**\n   * URL encoded of the bounds object with the form `{start, end}`.\n   * This value can be used verbatim in the webpage and can be read by `refine`\n   * directly. If you want to inspect the value, you can do:\n   * `JSON.parse(decodeURI(value))` to get the object.\n   */\n  value: string;\n\n  /**\n   * True if the value is selected\n   */\n  isRefined: boolean;\n};\n\nexport type NumericMenuConnectorParams = {\n  /**\n   * Name of the attribute for filtering\n   */\n  attribute: string;\n\n  /**\n   * List of all the items\n   */\n  items: NumericMenuConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates\n   */\n  transformItems?: TransformItems<NumericMenuRenderStateItem>;\n};\n\nexport type NumericMenuRenderState = {\n  /**\n   * The list of available choices\n   */\n  items: NumericMenuRenderStateItem[];\n\n  /**\n   * Creates URLs for the next state, the string is the name of the selected option\n   */\n  createURL: CreateURL<NumericMenuRenderStateItem['value']>;\n\n  /**\n   * `true` if the last search contains no result\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   *\n   * This is `true` if the last search contains no result and\n   * \"All\" range is selected\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the selected value and trigger a new search\n   */\n  refine: (facetValue: string) => void;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type NumericMenuWidgetDescription = {\n  $$type: 'ais.numericMenu';\n  renderState: NumericMenuRenderState;\n  indexRenderState: {\n    numericMenu: {\n      [attribute: string]: WidgetRenderState<\n        NumericMenuRenderState,\n        NumericMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    numericMenu: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type NumericMenuConnector = Connector<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n>;\n\nconst $$type = 'ais.numericMenu';\n\nconst createSendEvent =\n  ({ instantSearchInstance }: { instantSearchInstance: InstantSearch }) =>\n  (...args: [InsightsEvent] | [string, string, string?]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n  };\n\nconst connectNumericMenu: NumericMenuConnector = function connectNumericMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      items = [],\n      transformItems = ((item) => item) as NonNullable<\n        NumericMenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (attribute === '') {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!items || items.length === 0) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?(facetValue: string): void;\n      createURL?(state: SearchParameters): (facetValue: string) => string;\n      sendEvent?: SendEventForFacet;\n    };\n\n    const prepareItems = (state: SearchParameters) =>\n      items.map(({ start, end, label }) => ({\n        label,\n        value: encodeURI(JSON.stringify({ start, end })),\n        isRefined: isRefined(state, attribute, { start, end, label }),\n      }));\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state.clearRefinements(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const values = searchParameters.getNumericRefinements(attribute);\n\n        const equal = values['='] && values['='][0];\n\n        if (equal || equal === 0) {\n          return {\n            ...uiState,\n            numericMenu: {\n              ...uiState.numericMenu,\n              [attribute]: `${values['=']}`,\n            },\n          };\n        }\n\n        const min = (values['>='] && values['>='][0]) || '';\n        const max = (values['<='] && values['<='][0]) || '';\n\n        if (min === '' && max === '') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          numericMenu: {\n            ...uiState.numericMenu,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.numericMenu && uiState.numericMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n\n        if (!value) {\n          return withoutRefinements.setQueryParameters({\n            numericRefinements: {\n              ...withoutRefinements.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        const isExact = value.indexOf(':') === -1;\n\n        if (isExact) {\n          return withoutRefinements.addNumericRefinement(\n            attribute,\n            '=',\n            Number(value)\n          );\n        }\n\n        const [min, max] = value.split(':').map(parseFloat);\n\n        const withMinRefinement = isFiniteNumber(min)\n          ? withoutRefinements.addNumericRefinement(attribute, '>=', min)\n          : withoutRefinements;\n\n        const withMaxRefinement = isFiniteNumber(max)\n          ? withMinRefinement.addNumericRefinement(attribute, '<=', max)\n          : withMinRefinement;\n\n        return withMaxRefinement;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          numericMenu: {\n            ...renderState.numericMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        state,\n        instantSearchInstance,\n        helper,\n        createURL,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            const refinedState = getRefinedState(\n              helper.state,\n              attribute,\n              facetValue\n            );\n            connectorState.sendEvent!('click', facetValue);\n            helper.setState(refinedState).search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (newState) => (facetValue) =>\n            createURL(getRefinedState(newState, attribute, facetValue));\n        }\n\n        if (!connectorState.sendEvent) {\n          connectorState.sendEvent = createSendEvent({\n            instantSearchInstance,\n          });\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n        const preparedItems = prepareItems(state);\n        let allIsSelected = true;\n        // @TODO avoid for..of for polyfill reasons\n        // eslint-disable-next-line no-restricted-syntax\n        for (const item of preparedItems) {\n          if (item.isRefined && decodeURI(item.value) !== '{}') {\n            allIsSelected = false;\n            break;\n          }\n        }\n\n        return {\n          createURL: connectorState.createURL(state),\n          items: transformItems(preparedItems, { results }),\n          hasNoResults,\n          canRefine: !(hasNoResults && allIsSelected),\n          refine: connectorState.refine,\n          sendEvent: connectorState.sendEvent,\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction isRefined(\n  state: SearchParameters,\n  attribute: string,\n  option: NumericMenuConnectorParamsItem\n) {\n  // @TODO: same as another spot, why is this mixing arrays & elements?\n  const currentRefinements = state.getNumericRefinements(attribute);\n\n  if (option.start !== undefined && option.end !== undefined) {\n    if (option.start === option.end) {\n      return hasNumericRefinement(currentRefinements, '=', option.start);\n    } else {\n      return (\n        hasNumericRefinement(currentRefinements, '>=', option.start) &&\n        hasNumericRefinement(currentRefinements, '<=', option.end)\n      );\n    }\n  }\n\n  if (option.start !== undefined) {\n    return hasNumericRefinement(currentRefinements, '>=', option.start);\n  }\n\n  if (option.end !== undefined) {\n    return hasNumericRefinement(currentRefinements, '<=', option.end);\n  }\n\n  if (option.start === undefined && option.end === undefined) {\n    return (\n      Object.keys(currentRefinements) as SearchParameters.Operator[]\n    ).every((operator) => (currentRefinements[operator] || []).length === 0);\n  }\n\n  return false;\n}\n\nfunction getRefinedState(\n  state: SearchParameters,\n  attribute: string,\n  facetValue: string\n) {\n  let resolvedState = state;\n\n  const refinedOption = JSON.parse(decodeURI(facetValue));\n\n  // @TODO: why is array / element mixed here & hasRefinements; seems wrong?\n  const currentRefinements = resolvedState.getNumericRefinements(attribute);\n\n  if (refinedOption.start === undefined && refinedOption.end === undefined) {\n    return resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (!isRefined(resolvedState, attribute, refinedOption)) {\n    resolvedState = resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (refinedOption.start !== undefined && refinedOption.end !== undefined) {\n    if (refinedOption.start > refinedOption.end) {\n      throw new Error('option.start should be > to option.end');\n    }\n\n    if (refinedOption.start === refinedOption.end) {\n      if (hasNumericRefinement(currentRefinements, '=', refinedOption.start)) {\n        resolvedState = resolvedState.removeNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      } else {\n        resolvedState = resolvedState.addNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      }\n      return resolvedState;\n    }\n  }\n\n  if (refinedOption.start !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '>=', refinedOption.start)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '>=',\n        refinedOption.start\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '>=',\n      refinedOption.start\n    );\n  }\n\n  if (refinedOption.end !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '<=', refinedOption.end)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '<=',\n        refinedOption.end\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '<=',\n      refinedOption.end\n    );\n  }\n\n  if (typeof resolvedState.page === 'number') {\n    resolvedState.page = 0;\n  }\n\n  return resolvedState;\n}\n\nfunction hasNumericRefinement(\n  currentRefinements: SearchParameters.OperatorList,\n  operator: SearchParameters.Operator,\n  value: number\n) {\n  return (\n    currentRefinements[operator] !== undefined &&\n    currentRefinements[operator]!.includes(value)\n  );\n}\n\nexport default connectNumericMenu;\n","import { withInsights } from '../../lib/insights';\n\nimport connectInfiniteHits from './connectInfiniteHits';\n\nimport type { Connector } from '../../types';\nimport type {\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams,\n} from './connectInfiniteHits';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n>;\n\nconst connectInfiniteHitsWithInsights = withInsights(connectInfiniteHits);\n\nexport default connectInfiniteHitsWithInsights;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport Paginator from './Paginator';\n\nimport type { Connector, CreateURL, WidgetRenderState } from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'pagination',\n  connector: true,\n});\n\nexport type PaginationConnectorParams = {\n  /**\n   * The total number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The padding of pages to show around the current page\n   * @default 3\n   */\n  padding?: number;\n};\n\nexport type PaginationRenderState = {\n  /** Creates URLs for the next state, the number is the page to generate the URL for. */\n  createURL: CreateURL<number>;\n\n  /** Sets the current page and triggers a search. */\n  refine(page: number): void;\n\n  /** true if this search returned more than one page */\n  canRefine: boolean;\n\n  /** The number of the page currently displayed. */\n  currentRefinement: number;\n\n  /** The number of hits computed for the last query (can be approximated). */\n  nbHits: number;\n\n  /** The number of pages for the result set. */\n  nbPages: number;\n\n  /** The actual pages relevant to the current situation and padding. */\n  pages: number[];\n\n  /** true if the current page is also the first page. */\n  isFirstPage: boolean;\n\n  /** true if the current page is also the last page. */\n  isLastPage: boolean;\n};\n\nexport type PaginationWidgetDescription = {\n  $$type: 'ais.pagination';\n  renderState: PaginationRenderState;\n  indexRenderState: {\n    pagination: WidgetRenderState<\n      PaginationRenderState,\n      PaginationConnectorParams\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type PaginationConnector = Connector<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n>;\n\n/**\n * **Pagination** connector provides the logic to build a widget that will let the user\n * choose the current page of the results.\n *\n * When using the pagination with Algolia, you should be aware that the engine won't provide you pages\n * beyond the 1000th hits by default. You can find more information on the [Algolia documentation](https://www.algolia.com/doc/guides/searching/pagination/#pagination-limitations).\n */\nconst connectPagination: PaginationConnector = function connectPagination(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { totalPages, padding = 3 } = widgetParams || {};\n\n    const pager = new Paginator({\n      currentPage: 0,\n      total: 0,\n      padding,\n    });\n\n    type ConnectorState = {\n      refine?(page: number): void;\n      createURL?(state: SearchParameters): (page: number) => string;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function getMaxPage({ nbPages }: { nbPages: number }) {\n      return totalPages !== undefined ? Math.min(totalPages, nbPages) : nbPages;\n    }\n\n    return {\n      $$type: 'ais.pagination',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('page', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return searchParameters.setQueryParameter('page', page);\n      },\n\n      getWidgetRenderState({ results, helper, state, createURL }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (page) => {\n            helper.setPage(page);\n            helper.search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (helperState) => (page) =>\n            createURL(helperState.setPage(page));\n        }\n\n        const page = state.page || 0;\n        const nbPages = getMaxPage(results || { nbPages: 0 });\n        pager.currentPage = page;\n        pager.total = nbPages;\n\n        return {\n          createURL: connectorState.createURL(state),\n          refine: connectorState.refine,\n          canRefine: nbPages > 1,\n          currentRefinement: page,\n          nbHits: results?.nbHits || 0,\n          nbPages,\n          pages: results ? pager.pages() : [],\n          isFirstPage: pager.isFirstPage(),\n          isLastPage: pager.isLastPage(),\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          pagination: this.getWidgetRenderState(renderOptions),\n        };\n      },\n    };\n  };\n};\n\nexport default connectPagination;\n","import { range } from '../../lib/utils';\n\nclass Paginator {\n  public currentPage: number;\n  public total: number;\n  public padding: number;\n\n  public constructor(params: {\n    currentPage: number;\n    total: number;\n    padding: number;\n  }) {\n    this.currentPage = params.currentPage;\n    this.total = params.total;\n    this.padding = params.padding;\n  }\n\n  public pages() {\n    const { total, currentPage, padding } = this;\n\n    if (total === 0) return [0];\n\n    const totalDisplayedPages = this.nbPagesDisplayed(padding, total);\n    if (totalDisplayedPages === total) {\n      return range({ end: total });\n    }\n\n    const paddingLeft = this.calculatePaddingLeft(\n      currentPage,\n      padding,\n      total,\n      totalDisplayedPages\n    );\n    const paddingRight = totalDisplayedPages - paddingLeft;\n\n    const first = currentPage - paddingLeft;\n    const last = currentPage + paddingRight;\n\n    return range({ start: first, end: last });\n  }\n\n  public nbPagesDisplayed(padding: number, total: number) {\n    return Math.min(2 * padding + 1, total);\n  }\n\n  public calculatePaddingLeft(\n    current: number,\n    padding: number,\n    total: number,\n    totalDisplayedPages: number\n  ) {\n    if (current <= padding) {\n      return current;\n    }\n\n    if (current >= total - padding) {\n      return totalDisplayedPages - (total - current);\n    }\n\n    return padding;\n  }\n\n  public isLastPage() {\n    return this.currentPage === this.total - 1 || this.total === 0;\n  }\n\n  public isFirstPage() {\n    return this.currentPage === 0;\n  }\n}\n\nexport default Paginator;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  find,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type { InsightsEvent } from '../../middlewares';\nimport type { Connector, InstantSearch, WidgetRenderState } from '../../types';\nimport type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator(\n  { name: 'range-input', connector: true },\n  { name: 'range-slider', connector: true }\n);\n\nconst $$type = 'ais.range';\n\nexport type RangeMin = number | undefined;\nexport type RangeMax = number | undefined;\n\n// @MAJOR: potentially we should consolidate these types\nexport type RangeBoundaries = [RangeMin, RangeMax];\nexport type Range = {\n  min: RangeMin;\n  max: RangeMax;\n};\n\nexport type RangeRenderState = {\n  /**\n   * Sets a range to filter the results on. Both values\n   * are optional, and will default to the higher and lower bounds. You can use `undefined` to remove a\n   * previously set bound or to set an infinite bound.\n   * @param rangeValue tuple of [min, max] bounds\n   */\n  refine(rangeValue: RangeBoundaries): void;\n\n  /**\n   * Indicates whether this widget can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Send an event to the insights middleware\n   */\n  sendEvent: SendEventForFacet;\n\n  /**\n   * Maximum range possible for this search\n   */\n  range: Range;\n\n  /**\n   * Current refinement of the search\n   */\n  start: RangeBoundaries;\n\n  /**\n   * Transform for the rendering `from` and/or `to` values.\n   * Both functions take a `number` as input and should output a `string`.\n   */\n  format: {\n    from(fromValue: number): string;\n    to(toValue: number): string;\n  };\n};\n\nexport type RangeConnectorParams = {\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n\n  /**\n   * Minimal range value, default to automatically computed from the result set.\n   */\n  min?: number;\n\n  /**\n   * Maximal range value, default to automatically computed from the result set.\n   */\n  max?: number;\n\n  /**\n   * Number of digits after decimal point to use.\n   */\n  precision?: number;\n};\n\nexport type RangeWidgetDescription = {\n  $$type: 'ais.range';\n  renderState: RangeRenderState;\n  indexRenderState: {\n    range: {\n      [attribute: string]: WidgetRenderState<\n        RangeRenderState,\n        RangeConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    range: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type RangeConnector = Connector<\n  RangeWidgetDescription,\n  RangeConnectorParams\n>;\n\nfunction toPrecision({\n  min,\n  max,\n  precision,\n}: {\n  min?: number;\n  max?: number;\n  precision: number;\n}) {\n  const pow = Math.pow(10, precision);\n\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max,\n  };\n}\n\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\nconst connectRange: RangeConnector = function connectRange(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      min: minBound,\n      max: maxBound,\n      precision = 0,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (\n      isFiniteNumber(minBound) &&\n      isFiniteNumber(maxBound) &&\n      minBound > maxBound\n    ) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    const formatToNumber = (v: string | number) =>\n      Number(Number(v).toFixed(precision));\n\n    const rangeFormatter = {\n      from: (v: number) => v.toLocaleString(),\n      to: (v: number) => formatToNumber(v).toLocaleString(),\n    };\n\n    // eslint-disable-next-line complexity\n    const getRefinedState = (\n      helper: AlgoliaSearchHelper,\n      currentRange: Range,\n      nextMin: RangeMin | string,\n      nextMax: RangeMax | string\n    ) => {\n      let resolvedState = helper.state;\n      const { min: currentRangeMin, max: currentRangeMax } = currentRange;\n\n      const [min] = resolvedState.getNumericRefinement(attribute, '>=') || [];\n      const [max] = resolvedState.getNumericRefinement(attribute, '<=') || [];\n\n      const isResetMin = nextMin === undefined || nextMin === '';\n      const isResetMax = nextMax === undefined || nextMax === '';\n\n      const { min: nextMinAsNumber, max: nextMaxAsNumber } = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin as string) : undefined,\n        max: !isResetMax ? parseFloat(nextMax as string) : undefined,\n        precision,\n      });\n\n      let newNextMin: RangeMin;\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      let newNextMax: RangeMax;\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      const isResetNewNextMin = newNextMin === undefined;\n\n      const isGreaterThanCurrentRange =\n        isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin!;\n      const isMinValid =\n        isResetNewNextMin ||\n        (isFiniteNumber(newNextMin) &&\n          (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange));\n\n      const isResetNewNextMax = newNextMax === undefined;\n      const isLowerThanRange =\n        isFiniteNumber(newNextMax) && currentRangeMax! >= newNextMax;\n      const isMaxValid =\n        isResetNewNextMax ||\n        (isFiniteNumber(newNextMax) &&\n          (!isFiniteNumber(currentRangeMax) || isLowerThanRange));\n\n      const hasMinChange = min !== newNextMin;\n      const hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '>=',\n            newNextMin\n          );\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '<=',\n            newNextMax\n          );\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    const createSendEvent =\n      (instantSearchInstance: InstantSearch) =>\n      (...args: [InsightsEvent] | [string, string, string?]) => {\n        if (args.length === 1) {\n          instantSearchInstance.sendEventToInsights(args[0]);\n          return;\n        }\n      };\n\n    function _getCurrentRange(\n      stats: Partial<NonNullable<SearchResults.Facet['stats']>>\n    ) {\n      let min: number;\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      let max: number;\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({ min, max, precision });\n    }\n\n    function _getCurrentRefinement(\n      helper: AlgoliaSearchHelper\n    ): RangeBoundaries {\n      const [minValue] = helper.getNumericRefinement(attribute, '>=') || [];\n\n      const [maxValue] = helper.getNumericRefinement(attribute, '<=') || [];\n\n      const min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      const max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n\n      return [min, max];\n    }\n\n    function _refine(helper: AlgoliaSearchHelper, currentRange: Range) {\n      return ([nextMin, nextMax]: RangeBoundaries = [undefined, undefined]) => {\n        const refinedState = getRefinedState(\n          helper,\n          currentRange,\n          nextMin,\n          nextMax\n        );\n        if (refinedState) {\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          range: {\n            ...renderState.range,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        const facetsFromResults = (results && results.disjunctiveFacets) || [];\n        const facet = find(\n          facetsFromResults,\n          (facetResult) => facetResult.name === attribute\n        );\n        const stats = (facet && facet.stats) || {\n          min: undefined,\n          max: undefined,\n        };\n\n        const currentRange = _getCurrentRange(stats);\n        const start = _getCurrentRefinement(helper);\n\n        let refine: ReturnType<typeof _refine>;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(helper, {\n            min: undefined,\n            max: undefined,\n          });\n        } else {\n          refine = _refine(helper, currentRange);\n        }\n\n        return {\n          refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(instantSearchInstance),\n          widgetParams: {\n            ...widgetParams,\n            precision,\n          },\n          start,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeDisjunctiveFacet(attribute)\n          .removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const { '>=': min = [], '<=': max = [] } =\n          searchParameters.getNumericRefinements(attribute);\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          range: {\n            ...uiState.range,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters\n          .addDisjunctiveFacet(attribute)\n          .setQueryParameters({\n            numericRefinements: {\n              ...searchParameters.numericRefinements,\n              [attribute]: {},\n            },\n          });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            minBound\n          );\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            maxBound\n          );\n        }\n\n        const value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        const [lowerBound, upperBound] = value.split(':').map(parseFloat);\n\n        if (\n          isFiniteNumber(lowerBound) &&\n          (!isFiniteNumber(minBound) || minBound < lowerBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '>=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            lowerBound\n          );\n        }\n\n        if (\n          isFiniteNumber(upperBound) &&\n          (!isFiniteNumber(maxBound) || upperBound < maxBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '<=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            upperBound\n          );\n        }\n\n        return widgetSearchParameters;\n      },\n    };\n  };\n};\n\nexport default connectRange;\n","import {\n  escapeFacets,\n  TAG_PLACEHOLDER,\n  TAG_REPLACEMENT,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForFacet } from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  SortBy,\n  RenderOptions,\n  Widget,\n  InitOptions,\n  FacetHit,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'count:desc', 'name:asc'];\n\nexport type RefinementListItem = {\n  /**\n   * The value of the refinement list item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the refinement list item.\n   */\n  label: string;\n  /**\n   * Human-readable value of the searched refinement list item.\n   */\n  highlighted?: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the list item is refined.\n   */\n  isRefined: boolean;\n};\n\nexport type RefinementListConnectorParams = {\n  /**\n   * The name of the attribute in the records.\n   */\n  attribute: string;\n  /**\n   * How the filters are combined together.\n   */\n  operator?: 'and' | 'or';\n  /**\n   * The max number of items to display when\n   * `showMoreLimit` is not set or if the widget is showing less value.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * The max number of items to display if the widget\n   * is showing more items.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.FacetValue>;\n  /**\n   * Escapes the content of the facet values.\n   */\n  escapeFacetValues?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<RefinementListItem>;\n};\n\nexport type RefinementListRenderState = {\n  /**\n   * The list of filtering values returned from Algolia API.\n   */\n  items: RefinementListItem[];\n  /**\n   * indicates whether the results are exhaustive (complete)\n   */\n  hasExhaustiveItems: boolean;\n  /**\n   * Creates the next state url for a selected refinement.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Action to apply selected refinements.\n   */\n  refine(value: string): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n  /**\n   * Searches for values inside the list.\n   */\n  searchForItems(query: string): void;\n  /**\n   * `true` if the values are from an index search.\n   */\n  isFromSearch: boolean;\n  /**\n   * `true` if a refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore(): void;\n};\n\nexport type RefinementListWidgetDescription = {\n  $$type: 'ais.refinementList';\n  renderState: RefinementListRenderState;\n  indexRenderState: {\n    refinementList: {\n      [attribute: string]: WidgetRenderState<\n        RefinementListRenderState,\n        RefinementListConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    refinementList: {\n      [attribute: string]: string[];\n    };\n  };\n};\n\nexport type RefinementListConnector = Connector<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n>;\n\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\nconst connectRefinementList: RefinementListConnector =\n  function connectRefinementList(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attribute,\n        operator = 'or',\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        escapeFacetValues = true,\n        transformItems = ((items) => items) as NonNullable<\n          RefinementListConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      type ThisWidget = Widget<\n        RefinementListWidgetDescription & { widgetParams: typeof widgetParams }\n      >;\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      if (!/^(and|or)$/.test(operator)) {\n        throw new Error(\n          withUsage(\n            `The \\`operator\\` must one of: \\`\"and\"\\`, \\`\"or\"\\` (got \"${operator}\").`\n          )\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('`showMoreLimit` should be greater than `limit`.')\n        );\n      }\n\n      const formatItems = ({\n        name: label,\n        escapedValue: value,\n        ...item\n      }: SearchResults.FacetValue): RefinementListItem => ({\n        ...item,\n        value,\n        label,\n        highlighted: label,\n      });\n\n      let lastResultsFromMainSearch: SearchResults;\n      let lastItemsFromMainSearch: RefinementListItem[] = [];\n      let hasExhaustiveItems = true;\n      let triggerRefine: RefinementListRenderState['refine'] | undefined;\n      let sendEvent: RefinementListRenderState['sendEvent'] | undefined;\n\n      let isShowingMore = false;\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      let searchForFacetValues: (\n        renderOptions: RenderOptions | InitOptions\n      ) => RefinementListRenderState['searchForItems'] = () => () => {};\n\n      const createSearchForFacetValues = function (\n        helper: AlgoliaSearchHelper,\n        widget: ThisWidget\n      ) {\n        return (renderOptions: RenderOptions | InitOptions) =>\n          (query: string) => {\n            const { instantSearchInstance, results: searchResults } =\n              renderOptions;\n            if (query === '' && lastItemsFromMainSearch) {\n              // render with previous data from the helper.\n              renderFn(\n                {\n                  ...widget.getWidgetRenderState({\n                    ...renderOptions,\n                    results: lastResultsFromMainSearch,\n                  }),\n                  instantSearchInstance,\n                },\n                false\n              );\n            } else {\n              const tags = {\n                highlightPreTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPreTag\n                  : TAG_REPLACEMENT.highlightPreTag,\n                highlightPostTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPostTag\n                  : TAG_REPLACEMENT.highlightPostTag,\n              };\n\n              helper\n                .searchForFacetValues(\n                  attribute,\n                  query,\n                  // We cap the `maxFacetHits` value to 100 because the Algolia API\n                  // doesn't support a greater number.\n                  // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n                  Math.min(getLimit(), 100),\n                  tags\n                )\n                .then((results) => {\n                  const facetValues = escapeFacetValues\n                    ? escapeFacets(results.facetHits)\n                    : results.facetHits;\n\n                  const normalizedFacetValues = transformItems(\n                    facetValues.map(({ escapedValue, value, ...item }) => ({\n                      ...item,\n                      value: escapedValue,\n                      label: value,\n                    })),\n                    { results: searchResults }\n                  );\n\n                  renderFn(\n                    {\n                      ...widget.getWidgetRenderState({\n                        ...renderOptions,\n                        results: lastResultsFromMainSearch,\n                      }),\n                      items: normalizedFacetValues,\n                      canToggleShowMore: false,\n                      canRefine: true,\n                      isFromSearch: true,\n                      instantSearchInstance,\n                    },\n                    false\n                  );\n                });\n            }\n          };\n      };\n\n      return {\n        $$type: 'ais.refinementList' as const,\n\n        init(initOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            refinementList: {\n              ...renderState.refinementList,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState(renderOptions) {\n          const { results, state, createURL, instantSearchInstance, helper } =\n            renderOptions;\n          let items: RefinementListItem[] = [];\n          let facetValues: SearchResults.FacetValue[] | FacetHit[] = [];\n\n          if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute,\n              widgetType: this.$$type,\n            });\n\n            triggerRefine = (facetValue) => {\n              sendEvent!('click', facetValue);\n              helper.toggleFacetRefinement(attribute, facetValue).search();\n            };\n\n            searchForFacetValues = createSearchForFacetValues(helper, this);\n          }\n\n          if (results) {\n            const values = results.getFacetValues(attribute, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            facetValues = values && Array.isArray(values) ? values : [];\n            items = transformItems(\n              facetValues.slice(0, getLimit()).map(formatItems),\n              { results }\n            );\n\n            const maxValuesPerFacetConfig = state.maxValuesPerFacet;\n            const currentLimit = getLimit();\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            hasExhaustiveItems =\n              maxValuesPerFacetConfig! > currentLimit\n                ? facetValues.length <= currentLimit\n                : facetValues.length < currentLimit;\n\n            lastResultsFromMainSearch = results;\n            lastItemsFromMainSearch = items;\n\n            if (renderOptions.results) {\n              toggleShowMore = createToggleShowMore(renderOptions, this);\n            }\n          }\n\n          // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n          // function\n          const searchFacetValues =\n            searchForFacetValues && searchForFacetValues(renderOptions);\n\n          const canShowLess =\n            isShowingMore && lastItemsFromMainSearch.length > limit;\n          const canShowMore = showMore && !hasExhaustiveItems;\n\n          const canToggleShowMore = canShowLess || canShowMore;\n\n          return {\n            createURL: (facetValue) =>\n              createURL(\n                state.resetPage().toggleFacetRefinement(attribute, facetValue)\n              ),\n            items,\n            refine: triggerRefine,\n            searchForItems: searchFacetValues,\n            isFromSearch: false,\n            canRefine: items.length > 0,\n            widgetParams,\n            isShowingMore,\n            canToggleShowMore,\n            toggleShowMore: cachedToggleShowMore,\n            sendEvent,\n            hasExhaustiveItems,\n          };\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          const withoutMaxValuesPerFacet = state.setQueryParameter(\n            'maxValuesPerFacet',\n            undefined\n          );\n          if (operator === 'and') {\n            return withoutMaxValuesPerFacet.removeFacet(attribute);\n          }\n          return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const values =\n            operator === 'or'\n              ? searchParameters.getDisjunctiveRefinements(attribute)\n              : searchParameters.getConjunctiveRefinements(attribute);\n\n          if (!values.length) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            refinementList: {\n              ...uiState.refinementList,\n              [attribute]: values,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const isDisjunctive = operator === 'or';\n          const values =\n            uiState.refinementList && uiState.refinementList[attribute];\n\n          const withoutRefinements =\n            searchParameters.clearRefinements(attribute);\n          const withFacetConfiguration = isDisjunctive\n            ? withoutRefinements.addDisjunctiveFacet(attribute)\n            : withoutRefinements.addFacet(attribute);\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            const key = isDisjunctive\n              ? 'disjunctiveFacetsRefinements'\n              : 'facetsRefinements';\n\n            return withMaxValuesPerFacet.setQueryParameters({\n              [key]: {\n                ...withMaxValuesPerFacet[key],\n                [attribute]: [],\n              },\n            });\n          }\n\n          return values.reduce(\n            (parameters, value) =>\n              isDisjunctive\n                ? parameters.addDisjunctiveFacetRefinement(attribute, value)\n                : parameters.addFacetRefinement(attribute, value),\n            withMaxValuesPerFacet\n          );\n        },\n      };\n    };\n  };\n\nexport default connectRefinementList;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'search-box',\n  connector: true,\n});\n\nexport type SearchBoxConnectorParams = {\n  /**\n   * A function that will be called every time\n   * a new value for the query is set. The first parameter is the query and the second is a\n   * function to actually trigger the search. The function takes the query as the parameter.\n   *\n   * This queryHook can be used to debounce the number of searches done from the searchBox.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\n/**\n * @typedef {Object} CustomSearchBoxWidgetParams\n * @property {function(string, function(string))} [queryHook = undefined] A function that will be called every time\n * a new value for the query is set. The first parameter is the query and the second is a\n * function to actually trigger the search. The function takes the query as the parameter.\n *\n * This queryHook can be used to debounce the number of searches done from the searchBox.\n */\n\nexport type SearchBoxRenderState = {\n  /**\n   * The query from the last search.\n   */\n  query: string;\n  /**\n   * Sets a new query and searches.\n   */\n  refine: (value: string) => void;\n  /**\n   * Remove the query and perform search.\n   */\n  clear: () => void;\n  /**\n   * `true` if the search results takes more than a certain time to come back\n   * from Algolia servers. This can be configured on the InstantSearch constructor with the attribute\n   * `stalledSearchDelay` which is 200ms, by default.\n   * @deprecated use `instantSearchInstance.status` instead\n   */\n  isSearchStalled: boolean;\n};\n\nexport type SearchBoxWidgetDescription = {\n  $$type: 'ais.searchBox';\n  renderState: SearchBoxRenderState;\n  indexRenderState: {\n    searchBox: WidgetRenderState<\n      SearchBoxRenderState,\n      SearchBoxConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type SearchBoxConnector = Connector<\n  SearchBoxWidgetDescription,\n  SearchBoxConnectorParams\n>;\n\nconst defaultQueryHook: SearchBoxConnectorParams['queryHook'] = (query, hook) =>\n  hook(query);\n\n/**\n * **SearchBox** connector provides the logic to build a widget that will let the user search for a query.\n *\n * The connector provides to the rendering: `refine()` to set the query. The behaviour of this function\n * may be impacted by the `queryHook` widget parameter.\n */\nconst connectSearchBox: SearchBoxConnector = function connectSearchBox(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { queryHook = defaultQueryHook } = widgetParams || {};\n\n    let _refine: SearchBoxRenderState['refine'];\n    let _clear: SearchBoxRenderState['clear'];\n\n    return {\n      $$type: 'ais.searchBox',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('query', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          searchBox: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ helper, searchMetadata, state }) {\n        if (!_refine) {\n          _refine = (query) => {\n            queryHook(query, (q) => helper.setQuery(q).search());\n          };\n\n          _clear = () => {\n            helper.setQuery('').search();\n          };\n        }\n\n        return {\n          query: state.query || '',\n          refine: _refine,\n          clear: _clear,\n          widgetParams,\n          isSearchStalled: searchMetadata.isSearchStalled,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectSearchBox;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  find,\n  warning,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'sort-by',\n  connector: true,\n});\n\n/**\n * The **SortBy** connector provides the logic to build a custom widget that will display a\n * list of indices. With Algolia, this is most commonly used for changing ranking strategy. This allows\n * a user to change how the hits are being sorted.\n */\n\nexport type SortByItem = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByConnectorParams = {\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByItem[];\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByRenderState = {\n  /**\n   * The initially selected index.\n   */\n  initialIndex?: string;\n  /**\n   * The currently selected index.\n   */\n  currentRefinement: string;\n  /**\n   * All the available indices\n   */\n  options: SortByItem[];\n  /**\n   * Switches indices and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   * `true` if the last search contains no result.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n  /**\n   * `true` if we can refine.\n   */\n  canRefine: boolean;\n};\n\nexport type SortByWidgetDescription = {\n  $$type: 'ais.sortBy';\n  renderState: SortByRenderState;\n  indexRenderState: {\n    sortBy: WidgetRenderState<SortByRenderState, SortByConnectorParams>;\n  };\n  indexUiState: {\n    sortBy: string;\n  };\n};\n\nexport type SortByConnector = Connector<\n  SortByWidgetDescription,\n  SortByConnectorParams\n>;\n\nconst connectSortBy: SortByConnector = function connectSortBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const connectorState: ConnectorState = {};\n\n  type ConnectorState = {\n    setIndex?(indexName: string): void;\n    initialIndex?: string;\n  };\n\n  return (widgetParams) => {\n    const {\n      items,\n      transformItems = ((x) => x) as NonNullable<\n        SortByConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(items)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    return {\n      $$type: 'ais.sortBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(initOptions);\n        const currentIndex = widgetRenderState.currentRefinement;\n        const isCurrentIndexInItems = find(\n          items,\n          (item) => item.value === currentIndex\n        );\n\n        warning(\n          isCurrentIndexInItems !== undefined,\n          `The index named \"${currentIndex}\" is not listed in the \\`items\\` of \\`sortBy\\`.`\n        );\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return connectorState.initialIndex\n          ? state.setIndex(connectorState.initialIndex)\n          : state;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          sortBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, parent }) {\n        if (!connectorState.initialIndex && parent) {\n          connectorState.initialIndex = parent.getIndexName();\n        }\n        if (!connectorState.setIndex) {\n          connectorState.setIndex = (indexName) => {\n            helper.setIndex(indexName).search();\n          };\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          currentRefinement: state.index,\n          options: transformItems(items, { results }),\n          refine: connectorState.setIndex,\n          hasNoResults,\n          canRefine: !hasNoResults && items.length > 0,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const currentIndex = searchParameters.index;\n\n        return {\n          ...uiState,\n          sortBy:\n            currentIndex !== connectorState.initialIndex\n              ? currentIndex\n              : undefined,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter(\n          'index',\n          uiState.sortBy ||\n            connectorState.initialIndex ||\n            searchParameters.index\n        );\n      },\n    };\n  };\n};\n\nexport default connectSortBy;\n","import {\n  checkRendering,\n  createDocumentationLink,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type { InsightsEvent } from '../../middlewares';\nimport type {\n  Connector,\n  InstantSearch,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'rating-menu',\n  connector: true,\n});\n\nconst $$type = 'ais.ratingMenu';\n\nconst MAX_VALUES_PER_FACET_API_LIMIT = 1000;\nconst STEP = 1;\n\ntype SendEvent = (...args: [InsightsEvent] | [string, string, string?]) => void;\n\ntype CreateSendEvent = (createSendEventArgs: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  getRefinedStar: () => number | number[] | undefined;\n  attribute: string;\n}) => SendEvent;\n\nconst createSendEvent: CreateSendEvent =\n  ({ instantSearchInstance, helper, getRefinedStar, attribute }) =>\n  (...args) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click') {\n      return;\n    }\n    const isRefined = getRefinedStar() === Number(facetValue);\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: [`${attribute}>=${facetValue}`],\n        },\n        attribute,\n      });\n    }\n  };\n\ntype StarRatingItems = {\n  /**\n   * Name corresponding to the number of stars.\n   */\n  name: string;\n  /**\n   * Human-readable name corresponding to the number of stars.\n   */\n  label: string;\n  /**\n   * Number of stars as string.\n   */\n  value: string;\n  /**\n   * Count of matched results corresponding to the number of stars.\n   */\n  count: number;\n  /**\n   *  Array of length of maximum rating value with stars to display or not.\n   */\n  stars: boolean[];\n  /**\n   * Indicates if star rating refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type RatingMenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n};\n\nexport type RatingMenuRenderState = {\n  /**\n   * Possible star ratings the user can apply.\n   */\n  items: StarRatingItems[];\n\n  /**\n   * Creates an URL for the next state (takes the item value as parameter). Takes the value of an item as parameter.\n   */\n  createURL: CreateURL<string>;\n\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Selects a rating to filter the results (takes the filter value as parameter). Takes the value of an item as parameter.\n   */\n  refine: (value: string) => void;\n\n  /**\n   * `true` if the last search contains no result.\n   *\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEvent;\n};\n\nexport type RatingMenuWidgetDescription = {\n  $$type: 'ais.ratingMenu';\n  renderState: RatingMenuRenderState;\n  indexRenderState: {\n    ratingMenu: {\n      [attribute: string]: WidgetRenderState<\n        RatingMenuRenderState,\n        RatingMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    ratingMenu: {\n      [attribute: string]: number;\n    };\n  };\n};\n\nexport type RatingMenuConnector = Connector<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n>;\n\n/**\n * **StarRating** connector provides the logic to build a custom widget that will let\n * the user refine search results based on ratings.\n *\n * The connector provides to the rendering: `refine()` to select a value and\n * `items` that are the values that can be selected. `refine` should be used\n * with `items.value`.\n */\nconst connectRatingMenu: RatingMenuConnector = function connectRatingMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { attribute, max = 5 } = widgetParams || {};\n    let sendEvent: SendEvent;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    const getRefinedStar = (state: SearchParameters) => {\n      const values = state.getNumericRefinements(attribute);\n\n      if (!values['>=']?.length) {\n        return undefined;\n      }\n\n      return values['>='][0];\n    };\n\n    const getFacetsMaxDecimalPlaces = (\n      facetResults: SearchResults.FacetValue[]\n    ) => {\n      let maxDecimalPlaces = 0;\n      facetResults.forEach((facetResult) => {\n        const [, decimal = ''] = facetResult.name.split('.');\n        maxDecimalPlaces = Math.max(maxDecimalPlaces, decimal.length);\n      });\n      return maxDecimalPlaces;\n    };\n\n    const getFacetValuesWarningMessage = ({\n      maxDecimalPlaces,\n      maxFacets,\n      maxValuesPerFacet,\n    }: {\n      maxDecimalPlaces: number;\n      maxFacets: number;\n      maxValuesPerFacet: number;\n    }) => {\n      const maxDecimalPlacesInRange = Math.max(\n        0,\n        Math.floor(Math.log10(MAX_VALUES_PER_FACET_API_LIMIT / max))\n      );\n      const maxFacetsInRange = Math.min(\n        MAX_VALUES_PER_FACET_API_LIMIT,\n        Math.pow(10, maxDecimalPlacesInRange) * max\n      );\n\n      const solutions: string[] = [];\n\n      if (maxFacets > MAX_VALUES_PER_FACET_API_LIMIT) {\n        solutions.push(\n          `- Update your records to lower the precision of the values in the \"${attribute}\" attribute (for example: ${(5.123456789).toPrecision(\n            maxDecimalPlaces + 1\n          )} to ${(5.123456789).toPrecision(maxDecimalPlacesInRange + 1)})`\n        );\n      }\n      if (maxValuesPerFacet < maxFacetsInRange) {\n        solutions.push(\n          `- Increase the maximum number of facet values to ${maxFacetsInRange} using the \"configure\" widget ${createDocumentationLink(\n            { name: 'configure' }\n          )} and the \"maxValuesPerFacet\" parameter https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/`\n        );\n      }\n\n      return `The ${attribute} attribute can have ${maxFacets} different values (0 to ${max} with a maximum of ${maxDecimalPlaces} decimals = ${maxFacets}) but you retrieved only ${maxValuesPerFacet} facet values. Therefore the number of results that match the refinements can be incorrect.\n    ${\n      solutions.length\n        ? `To resolve this problem you can:\\n${solutions.join('\\n')}`\n        : ``\n    }`;\n    };\n\n    function getRefinedState(state: SearchParameters, facetValue: string) {\n      const isRefined = getRefinedStar(state) === Number(facetValue);\n\n      const emptyState = state.resetPage().removeNumericRefinement(attribute);\n\n      if (!isRefined) {\n        return emptyState\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', Number(facetValue));\n      }\n      return emptyState;\n    }\n\n    const toggleRefinement = (\n      helper: AlgoliaSearchHelper,\n      facetValue: string\n    ) => {\n      sendEvent('click', facetValue);\n      helper.setState(getRefinedState(helper.state, facetValue)).search();\n    };\n\n    type ConnectorState = {\n      toggleRefinementFactory: (\n        helper: AlgoliaSearchHelper\n      ) => (facetValue: string) => void;\n      createURLFactory: ({\n        state,\n        createURL,\n      }: {\n        state: SearchParameters;\n        createURL: (createURLState: SearchParameters) => string;\n      }) => (value: string) => string;\n    };\n\n    const connectorState: ConnectorState = {\n      toggleRefinementFactory: (helper) => toggleRefinement.bind(null, helper),\n      createURLFactory:\n        ({ state, createURL }) =>\n        (value) =>\n          createURL(getRefinedState(state, value)),\n    };\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          ratingMenu: {\n            ...renderState.ratingMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        results,\n        state,\n        instantSearchInstance,\n        createURL,\n      }) {\n        let facetValues: StarRatingItems[] = [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance,\n            helper,\n            getRefinedStar: () => getRefinedStar(helper.state),\n            attribute,\n          });\n        }\n\n        let refinementIsApplied = false;\n        let totalCount = 0;\n\n        const facetResults = results?.getFacetValues(attribute, {}) as\n          | SearchResults.FacetValue[]\n          | undefined;\n\n        if (results && facetResults) {\n          const maxValuesPerFacet = facetResults.length;\n          const maxDecimalPlaces = getFacetsMaxDecimalPlaces(facetResults);\n          const maxFacets = Math.pow(10, maxDecimalPlaces) * max;\n\n          warning(\n            maxFacets <= maxValuesPerFacet || Boolean(results.__isArtificial),\n            getFacetValuesWarningMessage({\n              maxDecimalPlaces,\n              maxFacets,\n              maxValuesPerFacet,\n            })\n          );\n\n          const refinedStar = getRefinedStar(state);\n\n          for (let star = STEP; star < max; star += STEP) {\n            const isRefined = refinedStar === star;\n            refinementIsApplied = refinementIsApplied || isRefined;\n\n            const count = facetResults\n              .filter((f) => Number(f.name) >= star && Number(f.name) <= max)\n              .map((f) => f.count)\n              .reduce((sum, current) => sum + current, 0);\n            totalCount += count;\n\n            if (refinedStar && !isRefined && count === 0) {\n              // skip count==0 when at least 1 refinement is enabled\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const stars = [...new Array(Math.floor(max / STEP))].map(\n              (_v, i) => i * STEP < star\n            );\n\n            facetValues.push({\n              stars,\n              name: String(star),\n              label: String(star),\n              value: String(star),\n              count,\n              isRefined,\n            });\n          }\n        }\n        facetValues = facetValues.reverse();\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          items: facetValues,\n          hasNoResults,\n          canRefine: (!hasNoResults || refinementIsApplied) && totalCount > 0,\n          refine: connectorState.toggleRefinementFactory(helper),\n          sendEvent,\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const value = getRefinedStar(searchParameters);\n\n        if (typeof value !== 'number') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          ratingMenu: {\n            ...uiState.ratingMenu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.ratingMenu && uiState.ratingMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n        const withDisjunctiveFacet =\n          withoutRefinements.addDisjunctiveFacet(attribute);\n\n        if (!value) {\n          return withDisjunctiveFacet.setQueryParameters({\n            numericRefinements: {\n              ...withDisjunctiveFacet.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        return withDisjunctiveFacet\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', value);\n      },\n    };\n  };\n};\n\nexport default connectRatingMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'stats',\n  connector: true,\n});\n\n/**\n * **Stats** connector provides the logic to build a custom widget that will displays\n * search statistics (hits number and processing time).\n */\n\nexport type StatsRenderState = {\n  /**\n   * The maximum number of hits per page returned by Algolia.\n   */\n  hitsPerPage?: number;\n  /**\n   * The number of hits in the result set.\n   */\n  nbHits: number;\n  /**\n   * The number of sorted hits in the result set (when using Relevant sort).\n   */\n  nbSortedHits?: number;\n  /**\n   * Indicates whether the index is currently using Relevant sort and is displaying only sorted hits.\n   */\n  areHitsSorted: boolean;\n  /**\n   * The number of pages computed for the result set.\n   */\n  nbPages: number;\n  /**\n   * The current page.\n   */\n  page: number;\n  /**\n   * The time taken to compute the results inside the Algolia engine.\n   */\n  processingTimeMS: number;\n  /**\n   * The query used for the current search.\n   */\n  query: string;\n};\n\nexport type StatsConnectorParams = Record<string, unknown>;\n\nexport type StatsWidgetDescription = {\n  $$type: 'ais.stats';\n  renderState: StatsRenderState;\n  indexRenderState: {\n    stats: WidgetRenderState<StatsRenderState, StatsConnectorParams>;\n  };\n};\n\nexport type StatsConnector = Connector<\n  StatsWidgetDescription,\n  StatsConnectorParams\n>;\n\nconst connectStats: StatsConnector = function connectStats(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => ({\n    $$type: 'ais.stats',\n\n    init(initOptions) {\n      const { instantSearchInstance } = initOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(initOptions),\n          instantSearchInstance,\n        },\n        true\n      );\n    },\n\n    render(renderOptions) {\n      const { instantSearchInstance } = renderOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(renderOptions),\n          instantSearchInstance,\n        },\n        false\n      );\n    },\n\n    dispose() {\n      unmountFn();\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        stats: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState({ results, state }) {\n      if (!results) {\n        return {\n          hitsPerPage: state.hitsPerPage,\n          nbHits: 0,\n          nbSortedHits: undefined,\n          areHitsSorted: false,\n          nbPages: 0,\n          page: state.page || 0,\n          processingTimeMS: -1,\n          query: state.query || '',\n          widgetParams,\n        };\n      }\n\n      return {\n        hitsPerPage: results.hitsPerPage,\n        nbHits: results.nbHits,\n        nbSortedHits: results.nbSortedHits,\n        areHitsSorted:\n          typeof results.appliedRelevancyStrictness !== 'undefined' &&\n          results.appliedRelevancyStrictness > 0 &&\n          results.nbSortedHits !== results.nbHits,\n        nbPages: results.nbPages,\n        page: results.page,\n        processingTimeMS: results.processingTimeMS,\n        query: results.query,\n        widgetParams,\n      };\n    },\n  });\n};\n\nexport default connectStats;\n","import {\n  checkRendering,\n  escapeFacetValue,\n  createDocumentationMessageGenerator,\n  find,\n  noop,\n  toArray,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true,\n});\n\nconst $$type = 'ais.toggleRefinement';\n\ntype BuiltInSendEventForToggle = (\n  eventType: string,\n  isRefined: boolean,\n  eventName?: string\n) => void;\ntype CustomSendEventForToggle = (customPayload: any) => void;\n\nexport type SendEventForToggle = BuiltInSendEventForToggle &\n  CustomSendEventForToggle;\n\nconst createSendEvent = ({\n  instantSearchInstance,\n  helper,\n  attribute,\n  on,\n}: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string;\n  on: string[] | undefined;\n}) => {\n  const sendEventForToggle: SendEventForToggle = (...args: any[]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, isRefined, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    }\n\n    // only send an event when the refinement gets applied,\n    // not when it gets removed\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: on.map((value) => `${attribute}:${value}`),\n        },\n        attribute,\n      });\n    }\n  };\n  return sendEventForToggle;\n};\n\nexport type ToggleRefinementValue = {\n  /**\n   * Whether this option is enabled.\n   */\n  isRefined: boolean;\n  /**\n   * Number of result if this option is toggled.\n   */\n  count: number | null;\n};\n\nexport type ToggleRefinementConnectorParams = {\n  /**\n   * Name of the attribute for faceting (e.g., \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * Value to filter on when toggled.\n   * @default \"true\"\n   */\n  on?: FacetValue | FacetValue[];\n  /**\n   * Value to filter on when not toggled.\n   */\n  off?: FacetValue | FacetValue[];\n};\n\ntype FacetValue = string | boolean | number;\n\nexport type ToggleRefinementRenderState = {\n  /** The current toggle value */\n  value: {\n    /**\n     * The attribute name of this toggle.\n     */\n    name: string;\n    /**\n     * Whether the current option is \"on\" (true) or \"off\" (false)\n     */\n    isRefined: boolean;\n    /**\n     * Number of results if this option is toggled.\n     */\n    count: number | null;\n    /**\n     * Information about the \"on\" toggle.\n     */\n    onFacetValue: ToggleRefinementValue;\n    /**\n     * Information about the \"off\" toggle.\n     */\n    offFacetValue: ToggleRefinementValue;\n  };\n  /**\n   * Creates an URL for the next state.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Send a \"Facet Clicked\" Insights event.\n   */\n  sendEvent: SendEventForToggle;\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * Updates to the next state by applying the toggle refinement.\n   */\n  refine: (value?: { isRefined: boolean }) => void;\n};\n\nexport type ToggleRefinementWidgetDescription = {\n  $$type: 'ais.toggleRefinement';\n  renderState: ToggleRefinementRenderState;\n  indexRenderState: {\n    toggleRefinement: {\n      [attribute: string]: WidgetRenderState<\n        ToggleRefinementRenderState,\n        ToggleRefinementConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    toggle: {\n      [attribute: string]: boolean;\n    };\n  };\n};\n\nexport type ToggleRefinementConnector = Connector<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n>;\n\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\nconst connectToggleRefinement: ToggleRefinementConnector =\n  function connectToggleRefinement(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const { attribute, on: userOn = true, off: userOff } = widgetParams || {};\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      const hasAnOffValue = userOff !== undefined;\n      // even though facet values can be numbers and boolean,\n      // the helper methods only accept string in the type\n      const on = toArray(userOn).map(escapeFacetValue) as string[];\n      const off = hasAnOffValue\n        ? (toArray(userOff).map(escapeFacetValue) as string[])\n        : undefined;\n\n      let sendEvent: SendEventForToggle;\n\n      const toggleRefinementFactory =\n        (helper: AlgoliaSearchHelper) =>\n        (\n          {\n            isRefined,\n          }: {\n            isRefined: boolean;\n          } = { isRefined: false }\n        ) => {\n          if (!isRefined) {\n            sendEvent('click', isRefined);\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.removeDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n\n            on.forEach((v) =>\n              helper.addDisjunctiveFacetRefinement(attribute, v)\n            );\n          } else {\n            on.forEach((v) =>\n              helper.removeDisjunctiveFacetRefinement(attribute, v)\n            );\n\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.addDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n          }\n\n          helper.search();\n        };\n\n      const connectorState = {\n        createURLFactory:\n          (\n            isRefined: boolean,\n            {\n              state,\n              createURL,\n            }: {\n              state: SearchParameters;\n              createURL(parameters: SearchParameters): string;\n            }\n          ) =>\n          () => {\n            state = state.resetPage();\n\n            const valuesToRemove = isRefined ? on : off;\n            if (valuesToRemove) {\n              valuesToRemove.forEach((v) => {\n                state = state.removeDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            const valuesToAdd = isRefined ? off : on;\n            if (valuesToAdd) {\n              valuesToAdd.forEach((v) => {\n                state = state.addDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            return createURL(state);\n          },\n      };\n\n      return {\n        $$type,\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state.removeDisjunctiveFacet(attribute);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            toggleRefinement: {\n              ...renderState.toggleRefinement,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          state,\n          helper,\n          results,\n          createURL,\n          instantSearchInstance,\n        }) {\n          const isRefined = results\n            ? on.every((v) => state.isDisjunctiveFacetRefined(attribute, v))\n            : on.every((v) => state.isDisjunctiveFacetRefined(attribute, v));\n\n          let onFacetValue: ToggleRefinementValue = {\n            isRefined,\n            count: 0,\n          };\n\n          let offFacetValue: ToggleRefinementValue = {\n            isRefined: hasAnOffValue && !isRefined,\n            count: 0,\n          };\n\n          if (results) {\n            const offValue = toArray(off || false);\n            const allFacetValues = (results.getFacetValues(attribute, {}) ||\n              []) as SearchResults.FacetValue[];\n\n            const onData = on\n              .map((v) =>\n                find(\n                  allFacetValues,\n                  ({ escapedValue }) =>\n                    escapedValue === escapeFacetValue(String(v))\n                )\n              )\n              .filter((v): v is SearchResults.FacetValue => v !== undefined);\n\n            const offData = hasAnOffValue\n              ? offValue\n                  .map((v) =>\n                    find(\n                      allFacetValues,\n                      ({ escapedValue }) =>\n                        escapedValue === escapeFacetValue(String(v))\n                    )\n                  )\n                  .filter((v): v is SearchResults.FacetValue => v !== undefined)\n              : [];\n\n            onFacetValue = {\n              isRefined: onData.length\n                ? onData.every((v) => v.isRefined)\n                : false,\n              count: onData.reduce((acc, v) => acc + v.count, 0) || null,\n            };\n\n            offFacetValue = {\n              isRefined: offData.length\n                ? offData.every((v) => v.isRefined)\n                : false,\n              count:\n                offData.reduce((acc, v) => acc + v.count, 0) ||\n                allFacetValues.reduce((total, { count }) => total + count, 0),\n            };\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEvent({\n              instantSearchInstance,\n              attribute,\n              on,\n              helper,\n            });\n          }\n          const nextRefinement = isRefined ? offFacetValue : onFacetValue;\n\n          return {\n            value: {\n              name: attribute,\n              isRefined,\n              count: results ? nextRefinement.count : null,\n              onFacetValue,\n              offFacetValue,\n            },\n            createURL: connectorState.createURLFactory(isRefined, {\n              state,\n              createURL,\n            }),\n            sendEvent,\n            canRefine: Boolean(results ? nextRefinement.count : null),\n            refine: toggleRefinementFactory(helper),\n            widgetParams,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const isRefined =\n            on &&\n            on.every((v) =>\n              searchParameters.isDisjunctiveFacetRefined(attribute, v)\n            );\n\n          if (!isRefined) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            toggle: {\n              ...uiState.toggle,\n              [attribute]: isRefined,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          let withFacetConfiguration = searchParameters\n            .clearRefinements(attribute)\n            .addDisjunctiveFacet(attribute);\n\n          const isRefined = Boolean(\n            uiState.toggle && uiState.toggle[attribute]\n          );\n\n          if (isRefined) {\n            if (on) {\n              on.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n\n            return withFacetConfiguration;\n          }\n\n          // It's not refined with an `off` value\n          if (hasAnOffValue) {\n            if (off) {\n              off.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n            return withFacetConfiguration;\n          }\n\n          // It's not refined without an `off` value\n          return withFacetConfiguration.setQueryParameters({\n            disjunctiveFacetsRefinements: {\n              ...searchParameters.disjunctiveFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        },\n      };\n    };\n  };\n\nexport default connectToggleRefinement;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  isEqual,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'breadcrumb',\n  connector: true,\n});\n\nexport type BreadcrumbConnectorParamsItem = {\n  /**\n   * Label of the category or subcategory.\n   */\n  label: string;\n\n  /**\n   * Value of breadcrumb item.\n   */\n  value: string | null;\n};\n\nexport type BreadcrumbConnectorParams = {\n  /**\n   * Attributes to use to generate the hierarchy of the breadcrumb.\n   */\n  attributes: string[];\n\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<BreadcrumbConnectorParamsItem>;\n\n  /**\n   * The level separator used in the records.\n   *\n   * @default '>'\n   */\n  separator?: string;\n};\n\nexport type BreadcrumbRenderState = {\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<BreadcrumbConnectorParamsItem['value']>;\n\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: BreadcrumbConnectorParamsItem[];\n\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: BreadcrumbConnectorParamsItem['value']) => void;\n\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n};\n\nexport type BreadcrumbWidgetDescription = {\n  $$type: 'ais.breadcrumb';\n  renderState: BreadcrumbRenderState;\n  indexRenderState: {\n    breadcrumb: {\n      [rootAttribute: string]: WidgetRenderState<\n        BreadcrumbRenderState,\n        BreadcrumbConnectorParams\n      >;\n    };\n  };\n};\n\nexport type BreadcrumbConnector = Connector<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n>;\n\nconst connectBreadcrumb: BreadcrumbConnector = function connectBreadcrumb(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  type ConnectorState = {\n    refine?: BreadcrumbRenderState['refine'];\n    createURL?: BreadcrumbRenderState['createURL'];\n  };\n\n  const connectorState: ConnectorState = {};\n\n  return (widgetParams) => {\n    const {\n      attributes,\n      separator = ' > ',\n      rootPath = null,\n      transformItems = ((items) => items) as NonNullable<\n        BreadcrumbConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(\n        withUsage('The `attributes` option expects an array of strings.')\n      );\n    }\n\n    const [hierarchicalFacetName] = attributes;\n\n    function getRefinedState(\n      state: SearchParameters,\n      facetValue: string | null\n    ) {\n      if (!facetValue) {\n        const breadcrumb = state.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n        if (breadcrumb.length === 0) {\n          return state;\n        } else {\n          return state\n            .resetPage()\n            .toggleFacetRefinement(hierarchicalFacetName, breadcrumb[0]);\n        }\n      }\n      return state\n        .resetPage()\n        .toggleFacetRefinement(hierarchicalFacetName, facetValue);\n    }\n\n    return {\n      $$type: 'ais.breadcrumb',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          breadcrumb: {\n            ...renderState.breadcrumb,\n            [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper, createURL, results, state }) {\n        function getItems() {\n          // The hierarchicalFacets condition is required for flavors\n          // that render immediately with empty results, without relying\n          // on init() (like React InstantSearch Hooks).\n          if (!results || state.hierarchicalFacets.length === 0) {\n            return [];\n          }\n\n          const [{ name: facetName }] = state.hierarchicalFacets;\n\n          const facetValues = results.getFacetValues(facetName, {});\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n          const items = transformItems(\n            shiftItemsValues(prepareItems(facetItems)),\n            {\n              results,\n            }\n          );\n\n          return items;\n        }\n\n        const items = getItems();\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (facetValue) => {\n            return createURL(getRefinedState(helper.state, facetValue));\n          };\n        }\n\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            helper.setState(getRefinedState(helper.state, facetValue)).search();\n          };\n        }\n\n        return {\n          canRefine: items.length > 0,\n          createURL: connectorState.createURL,\n          items,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters) {\n        if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n          const facet = searchParameters.getHierarchicalFacetByName(\n            hierarchicalFacetName\n          );\n\n          warning(\n            isEqual(facet.attributes, attributes) &&\n              facet.separator === separator &&\n              facet.rootPath === rootPath,\n            'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n          );\n\n          return searchParameters;\n        }\n\n        return searchParameters.addHierarchicalFacet({\n          name: hierarchicalFacetName,\n          attributes,\n          separator,\n          rootPath,\n        });\n      },\n    };\n  };\n};\n\nfunction prepareItems(data: SearchResults.HierarchicalFacet[]) {\n  return data.reduce<BreadcrumbConnectorParamsItem[]>((result, currentItem) => {\n    if (currentItem.isRefined) {\n      result.push({\n        label: currentItem.name,\n        value: currentItem.escapedValue,\n      });\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array: BreadcrumbConnectorParamsItem[]) {\n  return array.map((x, idx) => ({\n    label: x.label,\n    value: idx + 1 === array.length ? null : array[idx + 1].value,\n  }));\n}\n\nexport default connectBreadcrumb;\n","import {\n  checkRendering,\n  aroundLatLngToPosition,\n  insideBoundingBoxToBoundingBox,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n} from '../../lib/utils';\n\nimport type { SendEventForHits } from '../../lib/utils';\nimport type {\n  BaseHit,\n  Connector,\n  GeoLoc,\n  Hit,\n  InitOptions,\n  RenderOptions,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'geo-search',\n  connector: true,\n});\n\n// in this connector, we assume insideBoundingBox is only a string,\n// even though in the helper it's defined as number[][] alone.\n// This can be done, since the connector assumes \"control\" of the parameter\nfunction getBoundingBoxAsString(state: SearchParameters) {\n  return (state.insideBoundingBox as unknown as string) || '';\n}\nfunction setBoundingBoxAsString(state: SearchParameters, value: string) {\n  return state.setQueryParameter(\n    'insideBoundingBox',\n    value as unknown as number[][]\n  );\n}\n\nexport type GeoHit<THit extends BaseHit = Record<string, any>> = Hit<THit> &\n  Required<Pick<Hit, '_geoloc'>>;\n\ntype Bounds = {\n  /**\n   * The top right corner of the map view.\n   */\n  northEast: GeoLoc;\n  /**\n   * The bottom left corner of the map view.\n   */\n  southWest: GeoLoc;\n};\n\nexport type GeoSearchRenderState<THit extends BaseHit = Record<string, any>> = {\n  /**\n   * Reset the current bounding box refinement.\n   */\n  clearMapRefinement(): void;\n  /**\n   * The current bounding box of the search.\n   */\n  currentRefinement?: Bounds;\n  /**\n   * Return true if the map has move since the last refinement.\n   */\n  hasMapMoveSinceLastRefine(): boolean;\n  /**\n   * Return true if the current refinement is set with the map bounds.\n   */\n  isRefinedWithMap(): boolean;\n  /**\n   * Return true if the user is able to refine on map move.\n   */\n  isRefineOnMapMove(): boolean;\n  /**\n   * The matched hits from Algolia API.\n   */\n  items: Array<GeoHit<THit>>;\n  /**\n   * The current position of the search.\n   */\n  position?: GeoLoc;\n  /**\n   * Sets a bounding box to filter the results from the given map bounds.\n   */\n  refine(bounds: Bounds): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n  /**\n   * Set the fact that the map has moved since the last refinement, should be\n   * called on each map move. The call to the function triggers a new rendering\n   * only when the value change.\n   */\n  setMapMoveSinceLastRefine(): void;\n  /**\n   * Toggle the fact that the user is able to refine on map move.\n   */\n  toggleRefineOnMapMove(): void;\n};\n\nexport type GeoSearchConnectorParams<\n  THit extends BaseHit = Record<string, any>\n> = {\n  /**\n   * If true, refine will be triggered as you move the map.\n   * @default true\n   */\n  enableRefineOnMapMove?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   * @default items => items\n   */\n  transformItems?: TransformItems<GeoHit<THit>>;\n};\n\nconst $$type = 'ais.geoSearch';\n\nexport type GeoSearchWidgetDescription<\n  THit extends BaseHit = Record<string, any>\n> = {\n  $$type: 'ais.geoSearch';\n  renderState: GeoSearchRenderState<THit>;\n  indexRenderState: {\n    geoSearch: WidgetRenderState<\n      GeoSearchRenderState<THit>,\n      GeoSearchConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    geoSearch: {\n      /**\n       * The rectangular area in geo coordinates.\n       * The rectangle is defined by two diagonally opposite points,\n       * hence by 4 floats separated by commas.\n       *\n       * @example '47.3165,4.9665,47.3424,5.0201'\n       */\n      boundingBox: string;\n    };\n  };\n};\n\nexport type GeoSearchConnector<THit extends BaseHit = Record<string, any>> =\n  Connector<GeoSearchWidgetDescription<THit>, GeoSearchConnectorParams<THit>>;\n\n/**\n * The **GeoSearch** connector provides the logic to build a widget that will display the results on a map. It also provides a way to search for results based on their position. The connector provides functions to manage the search experience (search on map interaction or control the interaction for example).\n *\n * @requirements\n *\n * Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n */\nconst connectGeoSearch: GeoSearchConnector = (renderFn, unmountFn = noop) => {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      enableRefineOnMapMove = true,\n      transformItems = ((items) => items) as NonNullable<\n        GeoSearchConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    const widgetState = {\n      isRefineOnMapMove: enableRefineOnMapMove,\n      // @MAJOR hasMapMoveSinceLastRefine -> hasMapMovedSinceLastRefine\n      hasMapMoveSinceLastRefine: false,\n      lastRefinePosition: '',\n      lastRefineBoundingBox: '',\n      internalToggleRefineOnMapMove: noop,\n      internalSetMapMoveSinceLastRefine: noop,\n    };\n\n    const getPositionFromState = (state: SearchParameters) =>\n      state.aroundLatLng\n        ? aroundLatLngToPosition(state.aroundLatLng)\n        : undefined;\n\n    const getCurrentRefinementFromState = (state: SearchParameters) =>\n      state.insideBoundingBox &&\n      insideBoundingBoxToBoundingBox(state.insideBoundingBox);\n\n    const refine =\n      (helper: AlgoliaSearchHelper) =>\n      ({ northEast: ne, southWest: sw }: Bounds) => {\n        const boundingBox = [ne.lat, ne.lng, sw.lat, sw.lng].join();\n\n        helper\n          .setState(\n            setBoundingBoxAsString(helper.state, boundingBox).resetPage()\n          )\n          .search();\n\n        widgetState.hasMapMoveSinceLastRefine = false;\n        widgetState.lastRefineBoundingBox = boundingBox;\n      };\n\n    const clearMapRefinement = (helper: AlgoliaSearchHelper) => () => {\n      helper.setQueryParameter('insideBoundingBox', undefined).search();\n    };\n\n    const isRefinedWithMap = (state: SearchParameters) => () =>\n      Boolean(state.insideBoundingBox);\n\n    const toggleRefineOnMapMove = () =>\n      widgetState.internalToggleRefineOnMapMove();\n    const createInternalToggleRefinementOnMapMove =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        widgetState.isRefineOnMapMove = !widgetState.isRefineOnMapMove;\n\n        render(renderOptions);\n      };\n\n    const isRefineOnMapMove = () => widgetState.isRefineOnMapMove;\n\n    const setMapMoveSinceLastRefine = () =>\n      widgetState.internalSetMapMoveSinceLastRefine();\n    const createInternalSetMapMoveSinceLastRefine =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        const shouldTriggerRender =\n          widgetState.hasMapMoveSinceLastRefine !== true;\n\n        widgetState.hasMapMoveSinceLastRefine = true;\n\n        if (shouldTriggerRender) {\n          render(renderOptions);\n        }\n      };\n\n    const hasMapMoveSinceLastRefine = () =>\n      widgetState.hasMapMoveSinceLastRefine;\n\n    let sendEvent: SendEventForHits;\n\n    return {\n      $$type,\n\n      init(initArgs) {\n        const { instantSearchInstance } = initArgs;\n        const isFirstRendering = true;\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(initArgs, noop);\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(initArgs, noop);\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initArgs),\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      render(renderArgs) {\n        const { helper, instantSearchInstance } = renderArgs;\n        const isFirstRendering = false;\n        // We don't use the state provided by the render function because we need\n        // to be sure that the state is the latest one for the following condition\n        const state = helper.state;\n\n        const positionChangedSinceLastRefine =\n          Boolean(state.aroundLatLng) &&\n          Boolean(widgetState.lastRefinePosition) &&\n          state.aroundLatLng !== widgetState.lastRefinePosition;\n\n        const boundingBoxChangedSinceLastRefine =\n          !state.insideBoundingBox &&\n          Boolean(widgetState.lastRefineBoundingBox) &&\n          state.insideBoundingBox !== widgetState.lastRefineBoundingBox;\n\n        if (\n          positionChangedSinceLastRefine ||\n          boundingBoxChangedSinceLastRefine\n        ) {\n          widgetState.hasMapMoveSinceLastRefine = false;\n        }\n\n        widgetState.lastRefinePosition = state.aroundLatLng || '';\n\n        widgetState.lastRefineBoundingBox = getBoundingBoxAsString(state);\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        const widgetRenderState = this.getWidgetRenderState(renderArgs);\n\n        sendEvent('view', widgetRenderState.items);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, results, instantSearchInstance } = renderOptions;\n        const state = helper.state;\n\n        const items = results\n          ? transformItems(\n              results.hits.filter((hit) => hit._geoloc),\n              { results }\n            )\n          : [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: $$type,\n          });\n        }\n\n        return {\n          items,\n          position: getPositionFromState(state),\n          currentRefinement: getCurrentRefinementFromState(state),\n          refine: refine(helper),\n          sendEvent,\n          clearMapRefinement: clearMapRefinement(helper),\n          isRefinedWithMap: isRefinedWithMap(state),\n          toggleRefineOnMapMove,\n          isRefineOnMapMove,\n          setMapMoveSinceLastRefine,\n          hasMapMoveSinceLastRefine,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          geoSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('insideBoundingBox', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const boundingBox = getBoundingBoxAsString(searchParameters);\n\n        if (\n          !boundingBox ||\n          (uiState &&\n            uiState.geoSearch &&\n            uiState.geoSearch.boundingBox === boundingBox)\n        ) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          geoSearch: {\n            boundingBox,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        if (!uiState || !uiState.geoSearch) {\n          return searchParameters.setQueryParameter(\n            'insideBoundingBox',\n            undefined\n          );\n        }\n        return setBoundingBoxAsString(\n          searchParameters,\n          uiState.geoSearch.boundingBox\n        );\n      },\n    };\n  };\n};\n\nexport default connectGeoSearch;\n","import {\n  safelyRunOnBrowser,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'powered-by',\n  connector: true,\n});\n\nexport type PoweredByRenderState = {\n  /** the url to redirect to on click */\n  url: string;\n};\n\nexport type PoweredByConnectorParams = {\n  /** the url to redirect to on click */\n  url?: string;\n};\n\nexport type PoweredByWidgetDescription = {\n  $$type: 'ais.poweredBy';\n  renderState: PoweredByRenderState;\n  indexRenderState: {\n    poweredBy: WidgetRenderState<\n      PoweredByRenderState,\n      PoweredByConnectorParams\n    >;\n  };\n};\n\nexport type PoweredByConnector = Connector<\n  PoweredByWidgetDescription,\n  PoweredByConnectorParams\n>;\n\n/**\n * **PoweredBy** connector provides the logic to build a custom widget that will displays\n * the logo to redirect to Algolia.\n */\nconst connectPoweredBy: PoweredByConnector = function connectPoweredBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const defaultUrl =\n    'https://www.algolia.com/?' +\n    'utm_source=instantsearch.js&' +\n    'utm_medium=website&' +\n    `utm_content=${safelyRunOnBrowser<string>(\n      ({ window }) => window.location?.hostname || '',\n      { fallback: () => '' }\n    )}&` +\n    'utm_campaign=poweredby';\n\n  return (widgetParams) => {\n    const { url = defaultUrl } = widgetParams || {};\n\n    return {\n      $$type: 'ais.poweredBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          poweredBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          url,\n          widgetParams,\n        };\n      },\n\n      dispose() {\n        unmountFn();\n      },\n    };\n  };\n};\n\nexport default connectPoweredBy;\n","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__' ||\n      key === 'constructor'\n    ) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns any\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns any\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue\n};\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function(key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(unescapeFacetValue(refinementValue)) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    results.slice(nextDisjunctiveResult).forEach(function(result) {\n      var facets = result && result.facets\n        ? result.facets\n        : {};\n\n      Object.keys(facets).forEach(function(dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        var defaultData = {};\n\n        if (currentRefinement.length > 0) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n          defaultData,\n          facetResults,\n          self.hierarchicalFacets[position][attributeIndex].data\n        );\n      });\n\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    var hierarchicalFacetValues = find(results.hierarchicalFacets, predicate);\n    if (!hierarchicalFacetValues) return hierarchicalFacetValues;\n\n    var hierarchicalFacet = results._state.getHierarchicalFacetByName(attribute);\n    var currentRefinementSplit = unescapeFacetValue(\n      results._state.getHierarchicalRefinement(attribute)[0] || ''\n    ).split(results._state._getHierarchicalFacetSeparator(hierarchicalFacet));\n    currentRefinementSplit.unshift(attribute);\n\n    setIsRefined(hierarchicalFacetValues, currentRefinementSplit, 0);\n\n    return hierarchicalFacetValues;\n  }\n}\n\n/**\n * Set the isRefined of a hierarchical facet result based on the current state.\n * @param {SearchResults.HierarchicalFacet} item Hierarchical facet to fix\n * @param {string[]} currentRefinementSplit array of parts of the current hierarchical refinement\n * @param {number} depth recursion depth in the currentRefinement\n */\nfunction setIsRefined(item, currentRefinement, depth) {\n  item.isRefined = item.name === currentRefinement[depth];\n  if (item.data) {\n    item.data.forEach(function(child) {\n      setIsRefined(child, currentRefinement, depth + 1);\n    });\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({data: sortedChildren}, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array}\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function(acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function(item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function(facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [['path', 'name'], ['asc', 'asc']];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering=}\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy)\n  });\n\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(function(data, facetName) {\n    if (options.facetOrdering) {\n      var facetOrdering = getFacetOrdering(results, facetName);\n      if (Boolean(facetOrdering)) {\n        return sortViaFacetOrdering(data, facetOrdering);\n      }\n    }\n\n    if (Array.isArray(options.sortBy)) {\n      var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n      return orderBy(data, order[0], order[1]);\n    } else if (typeof options.sortBy === 'function') {\n      return vanillaSortFn(options.sortBy, data);\n    }\n    throw new Error(\n      'options.sortBy is optional but if defined it must be ' +\n        'either an array of string (predicates) or a sorting function'\n    );\n  }, facetValues, attributes);\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nfunction sortObject(obj) {\n  return Object.keys(obj)\n    .sort(function(a, b) {\n      return a.localeCompare(b);\n    })\n    .reduce(function(acc, curr) {\n      acc[curr] = obj[curr];\n      return acc;\n    }, {});\n}\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0].split(separator).slice(0, -1).reduce(\n          function createFiltersMap(map, segment, level) {\n            return map.concat({\n              attribute: hierarchicalFacet.attributes[level],\n              value: level === 0\n                ? segment\n                : [map[map.length - 1].value, segment].join(separator)\n            });\n          }\n        , []);\n\n        filtersMap.forEach(function(filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(\n            state,\n            filter.attribute,\n            level === 0\n          );\n\n          // Keep facet filters unrelated to current hierarchical attributes\n          function hasHierarchicalFacetFilter(value) {\n            return hierarchicalFacet.attributes.some(function(attribute) {\n              return attribute === value.split(':')[0];\n            });\n          }\n\n          var filteredFacetFilters = (params.facetFilters || []).reduce(function(acc, facetFilter) {\n            if (Array.isArray(facetFilter)) {\n              var filtered = facetFilter.filter(function(filterValue) {\n                return !hasHierarchicalFacetFilter(filterValue);\n              });\n\n              if (filtered.length > 0) {\n                acc.push(filtered);\n              }\n            }\n\n            if (typeof facetFilter === 'string' && !hasHierarchicalFacetFilter(facetFilter)) {\n              acc.push(facetFilter);\n            }\n\n            return acc;\n          }, []);\n\n          var parent = filtersMap[level - 1];\n          if (level > 0) {\n            params.facetFilters = filteredFacetFilters.concat(parent.attribute + ':' + parent.value);\n          } else {\n            params.facetFilters = filteredFacetFilters.length > 0 ? filteredFacetFilters : undefined;\n          }\n\n          queries.push({indexName: index, params: params});\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    ));\n  }\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = '3.11.3';\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n * @deprecated answers is deprecated and will be replaced with new initiatives\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  console.warn('[algoliasearch-helper] answers is no longer supported');\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (\n    !clientHasSFFV &&\n    !clientHasInitIndex &&\n    typeof this.client.search !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([\n      {indexName: state.index, params: algoliaQuery}\n    ]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client\n      .initIndex(state.index)\n      .searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client\n      .search([\n        {\n          type: 'facet',\n          facet: facet,\n          indexName: state.index,\n          params: algoliaQuery\n        }\n      ])\n      .then(function processResponse(response) {\n        return response.results[0];\n      });\n  }\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.escapedValue = escapeFacetValue(f.value);\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n        : state.isFacetRefined(facet, f.escapedValue);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","import algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  createDocumentationMessageGenerator,\n  isPlainObject,\n  mergeSearchParameters,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\nimport type {\n  SearchParameters,\n  PlainSearchParameters,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\n\n/**\n * Refine the given search parameters.\n */\ntype Refine = (searchParameters: PlainSearchParameters) => void;\n\nexport type ConfigureConnectorParams = {\n  /**\n   * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n   * to enable when the widget mounts.\n   */\n  searchParameters: PlainSearchParameters;\n};\n\nexport type ConfigureRenderState = {\n  /**\n   * Refine the given search parameters.\n   */\n  refine: Refine;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true,\n});\n\nfunction getInitialSearchParameters(\n  state: SearchParameters,\n  widgetParams: ConfigureConnectorParams\n): SearchParameters {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(\n    Object.keys(widgetParams.searchParameters).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: undefined,\n      }),\n      {}\n    )\n  );\n}\n\nexport type ConfigureWidgetDescription = {\n  $$type: 'ais.configure';\n  renderState: ConfigureRenderState;\n  indexRenderState: {\n    configure: WidgetRenderState<\n      ConfigureRenderState,\n      ConfigureConnectorParams\n    >;\n  };\n  indexUiState: {\n    configure: PlainSearchParameters;\n  };\n};\n\nexport type ConfigureConnector = Connector<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n>;\n\nconst connectConfigure: ConfigureConnector = function connectConfigure(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(\n        withUsage('The `searchParameters` option expects an object.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function refine(helper: AlgoliaSearchHelper): Refine {\n      return (searchParameters: PlainSearchParameters) => {\n        // Merge new `searchParameters` with the ones set from other widgets\n        const actualState = getInitialSearchParameters(\n          helper.state,\n          widgetParams\n        );\n        const nextSearchParameters = mergeSearchParameters(\n          actualState,\n          new algoliasearchHelper.SearchParameters(searchParameters)\n        );\n\n        // Update original `widgetParams.searchParameters` to the new refined one\n        widgetParams.searchParameters = searchParameters;\n\n        // Trigger a search with the resolved search parameters\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return getInitialSearchParameters(state, widgetParams);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return {\n          ...renderState,\n          configure: {\n            ...widgetRenderState,\n            widgetParams: {\n              ...widgetRenderState.widgetParams,\n              searchParameters: mergeSearchParameters(\n                new algoliasearchHelper.SearchParameters(\n                  renderState.configure?.widgetParams.searchParameters\n                ),\n                new algoliasearchHelper.SearchParameters(\n                  widgetRenderState.widgetParams.searchParameters\n                )\n              ).getQueryParams(),\n            },\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return mergeSearchParameters(\n          state,\n          new algoliasearchHelper.SearchParameters({\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          })\n        );\n      },\n\n      getWidgetUiState(uiState) {\n        return {\n          ...uiState,\n          configure: {\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          },\n        };\n      },\n    };\n  };\n};\n\nexport default connectConfigure;\n","import algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  createDocumentationMessageGenerator,\n  getObjectType,\n  warning,\n  getPropertyByPath,\n} from '../../lib/utils';\nimport connectConfigure from '../configure/connectConfigure';\n\nimport type { AlgoliaHit, Connector } from '../../types';\nimport type { ConfigureWidgetDescription } from '../configure/connectConfigure';\nimport type {\n  SearchParameters,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\n\nexport type MatchingPatterns = {\n  [attribute: string]: {\n    /**\n     * The score of the optional filter.\n     *\n     * @see https://www.algolia.com/doc/guides/managing-results/rules/merchandising-and-promoting/in-depth/optional-filters/\n     */\n    score: number;\n  };\n};\n\nexport type TransformSearchParameters = (\n  searchParameters: SearchParameters\n) => PlainSearchParameters;\n\nexport type ConfigureRelatedItemsConnectorParams = {\n  /**\n   * The reference hit to extract the filters from.\n   */\n  hit: AlgoliaHit;\n  /**\n   * The schema to create the optional filters.\n   * Each key represents an attribute from the hit.\n   */\n  matchingPatterns: MatchingPatterns;\n  /**\n   * Function to transform the generated search parameters.\n   */\n  transformSearchParameters?: TransformSearchParameters;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure-related-items',\n  connector: true,\n});\n\nfunction createOptionalFilter({\n  attributeName,\n  attributeValue,\n  attributeScore,\n}: {\n  attributeName: string;\n  attributeValue: string;\n  attributeScore: number;\n}) {\n  return `${attributeName}:${attributeValue}<score=${attributeScore || 1}>`;\n}\n\nexport type ConfigureRelatedItemsWidgetDescription = {\n  $$type: 'ais.configureRelatedItems';\n} & Omit<ConfigureWidgetDescription, '$$type'>;\n\nexport type ConfigureRelatedItemsConnector = Connector<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n>;\n\nconst connectConfigureRelatedItems: ConfigureRelatedItemsConnector =\n  function connectConfigureRelatedItems(renderFn, unmountFn) {\n    return (widgetParams) => {\n      const {\n        hit,\n        matchingPatterns,\n        transformSearchParameters = ((x) => x) as TransformSearchParameters,\n      } = widgetParams || {};\n\n      if (!hit) {\n        throw new Error(withUsage('The `hit` option is required.'));\n      }\n\n      if (!matchingPatterns) {\n        throw new Error(\n          withUsage('The `matchingPatterns` option is required.')\n        );\n      }\n\n      const optionalFilters = Object.keys(matchingPatterns).reduce<\n        Array<string | string[]>\n      >((acc, attributeName) => {\n        const attribute = matchingPatterns[attributeName];\n        const attributeValue = getPropertyByPath(hit, attributeName);\n        const attributeScore = attribute.score;\n\n        if (Array.isArray(attributeValue)) {\n          return [\n            ...acc,\n            attributeValue.map((attributeSubValue) => {\n              return createOptionalFilter({\n                attributeName,\n                attributeValue: attributeSubValue,\n                attributeScore,\n              });\n            }),\n          ];\n        }\n\n        if (typeof attributeValue === 'string') {\n          return [\n            ...acc,\n            createOptionalFilter({\n              attributeName,\n              attributeValue,\n              attributeScore,\n            }),\n          ];\n        }\n\n        warning(\n          false,\n          `\nThe \\`matchingPatterns\\` option returned a value of type ${getObjectType(\n            attributeValue\n          )} for the \"${attributeName}\" key. This value was not sent to Algolia because \\`optionalFilters\\` only supports strings and array of strings.\n\nYou can remove the \"${attributeName}\" key from the \\`matchingPatterns\\` option.\n\nSee https://www.algolia.com/doc/api-reference/api-parameters/optionalFilters/\n            `\n        );\n\n        return acc;\n      }, []);\n\n      const searchParameters: PlainSearchParameters = {\n        ...transformSearchParameters(\n          new algoliasearchHelper.SearchParameters({\n            sumOrFiltersScores: true,\n            facetFilters: [`objectID:-${hit.objectID}`],\n            optionalFilters,\n          })\n        ),\n      };\n\n      const makeWidget = connectConfigure(renderFn, unmountFn);\n\n      return {\n        // required, since widget parameters differ between these connectors\n        // and we don't want to have the parameters of configure here\n        ...makeWidget({ searchParameters } as any),\n        $$type: 'ais.configureRelatedItems',\n      };\n    };\n  };\n\nexport default connectConfigureRelatedItems;\n","import {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n  warning,\n} from '../../lib/utils';\n\nimport type { SendEventForHits } from '../../lib/utils';\nimport type { Hit, Connector, WidgetRenderState } from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true,\n});\n\nexport type AutocompleteConnectorParams = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n};\n\nexport type AutocompleteRenderState = {\n  /**\n   * The current value of the query.\n   */\n  currentRefinement: string;\n\n  /**\n   * The indices this widget has access to.\n   */\n  indices: Array<{\n    /**\n     * The name of the index\n     */\n    indexName: string;\n\n    /**\n     * The resolved hits from the index matching the query.\n     */\n    hits: Hit[];\n\n    /**\n     * The full results object from the Algolia API.\n     */\n    results: SearchResults;\n\n    /**\n     * Send event to insights middleware\n     */\n    sendEvent: SendEventForHits;\n  }>;\n\n  /**\n   * Searches into the indices with the provided query.\n   */\n  refine: (query: string) => void;\n};\n\nexport type AutocompleteWidgetDescription = {\n  $$type: 'ais.autocomplete';\n  renderState: AutocompleteRenderState;\n  indexRenderState: {\n    autocomplete: WidgetRenderState<\n      AutocompleteRenderState,\n      AutocompleteConnectorParams\n    >;\n  };\n  indexUiState: { query: string };\n};\n\nexport type AutocompleteConnector = Connector<\n  AutocompleteWidgetDescription,\n  AutocompleteConnectorParams\n>;\n\nconst connectAutocomplete: AutocompleteConnector = function connectAutocomplete(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { escapeHTML = true } = widgetParams || {};\n\n    warning(\n      !(widgetParams as any).indices,\n      `\nThe option \\`indices\\` has been removed from the Autocomplete connector.\n\nThe indices to target are now inferred from the widgets tree.\n${\n  Array.isArray((widgetParams as any).indices)\n    ? `\nAn alternative would be:\n\nconst autocomplete = connectAutocomplete(renderer);\n\nsearch.addWidgets([\n  ${(widgetParams as any).indices\n    .map(({ value }: { value: string }) => `index({ indexName: '${value}' }),`)\n    .join('\\n  ')}\n  autocomplete()\n]);\n`\n    : ''\n}\n      `\n    );\n\n    type ConnectorState = {\n      refine?(query: string): void;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.autocomplete',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderState.indices.forEach(({ sendEvent, hits }) => {\n          sendEvent('view', hits);\n        });\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          autocomplete: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        state,\n        scopedResults,\n        instantSearchInstance,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (query: string) => {\n            helper.setQuery(query).search();\n          };\n        }\n\n        const indices = scopedResults.map((scopedResult) => {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML\n            ? escapeHits(scopedResult.results.hits)\n            : scopedResult.results.hits;\n\n          const sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: scopedResult.results.index,\n            widgetType: this.$$type,\n          });\n\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent,\n          };\n        });\n\n        return {\n          currentRefinement: state.query || '',\n          indices,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const parameters = {\n          query: uiState.query || '',\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters({\n          ...parameters,\n          ...TAG_PLACEHOLDER,\n        });\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n    };\n  };\n};\n\nexport default connectAutocomplete;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  warning,\n  getRefinements,\n  isEqual,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  Refinement as InternalRefinement,\n  NumericRefinement as InternalNumericRefinement,\n} from '../../lib/utils';\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\nimport type {\n  AlgoliaSearchHelper as Helper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\ntype TrackedFilterRefinement = string | number | boolean;\n\nexport type ParamTrackedFilters = {\n  [facetName: string]: (\n    facetValues: TrackedFilterRefinement[]\n  ) => TrackedFilterRefinement[];\n};\nexport type ParamTransformRuleContexts = (ruleContexts: string[]) => string[];\n\nexport type QueryRulesConnectorParams = {\n  trackedFilters?: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n  transformItems?: TransformItems<any>;\n};\n\nexport type QueryRulesRenderState = {\n  items: any[];\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rules',\n  connector: true,\n});\n\nfunction hasStateRefinements(state: SearchParameters): boolean {\n  return [\n    state.disjunctiveFacetsRefinements,\n    state.facetsRefinements,\n    state.hierarchicalFacetsRefinements,\n    state.numericRefinements,\n  ].some((refinement) =>\n    Boolean(refinement && Object.keys(refinement).length > 0)\n  );\n}\n\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName: string): string {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\n\nfunction getRuleContextsFromTrackedFilters({\n  helper,\n  sharedHelperState,\n  trackedFilters,\n}: {\n  helper: Helper;\n  sharedHelperState: SearchParameters;\n  trackedFilters: ParamTrackedFilters;\n}): string[] {\n  const ruleContexts = Object.keys(trackedFilters).reduce<string[]>(\n    (facets, facetName) => {\n      const facetRefinements: TrackedFilterRefinement[] = getRefinements(\n        helper.lastResults || {},\n        sharedHelperState,\n        true\n      )\n        .filter(\n          (refinement: InternalRefinement) => refinement.attribute === facetName\n        )\n        .map(\n          (refinement: InternalRefinement) =>\n            (refinement as InternalNumericRefinement).numericValue ||\n            refinement.name\n        );\n\n      const getTrackedFacetValues = trackedFilters[facetName];\n      const trackedFacetValues = getTrackedFacetValues(facetRefinements);\n\n      return [\n        ...facets,\n        ...facetRefinements\n          .filter((facetRefinement) =>\n            trackedFacetValues.includes(facetRefinement)\n          )\n          .map((facetValue) =>\n            escapeRuleContext(`ais-${facetName}-${facetValue}`)\n          ),\n      ];\n    },\n    []\n  );\n\n  return ruleContexts;\n}\n\nfunction applyRuleContexts(\n  this: {\n    helper: Helper;\n    initialRuleContexts: string[];\n    trackedFilters: ParamTrackedFilters;\n    transformRuleContexts: ParamTransformRuleContexts;\n  },\n  event: { state: SearchParameters }\n): void {\n  const { helper, initialRuleContexts, trackedFilters, transformRuleContexts } =\n    this;\n\n  const sharedHelperState = event.state;\n  const previousRuleContexts: string[] = sharedHelperState.ruleContexts || [];\n  const newRuleContexts = getRuleContextsFromTrackedFilters({\n    helper,\n    sharedHelperState,\n    trackedFilters,\n  });\n  const nextRuleContexts = [...initialRuleContexts, ...newRuleContexts];\n\n  warning(\n    nextRuleContexts.length <= 10,\n    `\nThe maximum number of \\`ruleContexts\\` is 10. They have been sliced to that limit.\nConsider using \\`transformRuleContexts\\` to minimize the number of rules sent to Algolia.\n`\n  );\n\n  const ruleContexts = transformRuleContexts(nextRuleContexts).slice(0, 10);\n\n  if (!isEqual(previousRuleContexts, ruleContexts)) {\n    helper.overrideStateWithoutTriggeringChangeEvent({\n      ...sharedHelperState,\n      ruleContexts,\n    });\n  }\n}\n\nexport type QueryRulesWidgetDescription = {\n  $$type: 'ais.queryRules';\n  renderState: QueryRulesRenderState;\n  indexRenderState: {\n    queryRules: WidgetRenderState<\n      QueryRulesRenderState,\n      QueryRulesConnectorParams\n    >;\n  };\n};\n\nexport type QueryRulesConnector = Connector<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n>;\n\nconst connectQueryRules: QueryRulesConnector = function connectQueryRules(\n  render,\n  unmount = noop\n) {\n  checkRendering(render, withUsage());\n\n  return (widgetParams) => {\n    const {\n      trackedFilters = {} as ParamTrackedFilters,\n      transformRuleContexts = ((rules) => rules) as ParamTransformRuleContexts,\n      transformItems = ((items) => items) as NonNullable<\n        QueryRulesConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    Object.keys(trackedFilters).forEach((facetName) => {\n      if (typeof trackedFilters[facetName] !== 'function') {\n        throw new Error(\n          withUsage(\n            `'The \"${facetName}\" filter value in the \\`trackedFilters\\` option expects a function.`\n          )\n        );\n      }\n    });\n\n    const hasTrackedFilters = Object.keys(trackedFilters).length > 0;\n\n    // We store the initial rule contexts applied before creating the widget\n    // so that we do not override them with the rules created from `trackedFilters`.\n    let initialRuleContexts: string[] = [];\n    let onHelperChange: (event: { state: SearchParameters }) => void;\n\n    return {\n      $$type: 'ais.queryRules',\n\n      init(initOptions) {\n        const { helper, state, instantSearchInstance } = initOptions;\n\n        initialRuleContexts = state.ruleContexts || [];\n        onHelperChange = applyRuleContexts.bind({\n          helper,\n          initialRuleContexts,\n          trackedFilters,\n          transformRuleContexts,\n        });\n\n        if (hasTrackedFilters) {\n          // We need to apply the `ruleContexts` based on the `trackedFilters`\n          // before the helper changes state in some cases:\n          //   - Some filters are applied on the first load (e.g. using `configure`)\n          //   - The `transformRuleContexts` option sets initial `ruleContexts`.\n          if (\n            hasStateRefinements(state) ||\n            Boolean(widgetParams.transformRuleContexts)\n          ) {\n            onHelperChange({ state });\n          }\n\n          // We track every change in the helper to override its state and add\n          // any `ruleContexts` needed based on the `trackedFilters`.\n          helper.on('change', onHelperChange);\n        }\n\n        render(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        render(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getWidgetRenderState({ results }) {\n        const { userData = [] } = results || {};\n        const items = transformItems(userData, { results });\n\n        return {\n          items,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          queryRules: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ helper, state }) {\n        unmount();\n\n        if (hasTrackedFilters) {\n          helper.removeListener('change', onHelperChange);\n\n          return state.setQueryParameter('ruleContexts', initialRuleContexts);\n        }\n\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectQueryRules;\n","// `SpeechRecognition` is an API used on the browser so we can safely disable\n// the `window` check.\n/* eslint-disable no-restricted-globals */\n/* global SpeechRecognition SpeechRecognitionEvent */\nimport type {\n  CreateVoiceSearchHelper,\n  Status,\n  VoiceListeningState,\n} from './types';\n\nconst createVoiceSearchHelper: CreateVoiceSearchHelper =\n  function createVoiceSearchHelper({\n    searchAsYouSpeak,\n    language,\n    onQueryChange,\n    onStateChange,\n  }) {\n    const SpeechRecognitionAPI: new () => SpeechRecognition =\n      (window as any).webkitSpeechRecognition ||\n      (window as any).SpeechRecognition;\n    const getDefaultState = (status: Status): VoiceListeningState => ({\n      status,\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    });\n    let state: VoiceListeningState = getDefaultState('initial');\n    let recognition: SpeechRecognition | undefined;\n\n    const isBrowserSupported = (): boolean => Boolean(SpeechRecognitionAPI);\n\n    const isListening = (): boolean =>\n      state.status === 'askingPermission' ||\n      state.status === 'waiting' ||\n      state.status === 'recognizing';\n\n    const setState = (newState: Partial<VoiceListeningState> = {}): void => {\n      state = { ...state, ...newState };\n      onStateChange();\n    };\n\n    const getState = (): VoiceListeningState => state;\n\n    const resetState = (status: Status = 'initial'): void => {\n      setState(getDefaultState(status));\n    };\n\n    const onStart = (): void => {\n      setState({\n        status: 'waiting',\n      });\n    };\n\n    const onError = (event: Event): void => {\n      setState({ status: 'error', errorCode: (event as any).error });\n    };\n\n    const onResult = (event: SpeechRecognitionEvent): void => {\n      setState({\n        status: 'recognizing',\n        transcript:\n          (event.results[0] &&\n            event.results[0][0] &&\n            event.results[0][0].transcript) ||\n          '',\n        isSpeechFinal: event.results[0] && event.results[0].isFinal,\n      });\n      if (searchAsYouSpeak && state.transcript) {\n        onQueryChange(state.transcript);\n      }\n    };\n\n    const onEnd = (): void => {\n      if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n        onQueryChange(state.transcript);\n      }\n      if (state.status !== 'error') {\n        setState({ status: 'finished' });\n      }\n    };\n\n    const startListening = (): void => {\n      recognition = new SpeechRecognitionAPI();\n      if (!recognition) {\n        return;\n      }\n      resetState('askingPermission');\n      recognition.interimResults = true;\n\n      if (language) {\n        recognition.lang = language;\n      }\n\n      recognition.addEventListener('start', onStart);\n      recognition.addEventListener('error', onError);\n      recognition.addEventListener('result', onResult);\n      recognition.addEventListener('end', onEnd);\n      recognition.start();\n    };\n\n    const dispose = (): void => {\n      if (!recognition) {\n        return;\n      }\n      recognition.stop();\n      recognition.removeEventListener('start', onStart);\n      recognition.removeEventListener('error', onError);\n      recognition.removeEventListener('result', onResult);\n      recognition.removeEventListener('end', onEnd);\n      recognition = undefined;\n    };\n\n    const stopListening = (): void => {\n      dispose();\n      // Because `dispose` removes event listeners, `end` listener is not called.\n      // So we're setting the `status` as `finished` here.\n      // If we don't do it, it will be still `waiting` or `recognizing`.\n      resetState('finished');\n    };\n\n    return {\n      getState,\n      isBrowserSupported,\n      isListening,\n      startListening,\n      stopListening,\n      dispose,\n    };\n  };\n\nexport default createVoiceSearchHelper;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport builtInCreateVoiceSearchHelper from '../../lib/voiceSearchHelper';\n\nimport type {\n  CreateVoiceSearchHelper,\n  VoiceListeningState,\n} from '../../lib/voiceSearchHelper/types';\nimport type { Connector, WidgetRenderState } from '../../types';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'voice-search',\n  connector: true,\n});\n\nexport type VoiceSearchConnectorParams = {\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchRenderState = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n};\n\nexport type VoiceSearchWidgetDescription = {\n  $$type: 'ais.voiceSearch';\n  renderState: VoiceSearchRenderState;\n  indexRenderState: {\n    voiceSearch: WidgetRenderState<\n      VoiceSearchRenderState,\n      VoiceSearchConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type VoiceSearchConnector = Connector<\n  VoiceSearchWidgetDescription,\n  VoiceSearchConnectorParams\n>;\n\nconst connectVoiceSearch: VoiceSearchConnector = function connectVoiceSearch(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      searchAsYouSpeak = false,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper = builtInCreateVoiceSearchHelper,\n    } = widgetParams;\n\n    return {\n      $$type: 'ais.voiceSearch',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          voiceSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, instantSearchInstance } = renderOptions;\n        if (!(this as any)._refine) {\n          (this as any)._refine = (query: string): void => {\n            if (query !== helper.state.query) {\n              const queryLanguages = language\n                ? [language.split('-')[0]]\n                : undefined;\n              helper.setQueryParameter('queryLanguages', queryLanguages);\n\n              if (typeof additionalQueryParameters === 'function') {\n                helper.setState(\n                  helper.state.setQueryParameters({\n                    ignorePlurals: true,\n                    removeStopWords: true,\n                    // @ts-ignore (optionalWords only allows array in v3, while string is also valid)\n                    optionalWords: query,\n                    ...additionalQueryParameters({ query }),\n                  })\n                );\n              }\n\n              helper.setQuery(query).search();\n            }\n          };\n        }\n\n        if (!(this as any)._voiceSearchHelper) {\n          (this as any)._voiceSearchHelper = createVoiceSearchHelper({\n            searchAsYouSpeak,\n            language,\n            onQueryChange: (query) => (this as any)._refine(query),\n            onStateChange: () => {\n              renderFn(\n                {\n                  ...this.getWidgetRenderState(renderOptions),\n                  instantSearchInstance,\n                },\n                false\n              );\n            },\n          });\n        }\n\n        const {\n          isBrowserSupported,\n          isListening,\n          startListening,\n          stopListening,\n          getState,\n        } = (this as any)._voiceSearchHelper;\n\n        return {\n          isBrowserSupported: isBrowserSupported(),\n          isListening: isListening(),\n          toggleListening() {\n            if (!isBrowserSupported()) {\n              return;\n            }\n            if (isListening()) {\n              stopListening();\n            } else {\n              startListening();\n            }\n          },\n          voiceListeningState: getState(),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        (this as any)._voiceSearchHelper.dispose();\n\n        unmountFn();\n\n        let newState = state;\n        if (typeof additionalQueryParameters === 'function') {\n          const additional = additionalQueryParameters({ query: '' });\n          const toReset = additional\n            ? (\n                Object.keys(additional) as Array<keyof PlainSearchParameters>\n              ).reduce<PlainSearchParameters>((acc, current) => {\n                // @ts-ignore search parameters is typed as readonly in v4\n                acc[current] = undefined;\n                return acc;\n              }, {})\n            : {};\n          newState = state.setQueryParameters({\n            // @ts-ignore (queryLanguages is not added to algoliasearch v3)\n            queryLanguages: undefined,\n            ignorePlurals: undefined,\n            removeStopWords: undefined,\n            optionalWords: undefined,\n            ...toReset,\n          });\n        }\n\n        return newState.setQueryParameter('query', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (!query) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectVoiceSearch;\n","import { noop } from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nexport type RelevantSortConnectorParams = Record<string, unknown>;\n\ntype Refine = (relevancyStrictness: number) => void;\n\nexport type RelevantSortRenderState = {\n  /**\n   * Indicates if it has appliedRelevancyStrictness greater than zero\n   */\n  isRelevantSorted: boolean;\n\n  /**\n   * Indicates if the results come from a virtual replica\n   */\n  isVirtualReplica: boolean;\n\n  /**\n   * Indicates if search state can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the value as relevancyStrictness and trigger a new search\n   */\n  refine: Refine;\n};\n\nexport type RelevantSortWidgetDescription = {\n  $$type: 'ais.relevantSort';\n  renderState: RelevantSortRenderState;\n  indexRenderState: {\n    relevantSort: WidgetRenderState<\n      RelevantSortRenderState,\n      RelevantSortConnectorParams\n    >;\n  };\n  indexUiState: {\n    relevantSort: number;\n  };\n};\n\nexport type RelevantSortConnector = Connector<\n  RelevantSortWidgetDescription,\n  RelevantSortConnectorParams\n>;\n\nconst connectRelevantSort: RelevantSortConnector = function connectRelevantSort(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.relevantSort',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('relevancyStrictness', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          relevantSort: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (relevancyStrictness: number | undefined) => {\n            helper\n              .setQueryParameter('relevancyStrictness', relevancyStrictness)\n              .search();\n          };\n        }\n\n        const { appliedRelevancyStrictness } = results || {};\n\n        const isVirtualReplica = appliedRelevancyStrictness !== undefined;\n\n        return {\n          isRelevantSorted:\n            typeof appliedRelevancyStrictness !== 'undefined' &&\n            appliedRelevancyStrictness > 0,\n          isVirtualReplica,\n          canRefine: isVirtualReplica,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return state.setQueryParameter(\n          'relevancyStrictness',\n          uiState.relevantSort ?? state.relevancyStrictness\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        return {\n          ...uiState,\n          relevantSort:\n            searchParameters.relevancyStrictness || uiState.relevantSort,\n        };\n      },\n    };\n  };\n};\n\nexport default connectRelevantSort;\n","const NAMESPACE = 'ais';\n\ntype SuitOptions = {\n  descendantName?: string;\n  modifierName?: string;\n};\n\ntype SuitSelector = (names?: SuitOptions) => string;\n\nexport const component =\n  (componentName: string): SuitSelector =>\n  ({ descendantName, modifierName }: SuitOptions = {}) => {\n    const descendent = descendantName ? `-${descendantName}` : '';\n    const modifier = modifierName ? `--${modifierName}` : '';\n\n    return `${NAMESPACE}-${componentName}${descendent}${modifier}`;\n  };\n","import { deprecate } from '../lib/utils';\n\nimport connectAnswers from './answers/connectAnswers';\nimport connectDynamicWidgets from './dynamic-widgets/connectDynamicWidgets';\n\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_connectAnswers = deprecate(\n  connectAnswers,\n  'answers is no longer supported'\n);\n\n/** @deprecated use connectDynamicWidgets */\nexport const EXPERIMENTAL_connectDynamicWidgets = deprecate(\n  connectDynamicWidgets,\n  'use connectDynamicWidgets'\n);\n\nexport { connectDynamicWidgets };\n\nexport { default as connectClearRefinements } from './clear-refinements/connectClearRefinements';\nexport { default as connectCurrentRefinements } from './current-refinements/connectCurrentRefinements';\nexport { default as connectHierarchicalMenu } from './hierarchical-menu/connectHierarchicalMenu';\nexport { default as connectHits } from './hits/connectHits';\nexport { default as connectHitsWithInsights } from './hits/connectHitsWithInsights';\nexport { default as connectHitsPerPage } from './hits-per-page/connectHitsPerPage';\nexport { default as connectInfiniteHits } from './infinite-hits/connectInfiniteHits';\nexport { default as connectInfiniteHitsWithInsights } from './infinite-hits/connectInfiniteHitsWithInsights';\nexport { default as connectMenu } from './menu/connectMenu';\nexport { default as connectNumericMenu } from './numeric-menu/connectNumericMenu';\nexport { default as connectPagination } from './pagination/connectPagination';\nexport { default as connectRange } from './range/connectRange';\nexport { default as connectRefinementList } from './refinement-list/connectRefinementList';\nexport { default as connectSearchBox } from './search-box/connectSearchBox';\nexport { default as connectSortBy } from './sort-by/connectSortBy';\nexport { default as connectRatingMenu } from './rating-menu/connectRatingMenu';\nexport { default as connectStats } from './stats/connectStats';\nexport { default as connectToggleRefinement } from './toggle-refinement/connectToggleRefinement';\nexport { default as connectBreadcrumb } from './breadcrumb/connectBreadcrumb';\nexport { default as connectGeoSearch } from './geo-search/connectGeoSearch';\nexport { default as connectPoweredBy } from './powered-by/connectPoweredBy';\nexport { default as connectConfigure } from './configure/connectConfigure';\nexport { default as EXPERIMENTAL_connectConfigureRelatedItems } from './configure-related-items/connectConfigureRelatedItems';\nexport { default as connectAutocomplete } from './autocomplete/connectAutocomplete';\nexport { default as connectQueryRules } from './query-rules/connectQueryRules';\nexport { default as connectVoiceSearch } from './voice-search/connectVoiceSearch';\nexport { default as connectRelevantSort } from './relevant-sort/connectRelevantSort';\n","import { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT, warning } from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type HighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('Highlight');\n\nexport default function highlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: HighlightOptions): string {\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { component } from '../lib/suit';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type ReverseHighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseHighlight');\n\nexport default function reverseHighlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseHighlightOptions): string {\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable reverse highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { component } from '../lib/suit';\nimport { TAG_REPLACEMENT, getPropertyByPath, warning } from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type SnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: {\n    highlighted?: string;\n  };\n};\n\nconst suit = component('Snippet');\n\nexport default function snippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: SnippetOptions): string {\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { component } from '../lib/suit';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\n\nimport type { Hit } from '../types';\n\nexport type ReverseSnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseSnippet');\n\nexport default function reverseSnippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseSnippetOptions): string {\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable reverse snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import { warning } from '../lib/utils';\n\nexport const ANONYMOUS_TOKEN_COOKIE_KEY = '_ALGOLIA';\n\nfunction getCookie(name: string): string | undefined {\n  if (typeof document !== 'object' || typeof document.cookie !== 'string') {\n    return undefined;\n  }\n\n  const prefix = `${name}=`;\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    let cookie = cookies[i];\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1);\n    }\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length, cookie.length);\n    }\n  }\n  return undefined;\n}\n\nexport function getInsightsAnonymousUserTokenInternal(): string | undefined {\n  return getCookie(ANONYMOUS_TOKEN_COOKIE_KEY);\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function getInsightsAnonymousUserToken(): string | undefined {\n  warning(\n    false,\n    `\\`getInsightsAnonymousUserToken\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return getInsightsAnonymousUserTokenInternal();\n}\n","import { isEqual, safelyRunOnBrowser } from '../utils';\n\nimport type { InfiniteHitsCache } from '../../connectors/infinite-hits/connectInfiniteHits';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nconst KEY = 'ais.infiniteHits';\n\nexport default function createInfiniteHitsSessionStorageCache(): InfiniteHitsCache {\n  return {\n    read({ state }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return null;\n      }\n\n      try {\n        const cache = JSON.parse(\n          // @ts-expect-error JSON.parse() requires a string, but it actually accepts null, too.\n          sessionStorage.getItem(KEY)\n        );\n\n        return cache && isEqual(cache.state, getStateWithoutPage(state))\n          ? cache.hits\n          : null;\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          try {\n            sessionStorage.removeItem(KEY);\n          } catch (err) {\n            // do nothing\n          }\n        }\n        return null;\n      }\n    },\n    write({ state, hits }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return;\n      }\n\n      try {\n        sessionStorage.setItem(\n          KEY,\n          JSON.stringify({\n            state: getStateWithoutPage(state),\n            hits,\n          })\n        );\n      } catch (error) {\n        // do nothing\n      }\n    },\n  };\n}\n","import { createInitArgs, safelyRunOnBrowser } from '../lib/utils';\n\nimport type { InstantSearch, InternalMiddleware, Widget } from '../types';\nimport type { IndexWidget } from '../widgets/index/index';\n\ntype WidgetMetaData = {\n  type: string | undefined;\n  widgetType: string | undefined;\n  params: string[];\n};\n\ntype Payload = {\n  widgets: WidgetMetaData[];\n  ua?: string;\n};\n\nfunction extractPayload(\n  widgets: Array<Widget | IndexWidget>,\n  instantSearchInstance: InstantSearch,\n  payload: Payload\n) {\n  const initOptions = createInitArgs(\n    instantSearchInstance,\n    instantSearchInstance.mainIndex,\n    instantSearchInstance._initialUiState\n  );\n\n  widgets.forEach((widget) => {\n    let widgetParams: Record<string, unknown> = {};\n\n    if (widget.getWidgetRenderState) {\n      const renderState = widget.getWidgetRenderState(initOptions);\n\n      if (renderState && renderState.widgetParams) {\n        // casting, as we just earlier checked widgetParams exists, and thus an object\n        widgetParams = renderState.widgetParams as Record<string, unknown>;\n      }\n    }\n\n    // since we destructure in all widgets, the parameters with defaults are set to \"undefined\"\n    const params = Object.keys(widgetParams).filter(\n      (key) => widgetParams[key] !== undefined\n    );\n\n    payload.widgets.push({\n      type: widget.$$type,\n      widgetType: widget.$$widgetType,\n      params,\n    });\n\n    if (widget.$$type === 'ais.index') {\n      extractPayload(\n        (widget as IndexWidget).getWidgets(),\n        instantSearchInstance,\n        payload\n      );\n    }\n  });\n}\n\nexport function isMetadataEnabled() {\n  return safelyRunOnBrowser(\n    ({ window }) =>\n      window.navigator?.userAgent?.indexOf('Algolia Crawler') > -1,\n    { fallback: () => false }\n  );\n}\n\n/**\n * Exposes the metadata of mounted widgets in a custom\n * `<meta name=\"instantsearch:widgets\" />` tag. The metadata per widget is:\n * - applied parameters\n * - widget name\n * - connector name\n */\nexport function createMetadataMiddleware(): InternalMiddleware {\n  return ({ instantSearchInstance }) => {\n    const payload: Payload = {\n      widgets: [],\n    };\n    const payloadContainer = document.createElement('meta');\n    const refNode = document.querySelector('head')!;\n    payloadContainer.name = 'instantsearch:widgets';\n\n    return {\n      onStateChange() {},\n      subscribe() {\n        // using setTimeout here to delay extraction until widgets have been added in a tick (e.g. Vue)\n        setTimeout(() => {\n          const client = instantSearchInstance.client as any;\n          payload.ua =\n            client.transporter && client.transporter.userAgent\n              ? client.transporter.userAgent.value\n              : client._ua;\n\n          extractPayload(\n            instantSearchInstance.mainIndex.getWidgets(),\n            instantSearchInstance,\n            payload\n          );\n\n          payloadContainer.content = JSON.stringify(payload);\n          refNode.appendChild(payloadContainer);\n        }, 0);\n      },\n\n      started() {},\n\n      unsubscribe() {\n        payloadContainer.remove();\n      },\n    };\n  };\n}\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","import qs from 'qs';\n\nimport { safelyRunOnBrowser } from '../utils';\n\nimport type { Router, UiState } from '../../types';\n\ntype CreateURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  routeState: TRouteState;\n  location: Location;\n}) => string;\n\ntype ParseURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  location: Location;\n}) => TRouteState;\n\nexport type BrowserHistoryArgs<TRouteState> = {\n  windowTitle?: (routeState: TRouteState) => string;\n  writeDelay: number;\n  createURL: CreateURL<TRouteState>;\n  parseURL: ParseURL<TRouteState>;\n  // @MAJOR: The `Location` type is hard to simulate in non-browser environments\n  // so we should accept a subset of it that is easier to work with in any\n  // environments.\n  getLocation(): Location;\n  start?: (onUpdate: () => void) => void;\n  dispose?: () => void;\n  push?: (url: string) => void;\n};\n\nconst setWindowTitle = (title?: string): void => {\n  if (title) {\n    // This function is only executed on browsers so we can disable this check.\n    // eslint-disable-next-line no-restricted-globals\n    window.document.title = title;\n  }\n};\n\nclass BrowserHistory<TRouteState> implements Router<TRouteState> {\n  /**\n   * Transforms a UI state into a title for the page.\n   */\n  private readonly windowTitle?: BrowserHistoryArgs<TRouteState>['windowTitle'];\n  /**\n   * Time in milliseconds before performing a write in the history.\n   * It prevents from adding too many entries in the history and\n   * makes the back button more usable.\n   *\n   * @default 400\n   */\n  private readonly writeDelay: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['writeDelay'];\n  /**\n   * Creates a full URL based on the route state.\n   * The storage adaptor maps all syncable keys to the query string of the URL.\n   */\n  private readonly _createURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['createURL'];\n  /**\n   * Parses the URL into a route state.\n   * It should be symmetrical to `createURL`.\n   */\n  private readonly parseURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['parseURL'];\n  /**\n   * Returns the location to store in the history.\n   * @default () => window.location\n   */\n  private readonly getLocation: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['getLocation'];\n\n  private writeTimer?: ReturnType<typeof setTimeout>;\n  private _onPopState?(event: PopStateEvent): void;\n\n  /**\n   * Indicates if last action was back/forward in the browser.\n   */\n  private inPopState: boolean = false;\n\n  /**\n   * Indicates whether the history router is disposed or not.\n   */\n  private isDisposed: boolean = false;\n\n  /**\n   * Indicates the window.history.length before the last call to\n   * window.history.pushState (called in `write`).\n   * It allows to determine if a `pushState` has been triggered elsewhere,\n   * and thus to prevent the `write` method from calling `pushState`.\n   */\n  private latestAcknowledgedHistory: number = 0;\n\n  private _start?: (onUpdate: () => void) => void;\n\n  private _dispose?: () => void;\n\n  private _push?: (url: string) => void;\n\n  /**\n   * Initializes a new storage provider that syncs the search state to the URL\n   * using web APIs (`window.location.pushState` and `onpopstate` event).\n   */\n  public constructor({\n    windowTitle,\n    writeDelay = 400,\n    createURL,\n    parseURL,\n    getLocation,\n    start,\n    dispose,\n    push,\n  }: BrowserHistoryArgs<TRouteState>) {\n    this.windowTitle = windowTitle;\n    this.writeTimer = undefined;\n    this.writeDelay = writeDelay;\n    this._createURL = createURL;\n    this.parseURL = parseURL;\n    this.getLocation = getLocation;\n    this._start = start;\n    this._dispose = dispose;\n    this._push = push;\n\n    safelyRunOnBrowser(({ window }) => {\n      const title = this.windowTitle && this.windowTitle(this.read());\n      setWindowTitle(title);\n\n      this.latestAcknowledgedHistory = window.history.length;\n    });\n  }\n\n  /**\n   * Reads the URL and returns a syncable UI search state.\n   */\n  public read(): TRouteState {\n    return this.parseURL({ qsModule: qs, location: this.getLocation() });\n  }\n\n  /**\n   * Pushes a search state into the URL.\n   */\n  public write(routeState: TRouteState): void {\n    safelyRunOnBrowser(({ window }) => {\n      const url = this.createURL(routeState);\n      const title = this.windowTitle && this.windowTitle(routeState);\n\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n      }\n\n      this.writeTimer = setTimeout(() => {\n        setWindowTitle(title);\n\n        if (this.shouldWrite(url)) {\n          if (this._push) {\n            this._push(url);\n          } else {\n            window.history.pushState(routeState, title || '', url);\n          }\n          this.latestAcknowledgedHistory = window.history.length;\n        }\n        this.inPopState = false;\n        this.writeTimer = undefined;\n      }, this.writeDelay);\n    });\n  }\n\n  /**\n   * Sets a callback on the `onpopstate` event of the history API of the current page.\n   * It enables the URL sync to keep track of the changes.\n   */\n  public onUpdate(callback: (routeState: TRouteState) => void): void {\n    if (this._start) {\n      this._start(() => {\n        callback(this.read());\n      });\n    }\n\n    this._onPopState = () => {\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n        this.writeTimer = undefined;\n      }\n\n      this.inPopState = true;\n\n      // We always read the state from the URL because the state of the history\n      // can be incorect in some cases (e.g. using React Router).\n      callback(this.read());\n    };\n\n    safelyRunOnBrowser(({ window }) => {\n      window.addEventListener('popstate', this._onPopState!);\n    });\n  }\n\n  /**\n   * Creates a complete URL from a given syncable UI state.\n   *\n   * It always generates the full URL, not a relative one.\n   * This allows to handle cases like using a <base href>.\n   * See: https://github.com/algolia/instantsearch.js/issues/790\n   */\n  public createURL(routeState: TRouteState): string {\n    return this._createURL({\n      qsModule: qs,\n      routeState,\n      location: this.getLocation(),\n    });\n  }\n\n  /**\n   * Removes the event listener and cleans up the URL.\n   */\n  public dispose(): void {\n    if (this._dispose) {\n      this._dispose();\n    }\n\n    this.isDisposed = true;\n\n    safelyRunOnBrowser(({ window }) => {\n      if (this._onPopState) {\n        window.removeEventListener('popstate', this._onPopState);\n      }\n    });\n\n    if (this.writeTimer) {\n      clearTimeout(this.writeTimer);\n    }\n\n    this.write({} as TRouteState);\n  }\n\n  public start() {\n    this.isDisposed = false;\n  }\n\n  private shouldWrite(url: string): boolean {\n    return safelyRunOnBrowser(({ window }) => {\n      // We do want to `pushState` if:\n      // - the router is not disposed, IS.js needs to update the URL\n      // OR\n      // - the last write was from InstantSearch.js\n      // (unlike a SPA, where it would have last written)\n      const lastPushWasByISAfterDispose = !(\n        this.isDisposed &&\n        this.latestAcknowledgedHistory !== window.history.length\n      );\n\n      return (\n        // When the last state change was through popstate, the IS.js state changes,\n        // but that should not write the URL.\n        !this.inPopState &&\n        // When the previous pushState after dispose was by IS.js, we want to write the URL.\n        lastPushWasByISAfterDispose &&\n        // When the URL is the same as the current one, we do not want to write it.\n        url !== window.location.href\n      );\n    });\n  }\n}\n\nexport default function historyRouter<TRouteState = UiState>({\n  createURL = ({ qsModule, routeState, location }) => {\n    const { protocol, hostname, port = '', pathname, hash } = location;\n    const queryString = qsModule.stringify(routeState);\n    const portWithPrefix = port === '' ? '' : `:${port}`;\n\n    // IE <= 11 has no proper `location.origin` so we cannot rely on it.\n    if (!queryString) {\n      return `${protocol}//${hostname}${portWithPrefix}${pathname}${hash}`;\n    }\n\n    return `${protocol}//${hostname}${portWithPrefix}${pathname}?${queryString}${hash}`;\n  },\n  parseURL = ({ qsModule, location }) => {\n    // `qs` by default converts arrays with more than 20 items to an object.\n    // We want to avoid this because the data structure manipulated can therefore vary.\n    // Setting the limit to `100` seems a good number because the engine's default is 100\n    // (it can go up to 1000 but it is very unlikely to select more than 100 items in the UI).\n    //\n    // Using an `arrayLimit` of `n` allows `n + 1` items.\n    //\n    // See:\n    //   - https://github.com/ljharb/qs#parsing-arrays\n    //   - https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/\n    return qsModule.parse(location.search.slice(1), {\n      arrayLimit: 99,\n    }) as unknown as TRouteState;\n  },\n  writeDelay = 400,\n  windowTitle,\n  getLocation = () => {\n    return safelyRunOnBrowser<Location>(({ window }) => window.location, {\n      fallback: () => {\n        throw new Error(\n          'You need to provide `getLocation` to the `history` router in environments where `window` does not exist.'\n        );\n      },\n    });\n  },\n  start,\n  dispose,\n  push,\n}: Partial<BrowserHistoryArgs<TRouteState>> = {}): BrowserHistory<TRouteState> {\n  return new BrowserHistory({\n    createURL,\n    parseURL,\n    writeDelay,\n    windowTitle,\n    getLocation,\n    start,\n    dispose,\n    push,\n  });\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import type { UiState, IndexUiState, StateMapping } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): Omit<TIndexUiState, 'configure'> {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState;\n}\n\n// technically a URL could contain any key, since users provide it,\n// which is why the input to this function is UiState, not something\n// which excludes \"configure\" as this function does.\nexport default function simpleStateMapping<\n  TUiState extends UiState = UiState\n>(): StateMapping<TUiState, TUiState> {\n  return {\n    stateToRoute(uiState) {\n      return Object.keys(uiState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(uiState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n\n    routeToState(routeState = {} as TUiState) {\n      return Object.keys(routeState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(routeState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n  };\n}\n","import historyRouter from '../lib/routers/history';\nimport simpleStateMapping from '../lib/stateMappings/simple';\nimport { isEqual } from '../lib/utils';\n\nimport type {\n  Router,\n  StateMapping,\n  UiState,\n  InternalMiddleware,\n  CreateURL,\n} from '../types';\n\nexport type RouterProps<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  router?: Router<TRouteState>;\n  // ideally stateMapping should be required if TRouteState is given,\n  // but there's no way to check if a generic is provided or the default value.\n  stateMapping?: StateMapping<TUiState, TRouteState>;\n};\n\nexport const createRouterMiddleware = <\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n>(\n  props: RouterProps<TUiState, TRouteState> = {}\n): InternalMiddleware<TUiState> => {\n  const {\n    router = historyRouter<TRouteState>(),\n    // We have to cast simpleStateMapping as a StateMapping<TUiState, TRouteState>.\n    // this is needed because simpleStateMapping is StateMapping<TUiState, TUiState>.\n    // While it's only used when UiState and RouteState are the same, unfortunately\n    // TypeScript still considers them separate types.\n    stateMapping = simpleStateMapping<TUiState>() as unknown as StateMapping<\n      TUiState,\n      TRouteState\n    >,\n  } = props;\n\n  return ({ instantSearchInstance }) => {\n    function topLevelCreateURL(nextState: TUiState) {\n      const uiState: TUiState = Object.keys(nextState).reduce(\n        (acc, indexId) => ({\n          ...acc,\n          [indexId]: nextState[indexId],\n        }),\n        instantSearchInstance.mainIndex.getWidgetUiState<TUiState>(\n          {} as TUiState\n        )\n      );\n\n      const route = stateMapping.stateToRoute(uiState);\n\n      return router.createURL(route);\n    }\n\n    // casting to UiState here to keep createURL unaware of custom UiState\n    // (as long as it's an object, it's ok)\n    instantSearchInstance._createURL = topLevelCreateURL as CreateURL<UiState>;\n\n    let lastRouteState: TRouteState | undefined = undefined;\n\n    const initialUiState = instantSearchInstance._initialUiState;\n\n    return {\n      onStateChange({ uiState }) {\n        const routeState = stateMapping.stateToRoute(uiState);\n\n        if (\n          lastRouteState === undefined ||\n          !isEqual(lastRouteState, routeState)\n        ) {\n          router.write(routeState);\n          lastRouteState = routeState;\n        }\n      },\n\n      subscribe() {\n        instantSearchInstance._initialUiState = {\n          ...initialUiState,\n          ...stateMapping.routeToState(router.read()),\n        };\n\n        router.onUpdate((route) => {\n          instantSearchInstance.setUiState(stateMapping.routeToState(route));\n        });\n      },\n\n      started() {\n        router.start?.();\n      },\n\n      unsubscribe() {\n        router.dispose();\n      },\n    };\n  };\n};\n","import algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  checkIndexUiState,\n  createDocumentationMessageGenerator,\n  resolveSearchParameters,\n  mergeSearchParameters,\n  warning,\n  isIndexWidget,\n  createInitArgs,\n  createRenderArgs,\n} from '../../lib/utils';\n\nimport type {\n  InstantSearch,\n  UiState,\n  IndexUiState,\n  Widget,\n  ScopedResult,\n  SearchClient,\n  IndexRenderState,\n} from '../../types';\nimport type {\n  AlgoliaSearchHelper as Helper,\n  DerivedHelper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'index-widget',\n});\n\nexport type IndexWidgetParams = {\n  indexName: string;\n  indexId?: string;\n};\n\nexport type IndexInitOptions = {\n  instantSearchInstance: InstantSearch;\n  parent: IndexWidget | null;\n  uiState: UiState;\n};\n\nexport type IndexRenderOptions = {\n  instantSearchInstance: InstantSearch;\n};\n\ntype WidgetSearchParametersOptions = Parameters<\n  NonNullable<Widget['getWidgetSearchParameters']>\n>[1];\ntype LocalWidgetSearchParametersOptions = WidgetSearchParametersOptions & {\n  initialSearchParameters: SearchParameters;\n};\n\nexport type IndexWidgetDescription = {\n  $$type: 'ais.index';\n  $$widgetType: 'ais.index';\n};\n\nexport type IndexWidget<TUiState extends UiState = UiState> = Omit<\n  Widget<IndexWidgetDescription & { widgetParams: IndexWidgetParams }>,\n  'getWidgetUiState' | 'getWidgetState'\n> & {\n  getIndexName(): string;\n  getIndexId(): string;\n  getHelper(): Helper | null;\n  getResults(): SearchResults | null;\n  getPreviousState(): SearchParameters | null;\n  getScopedResults(): ScopedResult[];\n  getParent(): IndexWidget | null;\n  getWidgets(): Array<Widget | IndexWidget>;\n  createURL(state: SearchParameters): string;\n\n  addWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n  removeWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n\n  init(options: IndexInitOptions): void;\n  render(options: IndexRenderOptions): void;\n  dispose(): void;\n  /**\n   * @deprecated\n   */\n  getWidgetState(uiState: UiState): UiState;\n  getWidgetUiState<TSpecificUiState extends UiState = TUiState>(\n    uiState: TSpecificUiState\n  ): TSpecificUiState;\n  getWidgetSearchParameters(\n    searchParameters: SearchParameters,\n    searchParametersOptions: { uiState: IndexUiState }\n  ): SearchParameters;\n  /**\n   * Set this index' UI state back to the state defined by the widgets.\n   * Can only be called after `init`.\n   */\n  refreshUiState(): void;\n  /**\n   * Set this index' UI state and search. This is the equivalent of calling\n   * a spread `setUiState` on the InstantSearch instance.\n   * Can only be called after `init`.\n   */\n  setIndexUiState(\n    indexUiState:\n      | TUiState[string]\n      | ((previousIndexUiState: TUiState[string]) => TUiState[string])\n  ): void;\n};\n\n/**\n * This is the same content as helper._change / setState, but allowing for extra\n * UiState to be synchronized.\n * see: https://github.com/algolia/algoliasearch-helper-js/blob/6b835ffd07742f2d6b314022cce6848f5cfecd4a/src/algoliasearch.helper.js#L1311-L1324\n */\nfunction privateHelperSetState(\n  helper: AlgoliaSearchHelper,\n  {\n    state,\n    isPageReset,\n    _uiState,\n  }: {\n    state: SearchParameters;\n    isPageReset?: boolean;\n    _uiState?: IndexUiState;\n  }\n) {\n  if (state !== helper.state) {\n    helper.state = state;\n\n    helper.emit('change', {\n      state: helper.state,\n      results: helper.lastResults,\n      isPageReset,\n      _uiState,\n    });\n  }\n}\n\ntype WidgetUiStateOptions = Parameters<\n  NonNullable<Widget['getWidgetUiState']>\n>[1];\n\nfunction getLocalWidgetsUiState(\n  widgets: Array<Widget | IndexWidget>,\n  widgetStateOptions: WidgetUiStateOptions,\n  initialUiState: IndexUiState = {}\n) {\n  return widgets.reduce((uiState, widget) => {\n    if (isIndexWidget(widget)) {\n      return uiState;\n    }\n\n    if (!widget.getWidgetUiState && !widget.getWidgetState) {\n      return uiState;\n    }\n\n    if (widget.getWidgetUiState) {\n      return widget.getWidgetUiState(uiState, widgetStateOptions);\n    }\n\n    return widget.getWidgetState!(uiState, widgetStateOptions);\n  }, initialUiState);\n}\n\nfunction getLocalWidgetsSearchParameters(\n  widgets: Array<Widget | IndexWidget>,\n  widgetSearchParametersOptions: LocalWidgetSearchParametersOptions\n): SearchParameters {\n  const { initialSearchParameters, ...rest } = widgetSearchParametersOptions;\n\n  return widgets\n    .filter((widget) => !isIndexWidget(widget))\n    .reduce<SearchParameters>((state, widget) => {\n      if (!widget.getWidgetSearchParameters) {\n        return state;\n      }\n\n      return widget.getWidgetSearchParameters(state, rest);\n    }, initialSearchParameters);\n}\n\nfunction resetPageFromWidgets(widgets: Array<Widget | IndexWidget>): void {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  if (indexWidgets.length === 0) {\n    return;\n  }\n\n  indexWidgets.forEach((widget) => {\n    const widgetHelper = widget.getHelper()!;\n\n    privateHelperSetState(widgetHelper, {\n      state: widgetHelper.state.resetPage(),\n      isPageReset: true,\n    });\n\n    resetPageFromWidgets(widget.getWidgets());\n  });\n}\n\nfunction resolveScopedResultsFromWidgets(\n  widgets: Array<Widget | IndexWidget>\n): ScopedResult[] {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  return indexWidgets.reduce<ScopedResult[]>((scopedResults, current) => {\n    return scopedResults.concat(\n      {\n        indexId: current.getIndexId(),\n        results: current.getResults()!,\n        helper: current.getHelper()!,\n      },\n      ...resolveScopedResultsFromWidgets(current.getWidgets())\n    );\n  }, []);\n}\n\nconst index = (widgetParams: IndexWidgetParams): IndexWidget => {\n  if (widgetParams === undefined || widgetParams.indexName === undefined) {\n    throw new Error(withUsage('The `indexName` option is required.'));\n  }\n\n  const { indexName, indexId = indexName } = widgetParams;\n\n  let localWidgets: Array<Widget | IndexWidget> = [];\n  let localUiState: IndexUiState = {};\n  let localInstantSearchInstance: InstantSearch | null = null;\n  let localParent: IndexWidget | null = null;\n  let helper: Helper | null = null;\n  let derivedHelper: DerivedHelper | null = null;\n  let lastValidSearchParameters: SearchParameters | null = null;\n\n  return {\n    $$type: 'ais.index',\n    $$widgetType: 'ais.index',\n\n    getIndexName() {\n      return indexName;\n    },\n\n    getIndexId() {\n      return indexId;\n    },\n\n    getHelper() {\n      return helper;\n    },\n\n    getResults() {\n      if (!derivedHelper?.lastResults) return null;\n\n      // To make the UI optimistic, we patch the state to display to the current\n      // one instead of the one associated with the latest results.\n      // This means user-driven UI changes (e.g., checked checkbox) are reflected\n      // immediately instead of waiting for Algolia to respond, regardless of\n      // the status of the network request.\n      derivedHelper.lastResults._state = helper!.state;\n\n      return derivedHelper.lastResults;\n    },\n\n    getPreviousState() {\n      return lastValidSearchParameters;\n    },\n\n    getScopedResults() {\n      const widgetParent = this.getParent();\n\n      // If the widget is the root, we consider itself as the only sibling.\n      const widgetSiblings = widgetParent ? widgetParent.getWidgets() : [this];\n\n      return resolveScopedResultsFromWidgets(widgetSiblings);\n    },\n\n    getParent() {\n      return localParent;\n    },\n\n    createURL(nextState: SearchParameters) {\n      return localInstantSearchInstance!._createURL({\n        [indexId]: getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        }),\n      });\n    },\n\n    getWidgets() {\n      return localWidgets;\n    },\n\n    addWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `addWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (\n        widgets.some(\n          (widget) =>\n            typeof widget.init !== 'function' &&\n            typeof widget.render !== 'function'\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            'The widget definition expects a `render` and/or an `init` method.'\n          )\n        );\n      }\n\n      localWidgets = localWidgets.concat(widgets);\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        privateHelperSetState(helper!, {\n          state: getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: helper!.state,\n          }),\n          _uiState: localUiState,\n        });\n\n        // We compute the render state before calling `init` in a separate loop\n        // to construct the whole render state object that is then passed to\n        // `init`.\n        widgets.forEach((widget) => {\n          if (widget.getRenderState) {\n            const renderState = widget.getRenderState(\n              localInstantSearchInstance!.renderState[this.getIndexId()] || {},\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n\n            storeRenderState({\n              renderState,\n              instantSearchInstance: localInstantSearchInstance!,\n              parent: this,\n            });\n          }\n        });\n\n        widgets.forEach((widget) => {\n          if (widget.init) {\n            widget.init(\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n          }\n        });\n\n        localInstantSearchInstance.scheduleSearch();\n      }\n\n      return this;\n    },\n\n    removeWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `removeWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n        throw new Error(\n          withUsage('The widget definition expects a `dispose` method.')\n        );\n      }\n\n      localWidgets = localWidgets.filter(\n        (widget) => widgets.indexOf(widget) === -1\n      );\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        const nextState = widgets.reduce((state, widget) => {\n          // the `dispose` method exists at this point we already assert it\n          const next = widget.dispose!({\n            helper: helper!,\n            state,\n            parent: this,\n          });\n\n          return next || state;\n        }, helper!.state);\n\n        localUiState = getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        });\n\n        helper!.setState(\n          getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: nextState,\n          })\n        );\n\n        if (localWidgets.length) {\n          localInstantSearchInstance.scheduleSearch();\n        }\n      }\n\n      return this;\n    },\n\n    init({ instantSearchInstance, parent, uiState }: IndexInitOptions) {\n      if (helper !== null) {\n        // helper is already initialized, therefore we do not need to set up\n        // any listeners\n        return;\n      }\n\n      localInstantSearchInstance = instantSearchInstance;\n      localParent = parent;\n      localUiState = uiState[indexId] || {};\n\n      // The `mainHelper` is already defined at this point. The instance is created\n      // inside InstantSearch at the `start` method, which occurs before the `init`\n      // step.\n      const mainHelper = instantSearchInstance.mainHelper!;\n      const parameters = getLocalWidgetsSearchParameters(localWidgets, {\n        uiState: localUiState,\n        initialSearchParameters: new algoliasearchHelper.SearchParameters({\n          index: indexName,\n        }),\n      });\n\n      // This Helper is only used for state management we do not care about the\n      // `searchClient`. Only the \"main\" Helper created at the `InstantSearch`\n      // level is aware of the client.\n      helper = algoliasearchHelper(\n        {} as SearchClient,\n        parameters.index,\n        parameters\n      );\n\n      // We forward the call to `search` to the \"main\" instance of the Helper\n      // which is responsible for managing the queries (it's the only one that is\n      // aware of the `searchClient`).\n      helper.search = () => {\n        if (instantSearchInstance.onStateChange) {\n          instantSearchInstance.onStateChange({\n            uiState: instantSearchInstance.mainIndex.getWidgetUiState({}),\n            setUiState: (nextState) =>\n              instantSearchInstance.setUiState(nextState, false),\n          });\n\n          // We don't trigger a search when controlled because it becomes the\n          // responsibility of `setUiState`.\n          return mainHelper;\n        }\n\n        return mainHelper.search();\n      };\n\n      helper.searchWithoutTriggeringOnStateChange = () => {\n        return mainHelper.search();\n      };\n\n      // We use the same pattern for the `searchForFacetValues`.\n      helper.searchForFacetValues = (\n        facetName,\n        facetValue,\n        maxFacetHits,\n        userState: PlainSearchParameters\n      ) => {\n        const state = helper!.state.setQueryParameters(userState);\n\n        return mainHelper.searchForFacetValues(\n          facetName,\n          facetValue,\n          maxFacetHits,\n          state\n        );\n      };\n\n      derivedHelper = mainHelper.derive(() =>\n        mergeSearchParameters(...resolveSearchParameters(this))\n      );\n\n      const indexInitialResults =\n        instantSearchInstance._initialResults?.[this.getIndexId()];\n\n      if (indexInitialResults) {\n        // We restore the shape of the results provided to the instance to respect\n        // the helper's structure.\n        const results = new algoliasearchHelper.SearchResults(\n          new algoliasearchHelper.SearchParameters(indexInitialResults.state),\n          indexInitialResults.results\n        );\n\n        derivedHelper.lastResults = results;\n        helper.lastResults = results;\n      }\n\n      // Subscribe to the Helper state changes for the page before widgets\n      // are initialized. This behavior mimics the original one of the Helper.\n      // It makes sense to replicate it at the `init` step. We have another\n      // listener on `change` below, once `init` is done.\n      helper.on('change', ({ isPageReset }) => {\n        if (isPageReset) {\n          resetPageFromWidgets(localWidgets);\n        }\n      });\n\n      derivedHelper.on('search', () => {\n        // The index does not manage the \"staleness\" of the search. This is the\n        // responsibility of the main instance. It does not make sense to manage\n        // it at the index level because it's either: all of them or none of them\n        // that are stalled. The queries are performed into a single network request.\n        instantSearchInstance.scheduleStalledRender();\n\n        if (__DEV__) {\n          checkIndexUiState({ index: this, indexUiState: localUiState });\n        }\n      });\n\n      derivedHelper.on('result', ({ results }) => {\n        // The index does not render the results it schedules a new render\n        // to let all the other indices emit their own results. It allows us to\n        // run the render process in one pass.\n        instantSearchInstance.scheduleRender();\n\n        // the derived helper is the one which actually searches, but the helper\n        // which is exposed e.g. via instance.helper, doesn't search, and thus\n        // does not have access to lastResults, which it used to in pre-federated\n        // search behavior.\n        helper!.lastResults = results;\n        lastValidSearchParameters = results._state;\n      });\n\n      // We compute the render state before calling `init` in a separate loop\n      // to construct the whole render state object that is then passed to\n      // `init`.\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createInitArgs(instantSearchInstance, this, uiState)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        warning(\n          // if it has NO getWidgetState or if it has getWidgetUiState, we don't warn\n          // aka we warn if there's _only_ getWidgetState\n          !widget.getWidgetState || Boolean(widget.getWidgetUiState),\n          'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n        );\n\n        if (widget.init) {\n          widget.init(createInitArgs(instantSearchInstance, this, uiState));\n        }\n      });\n\n      // Subscribe to the Helper state changes for the `uiState` once widgets\n      // are initialized. Until the first render, state changes are part of the\n      // configuration step. This is mainly for backward compatibility with custom\n      // widgets. When the subscription happens before the `init` step, the (static)\n      // configuration of the widget is pushed in the URL. That's what we want to avoid.\n      // https://github.com/algolia/instantsearch.js/pull/994/commits/4a672ae3fd78809e213de0368549ef12e9dc9454\n      helper.on('change', (event) => {\n        const { state } = event;\n\n        const _uiState = (event as any)._uiState;\n\n        localUiState = getLocalWidgetsUiState(\n          localWidgets,\n          {\n            searchParameters: state,\n            helper: helper!,\n          },\n          _uiState || {}\n        );\n\n        // We don't trigger an internal change when controlled because it\n        // becomes the responsibility of `setUiState`.\n        if (!instantSearchInstance.onStateChange) {\n          instantSearchInstance.onInternalStateChange();\n        }\n      });\n\n      if (indexInitialResults) {\n        // If there are initial results, we're not notified of the next results\n        // because we don't trigger an initial search. We therefore need to directly\n        // schedule a render that will render the results injected on the helper.\n        instantSearchInstance.scheduleRender();\n      }\n    },\n\n    render({ instantSearchInstance }: IndexRenderOptions) {\n      if (!this.getResults()) {\n        return;\n      }\n\n      // we can't attach a listener to the error event of search, as the error\n      // then would no longer be thrown for global handlers.\n      if (\n        instantSearchInstance.status === 'error' &&\n        !instantSearchInstance.mainHelper!.hasPendingRequests()\n      ) {\n        helper!.setState(lastValidSearchParameters!);\n      }\n\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createRenderArgs(instantSearchInstance, this)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        // At this point, all the variables used below are set. Both `helper`\n        // and `derivedHelper` have been created at the `init` step. The attribute\n        // `lastResults` might be `null` though. It's possible that a stalled render\n        // happens before the result e.g with a dynamically added index the request might\n        // be delayed. The render is triggered for the complete tree but some parts do\n        // not have results yet.\n\n        if (widget.render) {\n          widget.render(createRenderArgs(instantSearchInstance, this));\n        }\n      });\n    },\n\n    dispose() {\n      localWidgets.forEach((widget) => {\n        if (widget.dispose) {\n          // The dispose function is always called once the instance is started\n          // (it's an effect of `removeWidgets`). The index is initialized and\n          // the Helper is available. We don't care about the return value of\n          // `dispose` because the index is removed. We can't call `removeWidgets`\n          // because we want to keep the widgets on the instance, to allow idempotent\n          // operations on `add` & `remove`.\n          widget.dispose({\n            helper: helper!,\n            state: helper!.state,\n            parent: this,\n          });\n        }\n      });\n\n      localInstantSearchInstance = null;\n      localParent = null;\n      helper?.removeAllListeners();\n      helper = null;\n\n      derivedHelper?.detach();\n      derivedHelper = null;\n    },\n\n    getWidgetUiState<TUiState extends UiState = UiState>(uiState: TUiState) {\n      return localWidgets\n        .filter(isIndexWidget)\n        .reduce<TUiState>(\n          (previousUiState, innerIndex) =>\n            innerIndex.getWidgetUiState(previousUiState),\n          {\n            ...uiState,\n            [indexId]: {\n              ...uiState[indexId],\n              ...localUiState,\n            },\n          }\n        );\n    },\n\n    getWidgetState(uiState: UiState) {\n      warning(\n        false,\n        'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n      );\n\n      return this.getWidgetUiState(uiState);\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      return getLocalWidgetsSearchParameters(localWidgets, {\n        uiState,\n        initialSearchParameters: searchParameters,\n      });\n    },\n\n    refreshUiState() {\n      localUiState = getLocalWidgetsUiState(\n        localWidgets,\n        {\n          searchParameters: this.getHelper()!.state,\n          helper: this.getHelper()!,\n        },\n        localUiState\n      );\n    },\n\n    setIndexUiState<TIndexUiState extends IndexUiState = IndexUiState>(\n      indexUiState:\n        | TIndexUiState\n        | ((previousIndexUiState: TIndexUiState) => TIndexUiState)\n    ) {\n      const nextIndexUiState =\n        typeof indexUiState === 'function'\n          ? indexUiState(localUiState as TIndexUiState)\n          : indexUiState;\n\n      localInstantSearchInstance!.setUiState((state) => ({\n        ...state,\n        [indexId]: nextIndexUiState,\n      }));\n    },\n  };\n};\n\nexport default index;\n\nfunction storeRenderState({\n  renderState,\n  instantSearchInstance,\n  parent,\n}: {\n  renderState: IndexRenderState;\n  instantSearchInstance: InstantSearch;\n  parent?: IndexWidget;\n}) {\n  const parentIndexName = parent\n    ? parent.getIndexId()\n    : instantSearchInstance.mainIndex.getIndexId();\n\n  instantSearchInstance.renderState = {\n    ...instantSearchInstance.renderState,\n    [parentIndexName]: {\n      ...instantSearchInstance.renderState[parentIndexName],\n      ...renderState,\n    },\n  };\n}\n","import type { IndexWidget } from '../../widgets/index/index';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nexport function resolveSearchParameters(\n  current: IndexWidget\n): SearchParameters[] {\n  let parent = current.getParent();\n  let states = [current.getHelper()!.state];\n\n  while (parent !== null) {\n    states = [parent.getHelper()!.state].concat(states);\n    parent = parent.getParent();\n  }\n\n  return states;\n}\n","export function formatNumber(value: number, numberLocale?: string) {\n  return value.toLocaleString(numberLocale);\n}\n","import EventEmitter from '@algolia/events';\nimport algoliasearchHelper from 'algoliasearch-helper';\n\nimport {\n  createMetadataMiddleware,\n  isMetadataEnabled,\n} from '../middlewares/createMetadataMiddleware';\nimport { createRouterMiddleware } from '../middlewares/createRouterMiddleware';\nimport index from '../widgets/index/index';\n\nimport createHelpers from './createHelpers';\nimport {\n  createDocumentationMessageGenerator,\n  createDocumentationLink,\n  defer,\n  noop,\n  warning,\n  setIndexHelperState,\n} from './utils';\nimport version from './version';\n\nimport type { InsightsEvent } from '../middlewares/createInsightsMiddleware';\nimport type { RouterProps } from '../middlewares/createRouterMiddleware';\nimport type {\n  InsightsClient as AlgoliaInsightsClient,\n  SearchClient,\n  Widget,\n  UiState,\n  CreateURL,\n  Middleware,\n  MiddlewareDefinition,\n  RenderState,\n  InitialResults,\n} from '../types';\nimport type { IndexWidget } from '../widgets/index/index';\nimport type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'instantsearch',\n});\n\nfunction defaultCreateURL() {\n  return '#';\n}\n\n// this purposely breaks typescript's type inference to ensure it's not used\n// as it's used for a default parameter for example\n// source: https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-504042546\ntype NoInfer<T> = T extends infer S ? S : never;\n\n/**\n * Global options for an InstantSearch instance.\n */\nexport type InstantSearchOptions<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  /**\n   * The name of the main index\n   */\n  indexName: string;\n\n  /**\n   * The search client to plug to InstantSearch.js\n   *\n   * Usage:\n   * ```javascript\n   * // Using the default Algolia search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: algoliasearch('appId', 'apiKey')\n   * });\n   *\n   * // Using a custom search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: {\n   *     search(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     },\n   *     searchForFacetValues(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  searchClient: SearchClient;\n\n  /**\n   * The locale used to display numbers. This will be passed\n   * to `Number.prototype.toLocaleString()`\n   */\n  numberLocale?: string;\n\n  /**\n   * A hook that will be called each time a search needs to be done, with the\n   * helper as a parameter. It's your responsibility to call `helper.search()`.\n   * This option allows you to avoid doing searches at page load for example.\n   * @deprecated use onStateChange instead\n   */\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n\n  /**\n   * Function called when the state changes.\n   *\n   * Using this function makes the instance controlled. This means that you\n   * become in charge of updating the UI state with the `setUiState` function.\n   */\n  onStateChange?: (params: {\n    uiState: TUiState;\n    setUiState(\n      uiState: TUiState | ((previousUiState: TUiState) => TUiState)\n    ): void;\n  }) => void;\n\n  /**\n   * Injects a `uiState` to the `instantsearch` instance. You can use this option\n   * to provide an initial state to a widget. Note that the state is only used\n   * for the first search. To unconditionally pass additional parameters to the\n   * Algolia API, take a look at the `configure` widget.\n   */\n  initialUiState?: NoInfer<TUiState>;\n\n  /**\n   * Time before a search is considered stalled. The default is 200ms\n   */\n  stalledSearchDelay?: number;\n\n  /**\n   * Router configuration used to save the UI State into the URL or any other\n   * client side persistence. Passing `true` will use the default URL options.\n   */\n  routing?: RouterProps<TUiState, TRouteState> | boolean;\n\n  /**\n   * the instance of search-insights to use for sending insights events inside\n   * widgets like `hits`.\n   *\n   * @deprecated This property will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n   */\n  insightsClient?: AlgoliaInsightsClient;\n};\n\nexport type InstantSearchStatus = 'idle' | 'loading' | 'stalled' | 'error';\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * It emits the 'render' event every time a search is done\n */\nclass InstantSearch<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> extends EventEmitter {\n  public client: InstantSearchOptions['searchClient'];\n  public indexName: string;\n  public insightsClient: AlgoliaInsightsClient | null;\n  public onStateChange: InstantSearchOptions<TUiState>['onStateChange'] | null =\n    null;\n  public helper: AlgoliaSearchHelper | null;\n  public mainHelper: AlgoliaSearchHelper | null;\n  public mainIndex: IndexWidget;\n  public started: boolean;\n  public templatesConfig: Record<string, unknown>;\n  public renderState: RenderState = {};\n  public _stalledSearchDelay: number;\n  public _searchStalledTimer: any;\n  public _initialUiState: TUiState;\n  public _initialResults: InitialResults | null;\n  public _createURL: CreateURL<TUiState>;\n  public _searchFunction?: InstantSearchOptions['searchFunction'];\n  public _mainHelperSearch?: AlgoliaSearchHelper['search'];\n  public middleware: Array<{\n    creator: Middleware;\n    instance: MiddlewareDefinition;\n  }> = [];\n  public sendEventToInsights: (event: InsightsEvent) => void;\n  /**\n   * The status of the search. Can be \"idle\", \"loading\", \"stalled\", or \"error\".\n   */\n  public status: InstantSearchStatus = 'idle';\n  /**\n   * The last returned error from the Search API.\n   * The error gets cleared when the next valid search response is rendered.\n   */\n  public error: Error | undefined = undefined;\n\n  /**\n   * @deprecated use `status === 'stalled'` instead\n   */\n  public get _isSearchStalled(): boolean {\n    warning(\n      false,\n      `\\`InstantSearch._isSearchStalled\\` is deprecated and will be removed in InstantSearch.js 5.0.\n\nUse \\`InstantSearch.status === \"stalled\"\\` instead.`\n    );\n\n    return this.status === 'stalled';\n  }\n\n  public constructor(options: InstantSearchOptions<TUiState, TRouteState>) {\n    super();\n\n    // prevent `render` event listening from causing a warning\n    this.setMaxListeners(100);\n\n    const {\n      indexName = null,\n      numberLocale,\n      initialUiState = {} as TUiState,\n      routing = null,\n      searchFunction,\n      stalledSearchDelay = 200,\n      searchClient = null,\n      insightsClient = null,\n      onStateChange = null,\n    } = options;\n\n    if (indexName === null) {\n      throw new Error(withUsage('The `indexName` option is required.'));\n    }\n\n    if (searchClient === null) {\n      throw new Error(withUsage('The `searchClient` option is required.'));\n    }\n\n    if (typeof searchClient.search !== 'function') {\n      throw new Error(\n        `The \\`searchClient\\` must implement a \\`search\\` method.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/going-further/backend-search/in-depth/backend-instantsearch/js/`\n      );\n    }\n\n    if (typeof searchClient.addAlgoliaAgent === 'function') {\n      searchClient.addAlgoliaAgent(`instantsearch.js (${version})`);\n    }\n\n    warning(\n      insightsClient === null,\n      `\\`insightsClient\\` property has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n\n    if (insightsClient && typeof insightsClient !== 'function') {\n      throw new Error(\n        withUsage('The `insightsClient` option should be a function.')\n      );\n    }\n\n    warning(\n      !(options as any).searchParameters,\n      `The \\`searchParameters\\` option is deprecated and will not be supported in InstantSearch.js 4.x.\n\nYou can replace it with the \\`configure\\` widget:\n\n\\`\\`\\`\nsearch.addWidgets([\n  configure(${JSON.stringify((options as any).searchParameters, null, 2)})\n]);\n\\`\\`\\`\n\nSee ${createDocumentationLink({\n        name: 'configure',\n      })}`\n    );\n\n    this.client = searchClient;\n    this.insightsClient = insightsClient;\n    this.indexName = indexName;\n    this.helper = null;\n    this.mainHelper = null;\n    this.mainIndex = index({\n      indexName,\n    });\n    this.onStateChange = onStateChange;\n\n    this.started = false;\n    this.templatesConfig = {\n      helpers: createHelpers({ numberLocale }),\n      compileOptions: {},\n    };\n\n    this._stalledSearchDelay = stalledSearchDelay;\n    this._searchStalledTimer = null;\n\n    this._createURL = defaultCreateURL;\n    this._initialUiState = initialUiState as TUiState;\n    this._initialResults = null;\n\n    if (searchFunction) {\n      warning(\n        false,\n        `The \\`searchFunction\\` option is deprecated. Use \\`onStateChange\\` instead.`\n      );\n      this._searchFunction = searchFunction;\n    }\n\n    this.sendEventToInsights = noop;\n\n    if (routing) {\n      const routerOptions = typeof routing === 'boolean' ? undefined : routing;\n      this.use(createRouterMiddleware(routerOptions));\n    }\n\n    if (isMetadataEnabled()) {\n      this.use(createMetadataMiddleware());\n    }\n  }\n\n  /**\n   * Hooks a middleware into the InstantSearch lifecycle.\n   */\n  public use(...middleware: Middleware[]): this {\n    const newMiddlewareList = middleware.map((fn) => {\n      const newMiddleware = {\n        subscribe: noop,\n        started: noop,\n        unsubscribe: noop,\n        onStateChange: noop,\n        ...fn({\n          instantSearchInstance: this as unknown as InstantSearch<\n            UiState,\n            UiState\n          >,\n        }),\n      };\n      this.middleware.push({\n        creator: fn,\n        instance: newMiddleware,\n      });\n      return newMiddleware;\n    });\n\n    // If the instance has already started, we directly subscribe the\n    // middleware so they're notified of changes.\n    if (this.started) {\n      newMiddlewareList.forEach((m) => {\n        m.subscribe();\n        m.started();\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes a middleware from the InstantSearch lifecycle.\n   */\n  public unuse(...middlewareToUnuse: Middleware[]): this {\n    this.middleware\n      .filter((m) => middlewareToUnuse.includes(m.creator))\n      .forEach((m) => m.instance.unsubscribe());\n\n    this.middleware = this.middleware.filter(\n      (m) => !middlewareToUnuse.includes(m.creator)\n    );\n\n    return this;\n  }\n\n  // @major we shipped with EXPERIMENTAL_use, but have changed that to just `use` now\n  public EXPERIMENTAL_use(...middleware: Middleware[]): this {\n    warning(\n      false,\n      'The middleware API is now considered stable, so we recommend replacing `EXPERIMENTAL_use` with `use` before upgrading to the next major version.'\n    );\n\n    return this.use(...middleware);\n  }\n\n  /**\n   * Adds a widget to the search instance.\n   * A widget can be added either before or after InstantSearch has started.\n   * @param widget The widget to add to InstantSearch.\n   *\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`.\n   */\n  public addWidget(widget: Widget) {\n    warning(\n      false,\n      'addWidget will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`'\n    );\n\n    return this.addWidgets([widget]);\n  }\n\n  /**\n   * Adds multiple widgets to the search instance.\n   * Widgets can be added either before or after InstantSearch has started.\n   * @param widgets The array of widgets to add to InstantSearch.\n   */\n  public addWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `addWidgets` method expects an array of widgets. Please use `addWidget`.'\n        )\n      );\n    }\n\n    if (\n      widgets.some(\n        (widget) =>\n          typeof widget.init !== 'function' &&\n          typeof widget.render !== 'function'\n      )\n    ) {\n      throw new Error(\n        withUsage(\n          'The widget definition expects a `render` and/or an `init` method.'\n        )\n      );\n    }\n\n    this.mainIndex.addWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Removes a widget from the search instance.\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`\n   * @param widget The widget instance to remove from InstantSearch.\n   *\n   * The widget must implement a `dispose()` method to clear its state.\n   */\n  public removeWidget(widget: Widget | IndexWidget) {\n    warning(\n      false,\n      'removeWidget will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`'\n    );\n\n    return this.removeWidgets([widget]);\n  }\n\n  /**\n   * Removes multiple widgets from the search instance.\n   * @param widgets Array of widgets instances to remove from InstantSearch.\n   *\n   * The widgets must implement a `dispose()` method to clear their states.\n   */\n  public removeWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `removeWidgets` method expects an array of widgets. Please use `removeWidget`.'\n        )\n      );\n    }\n\n    if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n      throw new Error(\n        withUsage('The widget definition expects a `dispose` method.')\n      );\n    }\n\n    this.mainIndex.removeWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Ends the initialization of InstantSearch.js and triggers the\n   * first search. This method should be called after all widgets have been added\n   * to the instance of InstantSearch.js. InstantSearch.js also supports adding and removing\n   * widgets after the start as an **EXPERIMENTAL** feature.\n   */\n  public start() {\n    if (this.started) {\n      throw new Error(\n        withUsage('The `start` method has already been called once.')\n      );\n    }\n\n    // This Helper is used for the queries, we don't care about its state. The\n    // states are managed at the `index` level. We use this Helper to create\n    // DerivedHelper scoped into the `index` widgets.\n    // In Vue InstantSearch' hydrate, a main helper gets set before start, so\n    // we need to respect this helper as a way to keep all listeners correct.\n    const mainHelper =\n      this.mainHelper || algoliasearchHelper(this.client, this.indexName);\n\n    mainHelper.search = () => {\n      this.status = 'loading';\n      this.scheduleRender(false);\n\n      // This solution allows us to keep the exact same API for the users but\n      // under the hood, we have a different implementation. It should be\n      // completely transparent for the rest of the codebase. Only this module\n      // is impacted.\n      return mainHelper.searchOnlyWithDerivedHelpers();\n    };\n\n    if (this._searchFunction) {\n      // this client isn't used to actually search, but required for the helper\n      // to not throw errors\n      const fakeClient = {\n        search: () => new Promise(noop),\n      } as any as SearchClient;\n\n      this._mainHelperSearch = mainHelper.search.bind(mainHelper);\n      mainHelper.search = () => {\n        const mainIndexHelper = this.mainIndex.getHelper();\n        const searchFunctionHelper = algoliasearchHelper(\n          fakeClient,\n          mainIndexHelper!.state.index,\n          mainIndexHelper!.state\n        );\n        searchFunctionHelper.once('search', ({ state }) => {\n          mainIndexHelper!.overrideStateWithoutTriggeringChangeEvent(state);\n          this._mainHelperSearch!();\n        });\n        // Forward state changes from `searchFunctionHelper` to `mainIndexHelper`\n        searchFunctionHelper.on('change', ({ state }) => {\n          mainIndexHelper!.setState(state);\n        });\n        this._searchFunction!(searchFunctionHelper);\n        return mainHelper;\n      };\n    }\n\n    // Only the \"main\" Helper emits the `error` event vs the one for `search`\n    // and `results` that are also emitted on the derived one.\n    mainHelper.on('error', ({ error }) => {\n      if (!(error instanceof Error)) {\n        // typescript lies here, error is in some cases { name: string, message: string }\n        const err = error as Record<string, any>;\n        error = Object.keys(err).reduce((acc, key) => {\n          (acc as any)[key] = err[key];\n          return acc;\n        }, new Error(err.message));\n      }\n      // If an error is emitted, it is re-thrown by events. In previous versions\n      // we emitted {error}, which is thrown as:\n      // \"Uncaught, unspecified \\\"error\\\" event. ([object Object])\"\n      // To avoid breaking changes, we make the error available in both\n      // `error` and `error.error`\n      // @MAJOR emit only error\n      (error as any).error = error;\n      this.error = error;\n      this.status = 'error';\n      this.scheduleRender(false);\n\n      // This needs to execute last because it throws the error.\n      this.emit('error', error);\n    });\n\n    this.mainHelper = mainHelper;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.subscribe();\n    });\n\n    this.mainIndex.init({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n      parent: null,\n      uiState: this._initialUiState,\n    });\n\n    if (this._initialResults) {\n      const originalScheduleSearch = this.scheduleSearch;\n      // We don't schedule a first search when initial results are provided\n      // because we already have the results to render. This skips the initial\n      // network request on the browser on `start`.\n      this.scheduleSearch = defer(noop);\n      // We also skip the initial network request when widgets are dynamically\n      // added in the first tick (that's the case in all the framework-based flavors).\n      // When we add a widget to `index`, it calls `scheduleSearch`. We can rely\n      // on our `defer` util to restore the original `scheduleSearch` value once\n      // widgets are added to hook back to the regular lifecycle.\n      defer(() => {\n        this.scheduleSearch = originalScheduleSearch;\n      })();\n    }\n    // We only schedule a search when widgets have been added before `start()`\n    // because there are listeners that can use these results.\n    // This is especially useful in framework-based flavors that wait for\n    // dynamically-added widgets to trigger a network request. It avoids\n    // having to batch this initial network request with the one coming from\n    // `addWidgets()`.\n    // Later, we could also skip `index()` widgets and widgets that don't read\n    // the results, but this is an optimization that has a very low impact for now.\n    else if (this.mainIndex.getWidgets().length > 0) {\n      this.scheduleSearch();\n    }\n\n    // Keep the previous reference for legacy purpose, some pattern use\n    // the direct Helper access `search.helper` (e.g multi-index).\n    this.helper = this.mainIndex.getHelper();\n\n    // track we started the search if we add more widgets,\n    // to init them directly after add\n    this.started = true;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.started();\n    });\n  }\n\n  /**\n   * Removes all widgets without triggering a search afterwards. This is an **EXPERIMENTAL** feature,\n   * if you find an issue with it, please\n   * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20dispose).\n   * @return {undefined} This method does not return anything\n   */\n  public dispose(): void {\n    this.scheduleSearch.cancel();\n    this.scheduleRender.cancel();\n    clearTimeout(this._searchStalledTimer);\n\n    this.removeWidgets(this.mainIndex.getWidgets());\n    this.mainIndex.dispose();\n\n    // You can not start an instance two times, therefore a disposed instance\n    // needs to set started as false otherwise this can not be restarted at a\n    // later point.\n    this.started = false;\n\n    // The helper needs to be reset to perform the next search from a fresh state.\n    // If not reset, it would use the state stored before calling `dispose()`.\n    this.removeAllListeners();\n    this.mainHelper?.removeAllListeners();\n    this.mainHelper = null;\n    this.helper = null;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.unsubscribe();\n    });\n  }\n\n  public scheduleSearch = defer(() => {\n    if (this.started) {\n      this.mainHelper!.search();\n    }\n  });\n\n  public scheduleRender = defer((shouldResetStatus: boolean = true) => {\n    if (!this.mainHelper?.hasPendingRequests()) {\n      clearTimeout(this._searchStalledTimer);\n      this._searchStalledTimer = null;\n\n      if (shouldResetStatus) {\n        this.status = 'idle';\n        this.error = undefined;\n      }\n    }\n\n    this.mainIndex.render({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n    });\n\n    this.emit('render');\n  });\n\n  public scheduleStalledRender() {\n    if (!this._searchStalledTimer) {\n      this._searchStalledTimer = setTimeout(() => {\n        this.status = 'stalled';\n        this.scheduleRender();\n      }, this._stalledSearchDelay);\n    }\n  }\n\n  /**\n   * Set the UI state and trigger a search.\n   * @param uiState The next UI state or a function computing it from the current state\n   * @param callOnStateChange private parameter used to know if the method is called from a state change\n   */\n  public setUiState(\n    uiState: TUiState | ((previousUiState: TUiState) => TUiState),\n    callOnStateChange: boolean = true\n  ): void {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `setUiState`.')\n      );\n    }\n\n    // We refresh the index UI state to update the local UI state that the\n    // main index passes to the function form of `setUiState`.\n    this.mainIndex.refreshUiState();\n    const nextUiState =\n      typeof uiState === 'function'\n        ? uiState(this.mainIndex.getWidgetUiState({}) as TUiState)\n        : uiState;\n\n    if (this.onStateChange && callOnStateChange) {\n      this.onStateChange({\n        uiState: nextUiState,\n        setUiState: (finalUiState) => {\n          setIndexHelperState(\n            typeof finalUiState === 'function'\n              ? finalUiState(nextUiState)\n              : finalUiState,\n            this.mainIndex\n          );\n\n          this.scheduleSearch();\n          this.onInternalStateChange();\n        },\n      });\n    } else {\n      setIndexHelperState(nextUiState, this.mainIndex);\n\n      this.scheduleSearch();\n      this.onInternalStateChange();\n    }\n  }\n\n  public getUiState(): TUiState {\n    if (this.started) {\n      // We refresh the index UI state to make sure changes from `refine` are taken in account\n      this.mainIndex.refreshUiState();\n    }\n\n    return this.mainIndex.getWidgetUiState({}) as TUiState;\n  }\n\n  public onInternalStateChange = defer(() => {\n    const nextUiState = this.mainIndex.getWidgetUiState({});\n\n    this.middleware.forEach(({ instance }) => {\n      instance.onStateChange({\n        uiState: nextUiState,\n      });\n    });\n  });\n\n  public createURL(nextState: TUiState = {} as TUiState): string {\n    if (!this.started) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `createURL`.')\n      );\n    }\n\n    return this._createURL(nextState);\n  }\n\n  public refresh() {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `refresh`.')\n      );\n    }\n\n    this.mainHelper.clearCache().search();\n  }\n}\n\nexport default InstantSearch;\n","import {\n  highlight,\n  reverseHighlight,\n  snippet,\n  reverseSnippet,\n  insights,\n} from '../helpers';\n\nimport { formatNumber } from './formatNumber';\n\nimport type {\n  HighlightOptions,\n  ReverseHighlightOptions,\n  SnippetOptions,\n  ReverseSnippetOptions,\n} from '../helpers';\nimport type {\n  Hit,\n  HoganHelpers,\n  InsightsClientMethod,\n  InsightsClientPayload,\n} from '../types';\n\ntype DefaultHoganHelpers = HoganHelpers<\n  | 'formatNumber'\n  | 'highlight'\n  | 'reverseHighlight'\n  | 'snippet'\n  | 'reverseSnippet'\n  | 'insights'\n>;\n\nexport default function hoganHelpers({\n  numberLocale,\n}: {\n  numberLocale?: string;\n}): DefaultHoganHelpers {\n  return {\n    formatNumber(value, render) {\n      return formatNumber(Number(render(value)), numberLocale);\n    },\n    highlight(options, render) {\n      try {\n        const highlightOptions: Omit<HighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          highlight({\n            ...highlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe highlight helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseHighlight(options, render) {\n      try {\n        const reverseHighlightOptions: Omit<ReverseHighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseHighlight({\n            ...reverseHighlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseHighlight helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    snippet(options, render) {\n      try {\n        const snippetOptions: Omit<SnippetOptions, 'hit'> = JSON.parse(options);\n\n        return render(\n          snippet({\n            ...snippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe snippet helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseSnippet(options, render) {\n      try {\n        const reverseSnippetOptions: Omit<ReverseSnippetOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseSnippet({\n            ...reverseSnippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseSnippet helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    insights(this: Hit, options, render) {\n      try {\n        type InsightsHelperOptions = {\n          method: InsightsClientMethod;\n          payload: Partial<InsightsClientPayload>;\n        };\n        const { method, payload }: InsightsHelperOptions = JSON.parse(options);\n\n        return render(\n          insights(method, { objectIDs: [this.objectID], ...payload })\n        );\n      } catch (error) {\n        throw new Error(`\nThe insights helper expects a JSON object of the format:\n{ \"method\": \"method-name\", \"payload\": { \"eventName\": \"name of the event\" } }`);\n      }\n    },\n  };\n}\n","export default '4.52.0';\n","import type { StateMapping, IndexUiState, UiState } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): TIndexUiState {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState as TIndexUiState;\n}\n\nexport default function singleIndexStateMapping<\n  TUiState extends UiState = UiState\n>(\n  indexName: keyof TUiState\n): StateMapping<TUiState, TUiState[typeof indexName]> {\n  return {\n    stateToRoute(uiState) {\n      return getIndexStateWithoutConfigure(uiState[indexName] || {});\n    },\n    routeToState(routeState = {} as TUiState[typeof indexName]) {\n      return {\n        [indexName]: getIndexStateWithoutConfigure(routeState),\n      } as unknown as TUiState;\n    },\n  };\n}\n","import { getInsightsAnonymousUserTokenInternal } from '../helpers';\nimport { warning, noop, getAppIdAndApiKey, find } from '../lib/utils';\n\nimport type {\n  InsightsClient,\n  InsightsClientMethod,\n  InternalMiddleware,\n  Hit,\n} from '../types';\nimport type {\n  AlgoliaSearchHelper,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\n\nexport type InsightsEvent = {\n  insightsMethod?: InsightsClientMethod;\n  payload: any;\n  widgetType: string;\n  eventType: string; // 'view' | 'click' | 'conversion', but we're not restricting.\n  hits?: Hit[];\n  attribute?: string;\n};\n\nexport type InsightsProps<\n  TInsightsClient extends null | InsightsClient = InsightsClient | null\n> = {\n  insightsClient: TInsightsClient;\n  insightsInitParams?: {\n    userHasOptedOut?: boolean;\n    useCookie?: boolean;\n    cookieDuration?: number;\n    region?: 'de' | 'us';\n  };\n  onEvent?: (event: InsightsEvent, insightsClient: TInsightsClient) => void;\n};\n\nexport type CreateInsightsMiddleware = typeof createInsightsMiddleware;\n\nexport function createInsightsMiddleware<\n  TInsightsClient extends null | InsightsClient\n>(props: InsightsProps<TInsightsClient>): InternalMiddleware {\n  const {\n    insightsClient: _insightsClient,\n    insightsInitParams,\n    onEvent,\n  } = props || {};\n  if (_insightsClient !== null && !_insightsClient) {\n    if (__DEV__) {\n      throw new Error(\n        \"The `insightsClient` option is required if you want userToken to be automatically set in search calls. If you don't want this behaviour, set it to `null`.\"\n      );\n    } else {\n      throw new Error(\n        'The `insightsClient` option is required. To disable, set it to `null`.'\n      );\n    }\n  }\n\n  const hasInsightsClient = Boolean(_insightsClient);\n  const insightsClient: InsightsClient =\n    _insightsClient === null ? noop : _insightsClient;\n\n  return ({ instantSearchInstance }) => {\n    const [appId, apiKey] = getAppIdAndApiKey(instantSearchInstance.client);\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    if (__DEV__ && !(appId && apiKey)) {\n      throw new Error(\n        '[insights middleware]: could not extract Algolia credentials from searchClient'\n      );\n    }\n\n    let queuedUserToken: string | undefined = undefined;\n    let userTokenBeforeInit: string | undefined = undefined;\n\n    if (Array.isArray(insightsClient.queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      [, queuedUserToken] =\n        find(\n          insightsClient.queue.slice().reverse(),\n          ([method]) => method === 'setUserToken'\n        ) || [];\n    }\n    insightsClient('getUserToken', null, (_error: any, userToken: string) => {\n      // If user has called `aa('setUserToken', 'my-user-token')` before creating\n      // the `insights` middleware, we store them temporarily and\n      // set it later on.\n      //\n      // Otherwise, the `init` call might override it with anonymous user token.\n      userTokenBeforeInit = userToken;\n    });\n    insightsClient('init', { appId, apiKey, ...insightsInitParams });\n\n    let initialParameters: PlainSearchParameters;\n    let helper: AlgoliaSearchHelper;\n\n    return {\n      onStateChange() {},\n      subscribe() {},\n      started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n\n        helper = instantSearchInstance.helper!;\n\n        initialParameters = {\n          userToken: (helper.state as PlainSearchParameters).userToken,\n          clickAnalytics: helper.state.clickAnalytics,\n        };\n\n        helper.overrideStateWithoutTriggeringChangeEvent({\n          ...helper.state,\n          clickAnalytics: true,\n        });\n        instantSearchInstance.scheduleSearch();\n\n        const setUserTokenToSearch = (userToken?: string) => {\n          helper.overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            userToken,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        };\n\n        const anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (hasInsightsClient && anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken);\n        }\n\n        // We consider the `userToken` coming from a `init` call to have a higher\n        // importance than the one coming from the queue.\n        if (userTokenBeforeInit) {\n          insightsClient('setUserToken', userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          insightsClient('setUserToken', queuedUserToken);\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true,\n        });\n\n        instantSearchInstance.sendEventToInsights = (event: InsightsEvent) => {\n          if (onEvent) {\n            onEvent(event, _insightsClient);\n          } else if (event.insightsMethod) {\n            const hasUserToken = Boolean(\n              (helper.state as PlainSearchParameters).userToken\n            );\n            if (hasUserToken) {\n              insightsClient(event.insightsMethod, event.payload);\n            } else {\n              warning(\n                false,\n                `\nCannot send event to Algolia Insights because \\`userToken\\` is not set.\n\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\n`\n              );\n            }\n          } else {\n            warning(\n              false,\n              'Cannot send event to Algolia Insights because `insightsMethod` option is missing.'\n            );\n          }\n        };\n      },\n      unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.setState({\n            ...helper.state,\n            ...initialParameters,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        }\n      },\n    };\n  };\n}\n","// typed as any, since it accepts the _real_ js clients, not the interface we otherwise expect\nexport function getAppIdAndApiKey(searchClient: any): [string, string] {\n  if (searchClient.transporter) {\n    // searchClient v4\n    const { headers, queryParameters } = searchClient.transporter;\n    const APP_ID = 'x-algolia-application-id';\n    const API_KEY = 'x-algolia-api-key';\n    const appId = headers[APP_ID] || queryParameters[APP_ID];\n    const apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}\n","export function cx() {\n  for (var _len = arguments.length, cssClasses = new Array(_len), _key = 0; _key < _len; _key++) {\n    cssClasses[_key] = arguments[_key];\n  }\n\n  return cssClasses.reduce(function (acc, className) {\n    if (Array.isArray(className)) {\n      return acc.concat(className);\n    }\n\n    return acc.concat([className]);\n  }, []).filter(Boolean).join(' ');\n}","import { uniq } from '../utils/uniq';\n\nimport type { HoganHelpers, Templates } from '../../types';\nimport type { HoganOptions } from 'hogan.js';\n\ntype TemplatesConfig = {\n  helpers?: HoganHelpers;\n  compileOptions?: HoganOptions;\n};\n\nexport type PreparedTemplateProps<TTemplates extends Templates> = {\n  templatesConfig: TemplatesConfig;\n  templates: TTemplates;\n  useCustomCompileOptions: {\n    [TKey in keyof Partial<TTemplates>]: boolean;\n  };\n};\n\nfunction prepareTemplates<TTemplates extends Templates>(\n  // can not use = {} here, since the template could have different constraints\n  defaultTemplates?: TTemplates,\n  templates: Partial<TTemplates> = {}\n) {\n  const allKeys = uniq([\n    ...Object.keys(defaultTemplates || {}),\n    ...Object.keys(templates),\n  ]);\n\n  return allKeys.reduce(\n    (config, key: keyof TTemplates) => {\n      const defaultTemplate = defaultTemplates\n        ? defaultTemplates[key]\n        : undefined;\n      const customTemplate = templates[key];\n      const isCustomTemplate =\n        customTemplate !== undefined && customTemplate !== defaultTemplate;\n\n      config.templates[key] = isCustomTemplate\n        ? customTemplate\n        : defaultTemplate!;\n\n      config.useCustomCompileOptions[key] = isCustomTemplate;\n\n      return config;\n    },\n    {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      templates: {} as TTemplates,\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      useCustomCompileOptions: {} as {\n        [TKey in keyof TTemplates]: boolean;\n      },\n    }\n  );\n}\n\n/**\n * Prepares an object to be passed to the Template widget\n */\nexport function prepareTemplateProps<TTemplates extends Templates>({\n  defaultTemplates,\n  templates,\n  templatesConfig,\n}: {\n  defaultTemplates: TTemplates;\n  templates?: Partial<TTemplates>;\n  templatesConfig: TemplatesConfig;\n}): PreparedTemplateProps<TTemplates> {\n  const preparedTemplates = prepareTemplates(defaultTemplates, templates);\n\n  return {\n    templatesConfig,\n    ...preparedTemplates,\n  };\n}\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"parts\", \"highlightedTagName\", \"nonHighlightedTagName\", \"separator\", \"className\", \"classNames\"];\nimport { cx } from '@algolia/ui-components-shared'; // Basic types to allow this file to compile without a JSX implementation.\n// This is a minimal subset of the actual types from the `JSX` namespace.\n\nfunction createHighlightPartComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function HighlightPart(_ref2) {\n    var classNames = _ref2.classNames,\n        children = _ref2.children,\n        highlightedTagName = _ref2.highlightedTagName,\n        isHighlighted = _ref2.isHighlighted,\n        nonHighlightedTagName = _ref2.nonHighlightedTagName;\n    var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n    return createElement(TagName, {\n      className: isHighlighted ? classNames.highlighted : classNames.nonHighlighted\n    }, children);\n  };\n}\n\nexport function createHighlightComponent(_ref3) {\n  var createElement = _ref3.createElement,\n      Fragment = _ref3.Fragment;\n  var HighlightPart = createHighlightPartComponent({\n    createElement: createElement,\n    Fragment: Fragment\n  });\n  return function Highlight(_ref4) {\n    var parts = _ref4.parts,\n        _ref4$highlightedTagN = _ref4.highlightedTagName,\n        highlightedTagName = _ref4$highlightedTagN === void 0 ? 'mark' : _ref4$highlightedTagN,\n        _ref4$nonHighlightedT = _ref4.nonHighlightedTagName,\n        nonHighlightedTagName = _ref4$nonHighlightedT === void 0 ? 'span' : _ref4$nonHighlightedT,\n        _ref4$separator = _ref4.separator,\n        separator = _ref4$separator === void 0 ? ', ' : _ref4$separator,\n        className = _ref4.className,\n        _ref4$classNames = _ref4.classNames,\n        classNames = _ref4$classNames === void 0 ? {} : _ref4$classNames,\n        props = _objectWithoutProperties(_ref4, _excluded);\n\n    return createElement(\"span\", _extends({}, props, {\n      className: cx(classNames.root, className)\n    }), parts.map(function (part, partIndex) {\n      var isLastPart = partIndex === parts.length - 1;\n      return createElement(Fragment, {\n        key: partIndex\n      }, part.map(function (subPart, subPartIndex) {\n        return createElement(HighlightPart, {\n          key: subPartIndex,\n          classNames: classNames,\n          highlightedTagName: highlightedTagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: subPart.isHighlighted\n        }, subPart.value);\n      }), !isLastPart && createElement(\"span\", {\n        className: classNames.separator\n      }, separator));\n    }));\n  };\n}","import { createHighlightComponent } from '@algolia/ui-components-highlight-vdom';\nimport { createElement, Fragment } from 'preact';\n\nexport const InternalHighlight = createHighlightComponent({\n  createElement,\n  Fragment,\n});\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type HighlightClassNames = InternalHighlightClassNames;\nexport type HighlightProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<HighlightClassNames>;\n};\n\nexport function Highlight({ classNames = {}, ...props }: HighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Highlight', classNames.root),\n        highlighted: cx('ais-Highlight-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Highlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Highlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Highlight as HighlightUiComponent } from '../../components/Highlight/Highlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { HighlightProps as HighlightUiComponentProps } from '../../components/Highlight/Highlight';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\n\nexport type HighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: HighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<HighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Highlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: HighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <HighlightUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type ReverseHighlightClassNames = InternalHighlightClassNames;\nexport type ReverseHighlightProps = Omit<\n  InternalHighlightProps,\n  'classNames'\n> & {\n  classNames?: Partial<ReverseHighlightClassNames>;\n};\n\nexport function ReverseHighlight({\n  classNames = {},\n  ...props\n}: ReverseHighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseHighlight', classNames.root),\n        highlighted: cx(\n          'ais-ReverseHighlight-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseHighlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseHighlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseHighlight as ReverseHighlightUiComponent } from '../../components/ReverseHighlight/ReverseHighlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { ReverseHighlightProps as ReverseHighlightUiComponentProps } from '../../components/ReverseHighlight/ReverseHighlight';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\n\nexport type ReverseHighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseHighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseHighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseHighlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseHighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseHighlightUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type ReverseSnippetClassNames = InternalHighlightClassNames;\nexport type ReverseSnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<ReverseSnippetClassNames>;\n};\n\nexport function ReverseSnippet({\n  classNames = {},\n  ...props\n}: ReverseSnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseSnippet', classNames.root),\n        highlighted: cx(\n          'ais-ReverseSnippet-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseSnippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseSnippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseSnippet as ReverseSnippetUiComponent } from '../../components/ReverseSnippet/ReverseSnippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { ReverseSnippetProps as ReverseSnippetUiComponentProps } from '../../components/ReverseSnippet/ReverseSnippet';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\n\nexport type ReverseSnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseSnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseSnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseSnippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseSnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseSnippetUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type SnippetClassNames = InternalHighlightClassNames;\nexport type SnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<SnippetClassNames>;\n};\n\nexport function Snippet({ classNames = {}, ...props }: SnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Snippet', classNames.root),\n        highlighted: cx('ais-Snippet-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Snippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Snippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Snippet as SnippetUiComponent } from '../../components/Snippet/Snippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type { SnippetProps as SnippetUiComponentProps } from '../../components/Snippet/Snippet';\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\n\nexport type SnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: SnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<SnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Snippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: SnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <SnippetUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","import hogan from 'hogan.js';\nimport { html } from 'htm/preact';\n\nimport {\n  Highlight,\n  ReverseHighlight,\n  ReverseSnippet,\n  Snippet,\n} from '../../helpers/components';\n\nimport type { Templates, HoganHelpers, TemplateParams } from '../../types';\nimport type {\n  BindEventForHits,\n  SendEventForHits,\n} from '../utils/createSendEventForHits';\nimport type { HoganOptions, Template } from 'hogan.js';\n\ntype TransformedHoganHelpers = {\n  [helper: string]: () => (text: string) => string;\n};\n\n// We add all our template helper methods to the template as lambdas. Note\n// that lambdas in Mustache are supposed to accept a second argument of\n// `render` to get the rendered value, not the literal `{{value}}`. But\n// this is currently broken (see https://github.com/twitter/hogan.js/issues/222).\nfunction transformHelpersToHogan(\n  helpers: HoganHelpers = {},\n  compileOptions?: HoganOptions,\n  data?: Record<string, any>\n) {\n  return Object.keys(helpers).reduce<TransformedHoganHelpers>(\n    (acc, helperKey) => ({\n      ...acc,\n      [helperKey]() {\n        return (text) => {\n          const render = (value: string) =>\n            (hogan.compile(value, compileOptions) as Template).render(this);\n\n          return helpers[helperKey].call(data, text, render);\n        };\n      },\n    }),\n    {}\n  );\n}\n\nexport function renderTemplate({\n  templates,\n  templateKey,\n  compileOptions,\n  helpers,\n  data,\n  bindEvent,\n  sendEvent,\n}: {\n  templates: Templates;\n  templateKey: string;\n  compileOptions?: HoganOptions;\n  helpers?: HoganHelpers;\n  data?: Record<string, any>;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n}) {\n  const template = templates[templateKey];\n\n  if (typeof template !== 'string' && typeof template !== 'function') {\n    throw new Error(\n      `Template must be 'string' or 'function', was '${typeof template}' (key: ${templateKey})`\n    );\n  }\n\n  if (typeof template === 'function') {\n    // @MAJOR no longer pass bindEvent when string templates are removed\n    const params = (bindEvent || {}) as TemplateParams;\n\n    params.html = html;\n    (params as any).sendEvent = sendEvent;\n    params.components = {\n      Highlight,\n      ReverseHighlight,\n      Snippet,\n      ReverseSnippet,\n    };\n\n    // @MAJOR remove the `as any` when string templates are removed\n    // needed because not every template receives sendEvent\n    return template(data, params as any);\n  }\n\n  const transformedHelpers = transformHelpersToHogan(\n    helpers,\n    compileOptions,\n    data\n  );\n\n  return (hogan.compile(template, compileOptions) as Template)\n    .render({\n      ...data,\n      helpers: transformedHelpers,\n    })\n    .replace(/[ \\n\\r\\t\\f\\xA0]+/g, (spaces) =>\n      spaces.replace(/(^|\\xA0+)[^\\xA0]+/g, '$1 ')\n    )\n    .trim();\n}\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\n\nimport { renderTemplate } from '../../lib/templating';\nimport { warning, isEqual } from '../../lib/utils';\n\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { Templates } from '../../types';\nimport type { JSX } from 'preact';\n\nconst defaultProps = {\n  data: {},\n  rootTagName: 'div',\n  useCustomCompileOptions: {},\n  templates: {},\n  templatesConfig: {},\n};\n\nexport type TemplateProps = {\n  data?: Record<string, any>;\n  rootProps?: Record<string, any>;\n  rootTagName?: keyof JSX.IntrinsicElements;\n  templateKey: string;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n} & PreparedTemplateProps<Templates> &\n  Readonly<typeof defaultProps>;\n\n// @TODO: Template should be a generic and receive TData to pass to Templates (to avoid TTemplateData to be set as `any`)\nclass Template extends Component<TemplateProps> {\n  public static readonly defaultProps = defaultProps;\n\n  public shouldComponentUpdate(nextProps: TemplateProps) {\n    return (\n      !isEqual(this.props.data, nextProps.data) ||\n      this.props.templateKey !== nextProps.templateKey ||\n      !isEqual(this.props.rootProps, nextProps.rootProps)\n    );\n  }\n\n  public render() {\n    warning(\n      Object.keys(this.props.templates).every(\n        (key) => typeof this.props.templates[key] === 'function'\n      ),\n      `Hogan.js and string-based templates are deprecated and will not be supported in InstantSearch.js 5.x.\n\nYou can replace them with function-form templates and use either the provided \\`html\\` function or JSX templates.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#upgrade-templates`\n    );\n\n    const RootTagName = this.props.rootTagName;\n\n    const useCustomCompileOptions =\n      this.props.useCustomCompileOptions[this.props.templateKey];\n    const compileOptions = useCustomCompileOptions\n      ? this.props.templatesConfig.compileOptions\n      : {};\n\n    const content = renderTemplate({\n      templates: this.props.templates,\n      templateKey: this.props.templateKey,\n      compileOptions,\n      helpers: this.props.templatesConfig.helpers,\n      data: this.props.data,\n      bindEvent: this.props.bindEvent,\n      sendEvent: this.props.sendEvent,\n    });\n\n    if (content === null) {\n      // Adds a noscript to the DOM but virtual DOM is null\n      // See http://facebook.github.io/react/docs/component-specs.html#render\n      return null;\n    }\n\n    if (typeof content === 'object') {\n      return <RootTagName {...this.props.rootProps}>{content}</RootTagName>;\n    }\n\n    return (\n      <RootTagName\n        {...this.props.rootProps}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    );\n  }\n}\n\nexport default Template;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { warning } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type {\n  AnswersCSSClasses,\n  AnswersTemplates,\n} from '../../widgets/answers/answers';\n\nexport type AnswersComponentCSSClasses = ComponentCSSClasses<AnswersCSSClasses>;\n\nexport type AnswersComponentTemplates = Required<AnswersTemplates>;\n\nexport type AnswersProps = {\n  hits: Hit[];\n  isLoading: boolean;\n  cssClasses: AnswersComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: AnswersComponentTemplates;\n  };\n};\n\nconst Answers = ({\n  hits,\n  isLoading,\n  cssClasses,\n  templateProps,\n}: AnswersProps) => (\n  <div\n    className={cx(cssClasses.root, hits.length === 0 && cssClasses.emptyRoot)}\n  >\n    <Template\n      {...templateProps}\n      templateKey=\"header\"\n      rootProps={{ className: cssClasses.header }}\n      data={{\n        hits,\n        isLoading,\n      }}\n    />\n    {isLoading ? (\n      <Template\n        {...templateProps}\n        templateKey=\"loader\"\n        rootProps={{ className: cssClasses.loader }}\n      />\n    ) : (\n      <ul className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              get __hitIndex() {\n                warning(\n                  false,\n                  'The `__hitIndex` property is deprecated. Use the absolute `__position` instead.'\n                );\n                return index;\n              },\n            }}\n          />\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nexport default Answers;\n","import type { AnswersComponentTemplates } from '../../components/Answers/Answers';\n\nconst defaultTemplates: AnswersComponentTemplates = {\n  header() {\n    return '';\n  },\n  loader() {\n    return '';\n  },\n  item(item) {\n    return JSON.stringify(item);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Answers from '../../components/Answers/Answers';\nimport connectAnswers from '../../connectors/answers/connectAnswers';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  AnswersComponentCSSClasses,\n  AnswersComponentTemplates,\n} from '../../components/Answers/Answers';\nimport type {\n  AnswersRenderState,\n  AnswersConnectorParams,\n  AnswersWidgetDescription,\n} from '../../connectors/answers/connectAnswers';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template, Hit, Renderer } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'answers' });\nconst suit = component('Answers');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: AnswersComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<AnswersComponentTemplates>;\n    };\n    templates: AnswersTemplates;\n  }): Renderer<AnswersRenderState, Partial<AnswersWidgetParams>> =>\n  ({ hits, isLoading, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <Answers\n        cssClasses={cssClasses}\n        hits={hits}\n        isLoading={isLoading}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type AnswersTemplates = Partial<{\n  /**\n   * Template to use for the header. This template will receive an object containing `hits` and `isLoading`.\n   */\n  header: Template<{\n    hits: Hit[];\n    isLoading: boolean;\n  }>;\n\n  /**\n   * Template to use for the loader.\n   */\n  loader: Template;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit>;\n}>;\n\nexport type AnswersCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the loader.\n   */\n  loader: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type AnswersWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: AnswersTemplates;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: AnswersCSSClasses;\n};\n\nexport type AnswersWidget = WidgetFactory<\n  AnswersWidgetDescription & { $$widgetType: 'ais.answers' },\n  AnswersConnectorParams,\n  AnswersWidgetParams\n>;\n\nconst answersWidget: AnswersWidget = (widgetParams) => {\n  const {\n    container,\n    attributesForPrediction,\n    queryLanguages,\n    nbHits,\n    searchDebounceTime,\n    renderDebounceTime,\n    escapeHTML,\n    extraParameters,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    loader: cx(suit({ descendantName: 'loader' }), userCssClasses.loader),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectAnswers(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributesForPrediction,\n      queryLanguages,\n      nbHits,\n      searchDebounceTime,\n      renderDebounceTime,\n      escapeHTML,\n      extraParameters,\n    }),\n    $$widgetType: 'ais.answers',\n  };\n};\n\nexport default answersWidget;\n","import connectDynamicWidgets from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getWidgetAttribute,\n} from '../../lib/utils';\n\nimport type {\n  DynamicWidgetsConnectorParams,\n  DynamicWidgetsWidgetDescription,\n} from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport type { Widget, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n});\nconst suit = component('DynamicWidgets');\n\nexport type DynamicWidgetsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * An array of widget creator functions, displayed in the order defined by\n   * `facetOrdering`.\n   */\n  widgets: Array<(container: HTMLElement) => Widget>;\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?(args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n    /** CSS Selector or HTMLElement to insert the widget */\n    container: HTMLElement;\n  }): Widget;\n};\n\nexport type DynamicWidgetsWidget = WidgetFactory<\n  DynamicWidgetsWidgetDescription & { $$widgetType: 'ais.dynamicWidgets' },\n  Omit<DynamicWidgetsConnectorParams, 'widgets' | 'fallbackWidget'>,\n  DynamicWidgetsWidgetParams\n>;\n\nfunction createContainer(rootContainer: HTMLElement) {\n  const container = document.createElement('div');\n  container.className = suit({ descendantName: 'widget' });\n\n  rootContainer.appendChild(container);\n\n  return container;\n}\n\nconst dynamicWidgets: DynamicWidgetsWidget = function dynamicWidgets(\n  widgetParams\n) {\n  const {\n    container: containerSelector,\n    widgets,\n    fallbackWidget,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  if (!containerSelector) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (\n    !(\n      widgets &&\n      Array.isArray(widgets) &&\n      widgets.every((widget) => typeof widget === 'function')\n    )\n  ) {\n    throw new Error(\n      withUsage('The `widgets` option expects an array of callbacks.')\n    );\n  }\n\n  const userContainer = getContainerNode(containerSelector);\n  const rootContainer = document.createElement('div');\n  rootContainer.className = suit();\n\n  const containers = new Map<string, HTMLElement>();\n  const connectorWidgets: Widget[] = [];\n\n  const makeWidget = connectDynamicWidgets(\n    ({ attributesToRender }, isFirstRender) => {\n      if (isFirstRender) {\n        userContainer.appendChild(rootContainer);\n      }\n\n      attributesToRender.forEach((attribute) => {\n        if (!containers.has(attribute)) {\n          return;\n        }\n        const container = containers.get(attribute)!;\n        rootContainer.appendChild(container);\n      });\n    },\n    () => {\n      userContainer.removeChild(rootContainer);\n    }\n  );\n\n  const widget = makeWidget({\n    ...otherWidgetParams,\n    widgets: connectorWidgets,\n    fallbackWidget:\n      typeof fallbackWidget === 'function'\n        ? ({ attribute }) => {\n            const container = createContainer(rootContainer);\n            containers.set(attribute, container);\n            return fallbackWidget({ attribute, container });\n          }\n        : undefined,\n  });\n\n  return {\n    ...widget,\n    init(initOptions) {\n      widgets.forEach((cb) => {\n        const container = createContainer(rootContainer);\n\n        const childWidget = cb(container);\n        const attribute = getWidgetAttribute(childWidget, initOptions);\n\n        containers.set(attribute, container);\n        connectorWidgets.push(childWidget);\n      });\n\n      widget.init!(initOptions);\n    },\n    $$widgetType: 'ais.dynamicWidgets',\n  };\n};\nexport default dynamicWidgets;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport CurrentRefinements from '../../components/CurrentRefinements/CurrentRefinements';\nimport connectCurrentRefinements from '../../connectors/current-refinements/connectCurrentRefinements';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsRenderState,\n  CurrentRefinementsWidgetDescription,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport type { ComponentCSSClasses, Renderer, WidgetFactory } from '../../types';\n\nexport type CurrentRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to the category element.\n   */\n  category: string | string[];\n\n  /**\n   * CSS class to add to the categoryLabel element.\n   */\n  categoryLabel: string | string[];\n\n  /**\n   * CSS class to add to the delete element.\n   */\n  delete: string | string[];\n}>;\n\nexport type CurrentRefinementsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: CurrentRefinementsCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n});\nconst suit = component('CurrentRefinements');\n\nconst renderer: Renderer<\n  CurrentRefinementsRenderState,\n  Partial<CurrentRefinementsWidgetParams>\n> = ({ items, widgetParams, canRefine }, isFirstRender) => {\n  if (isFirstRender) {\n    return;\n  }\n\n  const { container, cssClasses } = widgetParams as {\n    container: HTMLElement;\n    cssClasses: ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n  };\n\n  render(\n    <CurrentRefinements\n      cssClasses={cssClasses}\n      items={items}\n      canRefine={canRefine}\n    />,\n    container\n  );\n};\n\nexport type CurrentRefinementsWidget = WidgetFactory<\n  CurrentRefinementsWidgetDescription & {\n    $$widgetType: 'ais.currentRefinements';\n  },\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsWidgetParams\n>;\n\nconst currentRefinements: CurrentRefinementsWidget =\n  function currentRefinements(widgetParams) {\n    const {\n      container,\n      includedAttributes,\n      excludedAttributes,\n      cssClasses: userCssClasses = {},\n      transformItems,\n    } = widgetParams || {};\n\n    if (!container) {\n      throw new Error(withUsage('The `container` option is required.'));\n    }\n\n    const containerNode = getContainerNode(container);\n    const cssClasses: CurrentRefinementsCSSClasses = {\n      root: cx(suit(), userCssClasses.root),\n      noRefinementRoot: cx(\n        suit({ modifierName: 'noRefinement' }),\n        userCssClasses.noRefinementRoot\n      ),\n      list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n      item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n      label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n      category: cx(\n        suit({ descendantName: 'category' }),\n        userCssClasses.category\n      ),\n      categoryLabel: cx(\n        suit({ descendantName: 'categoryLabel' }),\n        userCssClasses.categoryLabel\n      ),\n      delete: cx(suit({ descendantName: 'delete' }), userCssClasses.delete),\n    };\n\n    const makeWidget =\n      connectCurrentRefinements<CurrentRefinementsWidgetParams>(renderer, () =>\n        render(null, containerNode)\n      );\n\n    return {\n      ...makeWidget({\n        container: containerNode,\n        cssClasses,\n        includedAttributes,\n        excludedAttributes,\n        transformItems,\n      }),\n      $$widgetType: 'ais.currentRefinements',\n    };\n  };\n\nexport default currentRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { ComponentChildren } from 'preact';\n\ntype Props = {\n  className: string;\n  onClick(event: MouseEvent): void;\n  children: ComponentChildren;\n  disabled?: boolean;\n};\n\nconst GeoSearchButton = ({\n  className,\n  disabled = false,\n  onClick,\n  children,\n}: Props) => (\n  <button className={className} onClick={onClick} disabled={disabled}>\n    {children}\n  </button>\n);\n\nexport default GeoSearchButton;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { ComponentChildren } from 'preact';\n\ntype Props = {\n  classNameLabel: string;\n  classNameInput: string;\n  checked: boolean;\n  onToggle(event: Event): void;\n  children: ComponentChildren;\n};\n\nconst GeoSearchToggle = ({\n  classNameLabel,\n  classNameInput,\n  checked,\n  onToggle,\n  children,\n}: Props) => (\n  <label className={classNameLabel}>\n    <input\n      className={classNameInput}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onToggle}\n    />\n    {children}\n  </label>\n);\n\nexport default GeoSearchToggle;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\n\nimport GeoSearchControls from '../../components/GeoSearchControls/GeoSearchControls';\nimport { prepareTemplateProps } from '../../lib/templating';\n\nconst refineWithMap = ({ refine, mapInstance }) =>\n  refine({\n    northEast: mapInstance.getBounds().getNorthEast().toJSON(),\n    southWest: mapInstance.getBounds().getSouthWest().toJSON(),\n  });\n\nconst collectMarkersForNextRender = (markers, nextIds) =>\n  markers.reduce(\n    ([update, exit], marker) => {\n      const persist = nextIds.includes(marker.__id);\n\n      return persist\n        ? [update.concat(marker), exit]\n        : [update, exit.concat(marker)];\n    },\n    [[], []]\n  );\n\nconst createBoundingBoxFromMarkers = (google, markers) => {\n  const latLngBounds = markers.reduce(\n    (acc, marker) => acc.extend(marker.getPosition()),\n    new google.maps.LatLngBounds()\n  );\n\n  return {\n    northEast: latLngBounds.getNorthEast().toJSON(),\n    southWest: latLngBounds.getSouthWest().toJSON(),\n  };\n};\n\nconst lockUserInteraction = (renderState, functionThatAltersTheMapPosition) => {\n  renderState.isUserInteraction = false;\n  functionThatAltersTheMapPosition();\n  renderState.isUserInteraction = true;\n};\n\nconst renderer = (\n  {\n    items,\n    position,\n    currentRefinement,\n    refine,\n    clearMapRefinement,\n    toggleRefineOnMapMove,\n    isRefineOnMapMove,\n    setMapMoveSinceLastRefine,\n    hasMapMoveSinceLastRefine,\n    isRefinedWithMap,\n    widgetParams,\n    instantSearchInstance,\n  },\n  isFirstRendering\n) => {\n  const {\n    container,\n    googleReference,\n    cssClasses,\n    templates,\n    initialZoom,\n    initialPosition,\n    enableRefine,\n    enableClearMapRefinement,\n    enableRefineControl,\n    mapOptions,\n    createMarker,\n    markerOptions,\n    renderState,\n  } = widgetParams;\n\n  if (isFirstRendering) {\n    renderState.isUserInteraction = true;\n    renderState.isPendingRefine = false;\n    renderState.markers = [];\n\n    const rootElement = document.createElement('div');\n    rootElement.className = cssClasses.root;\n    container.appendChild(rootElement);\n\n    const mapElement = document.createElement('div');\n    mapElement.className = cssClasses.map;\n    rootElement.appendChild(mapElement);\n\n    const treeElement = document.createElement('div');\n    treeElement.className = cssClasses.tree;\n    rootElement.appendChild(treeElement);\n\n    renderState.mapInstance = new googleReference.maps.Map(mapElement, {\n      mapTypeControl: false,\n      fullscreenControl: false,\n      streetViewControl: false,\n      clickableIcons: false,\n      zoomControlOptions: {\n        position: googleReference.maps.ControlPosition.LEFT_TOP,\n      },\n      ...mapOptions,\n    });\n\n    const setupListenersWhenMapIsReady = () => {\n      const onChange = () => {\n        if (renderState.isUserInteraction && enableRefine) {\n          setMapMoveSinceLastRefine();\n\n          if (isRefineOnMapMove()) {\n            renderState.isPendingRefine = true;\n          }\n        }\n      };\n\n      renderState.mapInstance.addListener('center_changed', onChange);\n      renderState.mapInstance.addListener('zoom_changed', onChange);\n      renderState.mapInstance.addListener('dragstart', onChange);\n\n      renderState.mapInstance.addListener('idle', () => {\n        if (renderState.isUserInteraction && renderState.isPendingRefine) {\n          renderState.isPendingRefine = false;\n\n          refineWithMap({\n            mapInstance: renderState.mapInstance,\n            refine,\n          });\n        }\n      });\n    };\n\n    googleReference.maps.event.addListenerOnce(\n      renderState.mapInstance,\n      'idle',\n      setupListenersWhenMapIsReady\n    );\n\n    renderState.templateProps = prepareTemplateProps({\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  // Collect markers that need to be updated or removed\n  const nextItemsIds = items.map((_) => _.objectID);\n  const [updateMarkers, exitMarkers] = collectMarkersForNextRender(\n    renderState.markers,\n    nextItemsIds\n  );\n\n  // Collect items that will be added\n  const updateMarkerIds = updateMarkers.map((_) => _.__id);\n  const nextPendingItems = items.filter(\n    (item) => !updateMarkerIds.includes(item.objectID)\n  );\n\n  // Remove all markers that need to be removed\n  exitMarkers.forEach((marker) => marker.setMap(null));\n\n  // Create the markers from the items\n  renderState.markers = updateMarkers.concat(\n    nextPendingItems.map((item) => {\n      const marker = createMarker({\n        map: renderState.mapInstance,\n        item,\n      });\n\n      Object.keys(markerOptions.events).forEach((eventName) => {\n        marker.addListener(eventName, (event) => {\n          markerOptions.events[eventName]({\n            map: renderState.mapInstance,\n            event,\n            item,\n            marker,\n          });\n        });\n      });\n\n      return marker;\n    })\n  );\n\n  const shouldUpdate = !hasMapMoveSinceLastRefine();\n\n  // We use this value for differentiate the padding to apply during\n  // fitBounds. When we don't have a currenRefinement (boundingBox)\n  // we let Google Maps compute the automatic padding. But when we\n  // provide the currentRefinement we explicitly set the padding\n  // to `0` otherwise the map will decrease the zoom on each refine.\n  const boundingBoxPadding = currentRefinement ? 0 : null;\n  const boundingBox =\n    !currentRefinement && Boolean(renderState.markers.length)\n      ? createBoundingBoxFromMarkers(googleReference, renderState.markers)\n      : currentRefinement;\n\n  if (boundingBox && shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.fitBounds(\n        new googleReference.maps.LatLngBounds(\n          boundingBox.southWest,\n          boundingBox.northEast\n        ),\n        boundingBoxPadding\n      );\n    });\n  } else if (shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.setCenter(position || initialPosition);\n      renderState.mapInstance.setZoom(initialZoom);\n    });\n  }\n\n  render(\n    <GeoSearchControls\n      cssClasses={cssClasses}\n      enableRefine={enableRefine}\n      enableRefineControl={enableRefineControl}\n      enableClearMapRefinement={enableClearMapRefinement}\n      isRefineOnMapMove={isRefineOnMapMove()}\n      isRefinedWithMap={isRefinedWithMap()}\n      hasMapMoveSinceLastRefine={hasMapMoveSinceLastRefine()}\n      onRefineToggle={toggleRefineOnMapMove}\n      onRefineClick={() =>\n        refineWithMap({\n          mapInstance: renderState.mapInstance,\n          refine,\n        })\n      }\n      onClearClick={clearMapRefinement}\n      templateProps={renderState.templateProps}\n    />,\n    container.querySelector(`.${cssClasses.tree}`)\n  );\n};\n\nexport default renderer;\n","import { createDocumentationMessageGenerator, warning } from '../../lib/utils';\n\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\n\nexport type AnalyticsWidgetParamsPushFunction = (\n  /**\n   * Contains the search parameters, serialized as a query string.\n   */\n  formattedParameters: string,\n\n  /**\n   * Contains the whole search state.\n   */\n  state: SearchParameters,\n\n  /**\n   * The last received results.\n   */\n  results: SearchResults\n) => void;\n\nexport type AnalyticsWidgetParams = {\n  /**\n   * A function that is called every time the query or refinements changes. You\n   * need to add the logic to push the data to your analytics platform.\n   */\n  pushFunction: AnalyticsWidgetParamsPushFunction;\n\n  /**\n   * The number of milliseconds between the last search keystroke and calling `pushFunction`.\n   *\n   * @default 3000\n   */\n  delay?: number;\n\n  /**\n   * Triggers `pushFunction` after click on page or redirecting the page. This is useful if\n   * you want the pushFunction to be called for the last actions before the user leaves the\n   * current page, even if the delay wasn’t reached.\n   *\n   * @default false\n   */\n  triggerOnUIInteraction?: boolean;\n\n  /**\n   * Triggers `pushFunction` when InstantSearch is initialized. This means\n   * the `pushFunction` might be called even though the user didn’t perfom\n   * any search-related action.\n   *\n   * @default true\n   */\n  pushInitialSearch?: boolean;\n\n  /**\n   * Triggers `pushFunction` when the page changes, either through the UI or programmatically.\n   *\n   * @default false\n   */\n  pushPagination?: boolean;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'analytics' });\n\nexport type AnalyticsWidgetDescription = {\n  $$type: 'ais.analytics';\n  $$widgetType: 'ais.analytics';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    analytics: WidgetRenderState<\n      Record<string, unknown>,\n      AnalyticsWidgetParams\n    >;\n  };\n};\n\nexport type AnalyticsWidget = WidgetFactory<\n  AnalyticsWidgetDescription,\n  AnalyticsWidgetParams,\n  AnalyticsWidgetParams\n>;\n\n// @major this widget will be removed from the next major version.\nconst analytics: AnalyticsWidget = function analytics(widgetParams) {\n  const {\n    pushFunction,\n    delay = 3000,\n    triggerOnUIInteraction = false,\n    pushInitialSearch = true,\n    pushPagination = false,\n  } = widgetParams || {};\n\n  if (!pushFunction) {\n    throw new Error(withUsage('The `pushFunction` option is required.'));\n  }\n\n  warning(\n    false,\n    `\\`analytics\\` widget has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor the migration, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#analytics-widget`\n  );\n\n  type AnalyticsState = {\n    results: SearchResults;\n    state: SearchParameters;\n  } | null;\n\n  let cachedState: AnalyticsState = null;\n\n  type RefinementParameters = {\n    [key: string]: string[];\n  };\n\n  const serializeRefinements = function (\n    parameters: RefinementParameters\n  ): string {\n    const refinements: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const parameter in parameters) {\n      if (parameters.hasOwnProperty(parameter)) {\n        const values = parameters[parameter].join('+');\n        refinements.push(\n          `${encodeURIComponent(parameter)}=${encodeURIComponent(\n            parameter\n          )}_${encodeURIComponent(values)}`\n        );\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  const serializeNumericRefinements = function (\n    numericRefinements: SearchParameters['numericRefinements']\n  ): string {\n    const refinements: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const attribute in numericRefinements) {\n      if (numericRefinements.hasOwnProperty(attribute)) {\n        const filter = numericRefinements[attribute];\n\n        if (filter.hasOwnProperty('>=') && filter.hasOwnProperty('<=')) {\n          if (\n            filter['>='] &&\n            filter['>='][0] === filter['<='] &&\n            filter['<='][0]\n          ) {\n            refinements.push(`${attribute}=${attribute}_${filter['>=']}`);\n          } else {\n            refinements.push(\n              `${attribute}=${attribute}_${filter['>=']}to${filter['<=']}`\n            );\n          }\n        } else if (filter.hasOwnProperty('>=')) {\n          refinements.push(`${attribute}=${attribute}_from${filter['>=']}`);\n        } else if (filter.hasOwnProperty('<=')) {\n          refinements.push(`${attribute}=${attribute}_to${filter['<=']}`);\n        } else if (filter.hasOwnProperty('=')) {\n          const equals: string[] = [];\n\n          // eslint-disable-next-line no-restricted-syntax\n          for (const equal in filter['=']) {\n            // eslint-disable-next-line max-depth\n            if (filter['='].hasOwnProperty(equal)) {\n              // @ts-ignore somehow 'equal' is a string, even though it's a number?\n              equals.push(filter['='][equal]);\n            }\n          }\n\n          refinements.push(`${attribute}=${attribute}_${equals.join('-')}`);\n        }\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  let lastSentData = '';\n\n  const sendAnalytics = function (analyticsState: AnalyticsState | null): void {\n    if (analyticsState === null) {\n      return;\n    }\n\n    const serializedParams: string[] = [];\n\n    const serializedRefinements = serializeRefinements({\n      ...analyticsState.state.disjunctiveFacetsRefinements,\n      ...analyticsState.state.facetsRefinements,\n      ...analyticsState.state.hierarchicalFacetsRefinements,\n    });\n\n    const serializedNumericRefinements = serializeNumericRefinements(\n      analyticsState.state.numericRefinements\n    );\n\n    if (serializedRefinements !== '') {\n      serializedParams.push(serializedRefinements);\n    }\n\n    if (serializedNumericRefinements !== '') {\n      serializedParams.push(serializedNumericRefinements);\n    }\n\n    const stringifiedParams = serializedParams.join('&');\n\n    let dataToSend = `Query: ${\n      analyticsState.state.query || ''\n    }, ${stringifiedParams}`;\n    if (pushPagination === true) {\n      dataToSend += `, Page: ${analyticsState.state.page || 0}`;\n    }\n\n    if (lastSentData !== dataToSend) {\n      pushFunction(\n        stringifiedParams,\n        analyticsState.state,\n        analyticsState.results\n      );\n\n      lastSentData = dataToSend;\n    }\n  };\n\n  let pushTimeout: number;\n  let isInitialSearch = true;\n\n  if (pushInitialSearch === true) {\n    isInitialSearch = false;\n  }\n\n  const onClick = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  const onUnload = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  return {\n    $$type: 'ais.analytics',\n    $$widgetType: 'ais.analytics',\n\n    init() {\n      if (triggerOnUIInteraction === true) {\n        document.addEventListener('click', onClick);\n        window.addEventListener('beforeunload', onUnload);\n      }\n    },\n\n    render({ results, state }) {\n      if (isInitialSearch === true) {\n        isInitialSearch = false;\n\n        return;\n      }\n\n      cachedState = { results, state };\n\n      if (pushTimeout) {\n        clearTimeout(pushTimeout);\n      }\n\n      pushTimeout = window.setTimeout(() => sendAnalytics(cachedState), delay);\n    },\n\n    dispose() {\n      if (triggerOnUIInteraction === true) {\n        document.removeEventListener('click', onClick);\n        window.removeEventListener('beforeunload', onUnload);\n      }\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        analytics: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default analytics;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { BreadcrumbConnectorParamsItem } from '../../connectors/breadcrumb/connectBreadcrumb';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  BreadcrumbCSSClasses,\n  BreadcrumbTemplates,\n} from '../../widgets/breadcrumb/breadcrumb';\n\nexport type BreadcrumbComponentCSSClasses =\n  ComponentCSSClasses<BreadcrumbCSSClasses>;\n\nexport type BreadcrumbComponentTemplates = Required<BreadcrumbTemplates>;\n\nexport type BreadcrumbProps = {\n  items: BreadcrumbConnectorParamsItem[];\n  cssClasses: BreadcrumbComponentCSSClasses;\n  templateProps: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n  createURL(value?: string | null): string;\n  refine(value?: string | null): void;\n  canRefine?: boolean;\n};\n\nconst Breadcrumb = ({\n  items,\n  cssClasses,\n  templateProps,\n  createURL,\n  refine,\n}: BreadcrumbProps) => (\n  <div\n    className={cx(\n      cssClasses.root,\n      items.length === 0 && cssClasses.noRefinementRoot\n    )}\n  >\n    <ul className={cssClasses.list}>\n      <li\n        className={cx(\n          cssClasses.item,\n          items.length === 0 && cssClasses.selectedItem\n        )}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"home\"\n          rootTagName=\"a\"\n          rootProps={{\n            className: cssClasses.link,\n            href: createURL(undefined),\n            onClick: (event: MouseEvent) => {\n              event.preventDefault();\n              refine(undefined);\n            },\n          }}\n        />\n      </li>\n\n      {items.map((item, idx) => {\n        const isLast = idx === items.length - 1;\n\n        return (\n          <li\n            key={item.label + idx}\n            className={cx(cssClasses.item, isLast && cssClasses.selectedItem)}\n          >\n            <Template\n              {...templateProps}\n              templateKey=\"separator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.separator,\n                'aria-hidden': true,\n              }}\n            />\n            {isLast ? (\n              item.label\n            ) : (\n              <a\n                className={cssClasses.link}\n                href={createURL(item.value)}\n                onClick={(event) => {\n                  event.preventDefault();\n                  refine(item.value);\n                }}\n              >\n                {item.label}\n              </a>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n\nexport default Breadcrumb;\n","import type { BreadcrumbComponentTemplates } from '../../components/Breadcrumb/Breadcrumb';\n\nconst defaultTemplates: BreadcrumbComponentTemplates = {\n  home() {\n    return 'Home';\n  },\n  separator() {\n    return '>';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport connectBreadcrumb from '../../connectors/breadcrumb/connectBreadcrumb';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  BreadcrumbComponentCSSClasses,\n  BreadcrumbComponentTemplates,\n} from '../../components/Breadcrumb/Breadcrumb';\nimport type {\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams,\n  BreadcrumbRenderState,\n} from '../../connectors/breadcrumb/connectBreadcrumb';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'breadcrumb' });\nconst suit = component('Breadcrumb');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: BreadcrumbComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n    };\n    templates: BreadcrumbTemplates;\n  }): Renderer<BreadcrumbRenderState, Partial<BreadcrumbWidgetParams>> =>\n  (\n    { canRefine, createURL, instantSearchInstance, items, refine },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Breadcrumb\n        canRefine={canRefine}\n        cssClasses={cssClasses}\n        createURL={createURL}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type BreadcrumbCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the items of the list. The items contains the link and the separator.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the selected item in the list: the last one or the home if there are no refinements.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to the separator.\n   */\n  separator: string | string[];\n\n  /**\n   * CSS class to add to the links in the items.\n   */\n  link: string | string[];\n}>;\n\nexport type BreadcrumbTemplates = Partial<{\n  /**\n   * Label of the breadcrumb's first element.\n   */\n  home: Template;\n\n  /**\n   * Symbol used to separate the elements of the breadcrumb.\n   */\n  separator: Template;\n}>;\n\nexport type BreadcrumbWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: BreadcrumbTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: BreadcrumbCSSClasses;\n};\n\nexport type BreadcrumbWidget = WidgetFactory<\n  BreadcrumbWidgetDescription & { $$widgetType: 'ais.breadcrumb' },\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetParams\n>;\n\nconst breadcrumb: BreadcrumbWidget = function breadcrumb(widgetParams) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectBreadcrumb(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attributes, separator, rootPath, transformItems }),\n    $$widgetType: 'ais.breadcrumb',\n  };\n};\n\nexport default breadcrumb;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ClearRefinementsRenderState } from '../../connectors/clear-refinements/connectClearRefinements';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  ClearRefinementsCSSClasses,\n  ClearRefinementsTemplates,\n} from '../../widgets/clear-refinements/clear-refinements';\n\nexport type ClearRefinementsComponentCSSClasses =\n  ComponentCSSClasses<ClearRefinementsCSSClasses>;\n\nexport type ClearRefinementsComponentTemplates =\n  Required<ClearRefinementsTemplates>;\n\nexport type ClearRefinementsProps = {\n  refine: ClearRefinementsRenderState['refine'];\n  cssClasses: ClearRefinementsComponentCSSClasses;\n  hasRefinements: ClearRefinementsRenderState['hasRefinements'];\n  templateProps: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n};\n\nconst ClearRefinements = ({\n  hasRefinements,\n  refine,\n  cssClasses,\n  templateProps,\n}: ClearRefinementsProps) => (\n  <div className={cssClasses.root}>\n    <Template\n      {...templateProps}\n      templateKey=\"resetLabel\"\n      rootTagName=\"button\"\n      rootProps={{\n        className: cx(\n          cssClasses.button,\n          !hasRefinements && cssClasses.disabledButton\n        ),\n        onClick: refine,\n        disabled: !hasRefinements,\n      }}\n      data={{ hasRefinements }}\n    />\n  </div>\n);\n\nexport default ClearRefinements;\n","import type { ClearRefinementsComponentTemplates } from '../../components/ClearRefinements/ClearRefinements';\n\nconst defaultTemplates: ClearRefinementsComponentTemplates = {\n  resetLabel() {\n    return 'Clear refinements';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport ClearRefinements from '../../components/ClearRefinements/ClearRefinements';\nimport connectClearRefinements from '../../connectors/clear-refinements/connectClearRefinements';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  ClearRefinementsComponentCSSClasses,\n  ClearRefinementsComponentTemplates,\n} from '../../components/ClearRefinements/ClearRefinements';\nimport type {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsRenderState,\n  ClearRefinementsWidgetDescription,\n} from '../../connectors/clear-refinements/connectClearRefinements';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n});\nconst suit = component('ClearRefinements');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ClearRefinementsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n    };\n    templates: ClearRefinementsTemplates;\n  }): Renderer<\n    ClearRefinementsRenderState,\n    Partial<ClearRefinementsWidgetParams>\n  > =>\n  ({ refine, canRefine, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <ClearRefinements\n        refine={refine}\n        cssClasses={cssClasses}\n        hasRefinements={canRefine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type ClearRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapper element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the button of the widget.\n   */\n  button: string | string[];\n\n  /**\n   * CSS class to add to the button when there are no refinements.\n   */\n  disabledButton: string | string[];\n}>;\n\nexport type ClearRefinementsTemplates = Partial<{\n  /**\n   * Template for the content of the button\n   */\n  resetLabel: Template<{ hasRefinements: boolean }>;\n}>;\n\nexport type ClearRefinementsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ClearRefinementsTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ClearRefinementsCSSClasses;\n};\n\nexport type ClearRefinementsWidget = WidgetFactory<\n  ClearRefinementsWidgetDescription & { $$widgetType: 'ais.clearRefinements' },\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetParams\n>;\n\nconst clearRefinements: ClearRefinementsWidget = (widgetParams) => {\n  const {\n    container,\n    templates = {},\n    includedAttributes,\n    excludedAttributes,\n    transformItems,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    disabledButton: cx(\n      suit({ descendantName: 'button', modifierName: 'disabled' }),\n      userCssClasses.disabledButton\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectClearRefinements(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      includedAttributes,\n      excludedAttributes,\n      transformItems,\n    }),\n    $$widgetType: 'ais.clearRefinements',\n  };\n};\n\nexport default clearRefinements;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { isSpecialClick, capitalize } from '../../lib/utils';\n\nimport type {\n  CurrentRefinementsConnectorParamsItem,\n  CurrentRefinementsConnectorParamsRefinement,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { CurrentRefinementsCSSClasses } from '../../widgets/current-refinements/current-refinements';\n\nexport type CurrentRefinementsComponentCSSClasses =\n  ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n\nexport type CurrentRefinementsProps = {\n  items: CurrentRefinementsConnectorParamsItem[];\n  cssClasses: CurrentRefinementsComponentCSSClasses;\n  canRefine: boolean;\n};\n\nconst createItemKey = ({\n  attribute,\n  value,\n  type,\n  operator,\n}: CurrentRefinementsConnectorParamsRefinement): string =>\n  [attribute, type, value, operator]\n    .map((key) => key)\n    .filter(Boolean)\n    .join(':');\n\nconst handleClick = (callback: () => void) => (event: any) => {\n  if (isSpecialClick(event)) {\n    return;\n  }\n\n  event.preventDefault();\n  callback();\n};\n\nconst CurrentRefinements = ({\n  items,\n  cssClasses,\n  canRefine,\n}: CurrentRefinementsProps) => (\n  <div\n    className={cx(cssClasses.root, !canRefine && cssClasses.noRefinementRoot)}\n  >\n    <ul className={cssClasses.list}>\n      {items.map((item, index) => (\n        <li\n          key={`${item.indexName}-${item.attribute}-${index}`}\n          className={cssClasses.item}\n        >\n          <span className={cssClasses.label}>{capitalize(item.label)}:</span>\n\n          {item.refinements.map((refinement) => (\n            <span\n              key={createItemKey(refinement)}\n              className={cssClasses.category}\n            >\n              <span className={cssClasses.categoryLabel}>\n                {refinement.attribute === 'query' ? (\n                  <q>{refinement.label}</q>\n                ) : (\n                  refinement.label\n                )}\n              </span>\n\n              <button\n                className={cssClasses.delete}\n                onClick={handleClick(item.refine.bind(null, refinement))}\n              >\n                ✕\n              </button>\n            </span>\n          ))}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default CurrentRefinements;\n","export function capitalize(text: string): string {\n  return text.toString().charAt(0).toUpperCase() + text.toString().slice(1);\n}\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { GeoSearchComponentTemplates } from './geo-search';\n\nconst defaultTemplates: GeoSearchComponentTemplates = {\n  HTMLMarker() {\n    return <p>Your custom HTML Marker</p>;\n  },\n  reset() {\n    return 'Clear the map refinement';\n  },\n  toggle() {\n    return 'Search as I move the map';\n  },\n  redo() {\n    return 'Redo search here';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, Fragment } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport GeoSearchButton from './GeoSearchButton';\nimport GeoSearchToggle from './GeoSearchToggle';\n\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  GeoSearchCSSClasses,\n  GeoSearchTemplates,\n} from '../../widgets/geo-search/geo-search';\n\ntype Props = {\n  cssClasses: ComponentCSSClasses<GeoSearchCSSClasses>;\n  enableRefine: boolean;\n  enableRefineControl: boolean;\n  enableClearMapRefinement: boolean;\n  isRefineOnMapMove: boolean;\n  isRefinedWithMap: boolean;\n  hasMapMoveSinceLastRefine: boolean;\n  onRefineToggle(event: Event): void;\n  onRefineClick(event: MouseEvent): void;\n  onClearClick(event: MouseEvent): void;\n  templateProps: PreparedTemplateProps<GeoSearchTemplates>;\n};\n\nconst GeoSearchControls = ({\n  cssClasses,\n  enableRefine,\n  enableRefineControl,\n  enableClearMapRefinement,\n  isRefineOnMapMove,\n  isRefinedWithMap,\n  hasMapMoveSinceLastRefine,\n  onRefineToggle,\n  onRefineClick,\n  onClearClick,\n  templateProps,\n}: Props) => (\n  <Fragment>\n    {enableRefine && (\n      <div>\n        {enableRefineControl && (\n          <div className={cssClasses.control}>\n            {isRefineOnMapMove || !hasMapMoveSinceLastRefine ? (\n              <GeoSearchToggle\n                classNameLabel={cx(\n                  cssClasses.label,\n                  isRefineOnMapMove && cssClasses.selectedLabel\n                )}\n                classNameInput={cssClasses.input}\n                checked={isRefineOnMapMove}\n                onToggle={onRefineToggle}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"toggle\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchToggle>\n            ) : (\n              <GeoSearchButton\n                className={cssClasses.redo}\n                disabled={!hasMapMoveSinceLastRefine}\n                onClick={onRefineClick}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"redo\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchButton>\n            )}\n          </div>\n        )}\n\n        {!enableRefineControl && !isRefineOnMapMove && (\n          <div className={cssClasses.control}>\n            <GeoSearchButton\n              className={cx(\n                cssClasses.redo,\n                !hasMapMoveSinceLastRefine && cssClasses.disabledRedo\n              )}\n              disabled={!hasMapMoveSinceLastRefine}\n              onClick={onRefineClick}\n            >\n              <Template\n                {...templateProps}\n                templateKey=\"redo\"\n                rootTagName=\"span\"\n              />\n            </GeoSearchButton>\n          </div>\n        )}\n\n        {enableClearMapRefinement && isRefinedWithMap && (\n          <GeoSearchButton className={cssClasses.reset} onClick={onClearClick}>\n            <Template\n              {...templateProps}\n              templateKey=\"reset\"\n              rootTagName=\"span\"\n            />\n          </GeoSearchButton>\n        )}\n      </div>\n    )}\n  </Fragment>\n);\n\nexport default GeoSearchControls;\n","// global for TypeScript alone\n/* global google */\nimport { cx } from '@algolia/ui-components-shared';\nimport { render } from 'preact';\n\nimport connectGeoSearch from '../../connectors/geo-search/connectGeoSearch';\nimport { component } from '../../lib/suit';\nimport { renderTemplate } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport createHTMLMarker from './createHTMLMarker';\nimport defaultTemplates from './defaultTemplates';\nimport renderer from './GeoSearchRenderer';\n\nimport type {\n  GeoSearchConnectorParams,\n  GeoSearchWidgetDescription,\n  GeoHit,\n} from '../../connectors/geo-search/connectGeoSearch';\nimport type { GeoLoc, Template, WidgetFactory } from '../../types';\nimport type { HTMLMarkerArguments } from './createHTMLMarker';\n\nexport type CreateMarker = (args: {\n  item: GeoHit;\n  map: google.maps.Map;\n}) => google.maps.OverlayView | google.maps.Marker;\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'geo-search' });\nconst suit = component('GeoSearch');\n\nexport type GeoSearchTemplates = Partial<{\n  /** Template to use for the marker. */\n  HTMLMarker: Template<GeoHit>;\n  /** Template for the reset button. */\n  reset: Template;\n  /** Template for the toggle label. */\n  toggle: Template;\n  /** Template for the redo button. */\n  redo: Template;\n}>;\n\nexport type GeoSearchComponentTemplates = Required<GeoSearchTemplates>;\n\nexport type GeoSearchCSSClasses = Partial<{\n  /** The root div of the widget. */\n  root: string | string[];\n  /** The map container of the widget. */\n  map: string | string[];\n  /** The control element of the widget. */\n  control: string | string[];\n  /** The label of the control element. */\n  label: string | string[];\n  /** The selected label of the control element. */\n  selectedLabel: string | string[];\n  /** The input of the control element. */\n  input: string | string[];\n  /** The redo search button. */\n  redo: string | string[];\n  /** The disabled redo search button. */\n  disabledRedo: string | string[];\n  /** The reset refinement button. */\n  reset: string | string[];\n}>;\n\nexport type GeoSearchMarker<TOptions> = {\n  /**\n   * Function used to create the options passed to the Google Maps marker.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MarkerOptions\n   */\n  createOptions?(item: GeoHit): TOptions;\n  /**\n   * Object that takes an event type (ex: `click`, `mouseover`) as key and a\n   * listener as value. The listener is provided with an object that contains:\n   * `event`, `item`, `marker`, `map`.\n   */\n  events: {\n    [key: string]: (event: {\n      item: any;\n      marker: any;\n      map: any;\n      event: any;\n    }) => void;\n  };\n};\n\nexport type GeoSearchWidgetParams = {\n  /**\n   * By default the map will set the zoom accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we\n   * need to provide a zoom to render the map.\n   * @default 1\n   */\n  initialZoom?: number;\n  /**\n   * By default the map will set the position accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we need\n   * to provide a position to render the map. This option is ignored when the `position`\n   * is provided.\n   * @default { lat: 0, lng: 0 }\n   */\n  initialPosition?: GeoLoc;\n  /** Templates to use for the widget. */\n  templates?: GeoSearchTemplates;\n  /** CSS classes to add to the wrapping elements. */\n  cssClasses?: GeoSearchCSSClasses;\n  /**\n   * Options for customize the built-in Google Maps marker. This option is\n   * ignored when the `customHTMLMarker` is provided.\n   */\n  builtInMarker?: Partial<GeoSearchMarker<google.maps.MarkerOptions>>;\n  /**\n   * Options to customize the HTML marker. We provide an alternative to the\n   * built-in Google Maps marker in order to have a full control of the marker\n   * rendering. You can use plain HTML to build your marker.\n   */\n  customHTMLMarker?:\n    | Partial<GeoSearchMarker<Partial<HTMLMarkerArguments>>>\n    | boolean;\n  /**\n   * If true, the map is used to search - otherwise it's for display purposes only.\n   * @default true\n   */\n  enableRefine?: boolean;\n  /**\n   * If true, a button is displayed on the map when the refinement is coming from\n   * the map in order to remove it.\n   * @default true\n   */\n  enableClearMapRefinement?: boolean;\n  /**\n   * If true, the user can toggle the option `enableRefineOnMapMove` directly from the map.\n   * @default true\n   */\n  enableRefineControl?: boolean;\n  /**\n   * Option forwarded to the Google Maps constructor.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MapOptions\n   */\n  mapOptions?: google.maps.MapOptions;\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Reference to the global `window.google` object.\n   * See [the documentation](https://developers.google.com/maps/documentation/javascript/tutorial) for more information.\n   */\n  googleReference: typeof window['google'];\n};\n\nexport type GeoSearchWidget = WidgetFactory<\n  GeoSearchWidgetDescription & { $$widgetType: 'ais.geoSearch' },\n  GeoSearchConnectorParams,\n  GeoSearchWidgetParams\n>;\n\n/**\n * The **GeoSearch** widget displays the list of results from the search on a Google Maps. It also provides a way to search for results based on their position. The widget also provide some of the common GeoSearch patterns like search on map interaction.\n *\n * @requirements\n *\n * Note that the GeoSearch widget uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be displayed on the map.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n *\n * You are also responsible for loading the Google Maps library, it's not shipped with InstantSearch. You need to load the Google Maps library and pass a reference to the widget. You can find more information about how to install the library in [the Google Maps documentation](https://developers.google.com/maps/documentation/javascript/tutorial).\n *\n * Don't forget to explicitly set the `height` of the map container (default class `.ais-geo-search--map`), otherwise it won't be shown (it's a requirement of Google Maps).\n */\nconst geoSearch: GeoSearchWidget = (widgetParams) => {\n  const {\n    initialZoom = 1,\n    initialPosition = { lat: 0, lng: 0 },\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    builtInMarker: userBuiltInMarker = {},\n    customHTMLMarker: userCustomHTMLMarker,\n    enableRefine = true,\n    enableClearMapRefinement = true,\n    enableRefineControl = true,\n    container,\n    googleReference,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  const defaultBuiltInMarker: GeoSearchMarker<google.maps.MarkerOptions> = {\n    createOptions: () => ({}),\n    events: {},\n  };\n\n  const defaultCustomHTMLMarker: GeoSearchMarker<Partial<HTMLMarkerArguments>> =\n    {\n      createOptions: () => ({}),\n      events: {},\n    };\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (!googleReference) {\n    throw new Error(withUsage('The `googleReference` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    // Required only to mount / unmount the Preact tree\n    tree: suit({ descendantName: 'tree' }),\n    map: cx(suit({ descendantName: 'map' }), userCssClasses.map),\n    control: cx(suit({ descendantName: 'control' }), userCssClasses.control),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    selectedLabel: cx(\n      suit({ descendantName: 'label', modifierName: 'selected' }),\n      userCssClasses.selectedLabel\n    ),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    redo: cx(suit({ descendantName: 'redo' }), userCssClasses.redo),\n    disabledRedo: cx(\n      suit({ descendantName: 'redo', modifierName: 'disabled' }),\n      userCssClasses.disabledRedo\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const builtInMarker = {\n    ...defaultBuiltInMarker,\n    ...userBuiltInMarker,\n  };\n\n  const isCustomHTMLMarker =\n    Boolean(userCustomHTMLMarker) || Boolean(userTemplates.HTMLMarker);\n\n  const customHTMLMarker = isCustomHTMLMarker && {\n    ...defaultCustomHTMLMarker,\n    ...(userCustomHTMLMarker as Partial<\n      GeoSearchMarker<Partial<HTMLMarkerArguments>>\n    >),\n  };\n\n  const createBuiltInMarker: CreateMarker = ({ item, ...rest }) =>\n    new googleReference.maps.Marker({\n      ...builtInMarker.createOptions!(item),\n      ...rest,\n      // @ts-expect-error @types/googlemaps doesn't document this\n      __id: item.objectID,\n      position: item._geoloc,\n    });\n\n  const HTMLMarker = createHTMLMarker(googleReference);\n  const createCustomHTMLMarker: CreateMarker = ({ item, ...rest }) =>\n    new HTMLMarker({\n      // this is only called when customHTMLMarker is defined\n      ...(customHTMLMarker as GeoSearchMarker<Partial<HTMLMarkerArguments>>)\n        .createOptions!(item),\n      ...rest,\n      __id: item.objectID,\n      position: item._geoloc,\n      className: cx(suit({ descendantName: 'marker' })),\n      template: renderTemplate({\n        templateKey: 'HTMLMarker',\n        templates,\n        data: item,\n      }),\n    });\n\n  const createMarker = !customHTMLMarker\n    ? createBuiltInMarker\n    : createCustomHTMLMarker;\n\n  const markerOptions = !customHTMLMarker ? builtInMarker : customHTMLMarker;\n\n  const makeWidget = connectGeoSearch(renderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      ...otherWidgetParams,\n      renderState: {},\n      container: containerNode,\n      googleReference,\n      initialZoom,\n      initialPosition,\n      templates,\n      cssClasses,\n      createMarker,\n      markerOptions,\n      enableRefine,\n      enableClearMapRefinement,\n      enableRefineControl,\n    }),\n    $$widgetType: 'ais.geoSearch',\n  };\n};\n\nexport default geoSearch;\n","/** @jsx h */\n\nimport { h, createRef, Component } from 'preact';\n\nimport { noop } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  SearchBoxCSSClasses,\n  SearchBoxTemplates,\n} from '../../widgets/search-box/search-box';\n\nexport type SearchBoxComponentCSSClasses =\n  ComponentCSSClasses<SearchBoxCSSClasses>;\n\nexport type SearchBoxComponentTemplates = Required<SearchBoxTemplates>;\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  cssClasses: SearchBoxComponentCSSClasses;\n  templates: SearchBoxComponentTemplates;\n  query?: string;\n  showSubmit?: boolean;\n  showReset?: boolean;\n  showLoadingIndicator?: boolean;\n  refine?: (value: string) => void;\n  autofocus?: boolean;\n  searchAsYouType?: boolean;\n  isSearchStalled?: boolean;\n  disabled?: boolean;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onReset?: (event: Event) => void;\n};\n\nconst defaultProps = {\n  query: '',\n  showSubmit: true,\n  showReset: true,\n  showLoadingIndicator: true,\n  autofocus: false,\n  searchAsYouType: true,\n  isSearchStalled: false,\n  disabled: false,\n  onChange: noop,\n  onSubmit: noop,\n  onReset: noop,\n  refine: noop,\n};\n\ntype SearchBoxPropsWithDefaultProps = SearchBoxProps &\n  Readonly<typeof defaultProps>;\n\ntype SearchBoxState = {\n  query: string;\n  focused: boolean;\n};\n\nclass SearchBox extends Component<\n  SearchBoxPropsWithDefaultProps,\n  SearchBoxState\n> {\n  public static defaultProps = defaultProps;\n\n  public state = {\n    query: this.props.query,\n    focused: false,\n  };\n\n  private input = createRef<HTMLInputElement>();\n\n  /**\n   * This public method is used in the RefinementList SFFV search box\n   * to reset the input state when an item is selected.\n   *\n   * @see RefinementList#componentWillReceiveProps\n   * @return {undefined}\n   */\n  public resetInput() {\n    this.setState({ query: '' });\n  }\n\n  private onInput = (event: Event) => {\n    const { searchAsYouType, refine, onChange } = this.props;\n    const query = (event.target as HTMLInputElement).value;\n\n    if (searchAsYouType) {\n      refine(query);\n    }\n    this.setState({ query });\n\n    onChange(event);\n  };\n\n  public componentWillReceiveProps(nextProps: SearchBoxPropsWithDefaultProps) {\n    /**\n     * when the user is typing, we don't want to replace the query typed\n     * by the user (state.query) with the query exposed by the connector (props.query)\n     * see: https://github.com/algolia/instantsearch.js/issues/4141\n     */\n    if (!this.state.focused && nextProps.query !== this.state.query) {\n      this.setState({ query: nextProps.query });\n    }\n  }\n\n  private onSubmit = (event: Event) => {\n    const { searchAsYouType, refine, onSubmit } = this.props;\n\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.input.current) {\n      this.input.current.blur();\n    }\n\n    if (!searchAsYouType) {\n      refine(this.state.query);\n    }\n\n    onSubmit(event);\n\n    return false;\n  };\n\n  private onReset = (event: Event) => {\n    const { refine, onReset } = this.props;\n    const query = '';\n\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n\n    refine(query);\n    this.setState({ query });\n\n    onReset(event);\n  };\n\n  private onBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  private onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  public render() {\n    const {\n      cssClasses,\n      placeholder,\n      autofocus,\n      showSubmit,\n      showReset,\n      showLoadingIndicator,\n      templates,\n      isSearchStalled,\n    } = this.props;\n\n    return (\n      <div className={cssClasses.root}>\n        <form\n          action=\"\"\n          role=\"search\"\n          className={cssClasses.form}\n          noValidate\n          onSubmit={this.onSubmit}\n          onReset={this.onReset}\n        >\n          <input\n            ref={this.input}\n            value={this.state.query}\n            disabled={this.props.disabled}\n            className={cssClasses.input}\n            type=\"search\"\n            placeholder={placeholder}\n            autoFocus={autofocus}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            // @ts-expect-error `spellCheck` attribute is missing in preact JSX types\n            spellCheck=\"false\"\n            maxLength={512}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n\n          <Template\n            templateKey=\"submit\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.submit,\n              type: 'submit',\n              title: 'Submit the search query.',\n              hidden: !showSubmit,\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          <Template\n            templateKey=\"reset\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.reset,\n              type: 'reset',\n              title: 'Clear the search query.',\n              hidden: !(\n                showReset &&\n                this.state.query.trim() &&\n                !isSearchStalled\n              ),\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          {showLoadingIndicator && (\n            <Template\n              templateKey=\"loadingIndicator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.loadingIndicator,\n                hidden: !isSearchStalled,\n              }}\n              templates={templates}\n              data={{ cssClasses }}\n            />\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { JSX } from 'preact';\n\nexport type RefinementListItemProps = {\n  facetValueToRefine: string;\n  handleClick: (args: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) => void;\n  isRefined: boolean;\n  subItems?: JSX.Element;\n  templateData: Record<string, any>;\n  templateKey: string;\n  templateProps?: Record<string, any>;\n  className: string;\n};\n\nfunction RefinementListItem({\n  className,\n  handleClick,\n  facetValueToRefine,\n  isRefined,\n  templateProps,\n  templateKey,\n  templateData,\n  subItems,\n}: RefinementListItemProps) {\n  return (\n    <li\n      className={className}\n      onClick={(originalEvent) => {\n        handleClick({\n          facetValueToRefine,\n          isRefined,\n          originalEvent,\n        });\n      }}\n    >\n      {/* @MAJOR ensure conformity with InstantSearch.css specs */}\n      <Template\n        {...templateProps}\n        templateKey={templateKey}\n        data={templateData}\n      />\n      {subItems}\n    </li>\n  );\n}\n\nexport default RefinementListItem;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, createRef, Component } from 'preact';\n\nimport { isSpecialClick, isEqual } from '../../lib/utils';\nimport SearchBox from '../SearchBox/SearchBox';\nimport Template from '../Template/Template';\n\nimport RefinementListItem from './RefinementListItem';\n\nimport type { HierarchicalMenuItem } from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses, CreateURL, Templates } from '../../types';\nimport type { HierarchicalMenuComponentCSSClasses } from '../../widgets/hierarchical-menu/hierarchical-menu';\nimport type { RatingMenuComponentCSSClasses } from '../../widgets/rating-menu/rating-menu';\nimport type { RefinementListOwnCSSClasses } from '../../widgets/refinement-list/refinement-list';\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../SearchBox/SearchBox';\nimport type { JSX } from 'preact';\n\n// CSS types\ntype RefinementListOptionalClasses =\n  | 'noResults'\n  | 'checkbox'\n  | 'labelText'\n  | 'showMore'\n  | 'disabledShowMore'\n  | 'searchBox'\n  | 'count';\n\ntype RefinementListWidgetCSSClasses =\n  ComponentCSSClasses<RefinementListOwnCSSClasses>;\n\ntype RefinementListRequiredCSSClasses = Omit<\n  RefinementListWidgetCSSClasses,\n  RefinementListOptionalClasses\n> &\n  Partial<Pick<RefinementListWidgetCSSClasses, RefinementListOptionalClasses>>;\n\nexport type RefinementListComponentCSSClasses =\n  RefinementListRequiredCSSClasses & {\n    searchable?: SearchBoxComponentCSSClasses;\n  } & Partial<Pick<RatingMenuComponentCSSClasses, 'disabledItem'>> &\n    Partial<\n      Pick<HierarchicalMenuComponentCSSClasses, 'childList' | 'parentItem'>\n    >;\n\ntype FacetValue = {\n  value: string;\n  label: string;\n  highlighted?: string;\n  count?: number;\n  isRefined: boolean;\n  data?: HierarchicalMenuItem[] | null;\n};\n\nexport type RefinementListProps<TTemplates extends Templates> = {\n  createURL: CreateURL<string>;\n  cssClasses: RefinementListComponentCSSClasses;\n  depth?: number;\n  facetValues?: FacetValue[];\n  attribute?: string;\n  templateProps: PreparedTemplateProps<TTemplates>;\n  toggleRefinement: (value: string) => void;\n  showMore?: boolean;\n  toggleShowMore?: () => void;\n  isShowingMore?: boolean;\n  hasExhaustiveItems?: boolean;\n  canToggleShowMore?: boolean;\n  className?: string;\n  children?: JSX.Element;\n\n  // searchable props are optional, but will definitely be present in a searchable context\n  isFromSearch?: boolean;\n  searchIsAlwaysActive?: boolean;\n  searchFacetValues?: (query: string) => void;\n  searchPlaceholder?: string;\n  searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n};\n\nconst defaultProps = {\n  cssClasses: {},\n  depth: 0,\n};\n\ntype RefinementListPropsWithDefaultProps<TTemplates extends Templates> =\n  RefinementListProps<TTemplates> & Readonly<typeof defaultProps>;\n\ntype RefinementListItemTemplateData<TTemplates extends Templates> =\n  FacetValue & {\n    url: string;\n  } & Pick<\n      RefinementListProps<TTemplates>,\n      'attribute' | 'cssClasses' | 'isFromSearch'\n    >;\n\nfunction isHierarchicalMenuItem(\n  facetValue: FacetValue\n): facetValue is HierarchicalMenuItem {\n  return (facetValue as HierarchicalMenuItem).data !== undefined;\n}\n\nclass RefinementList<TTemplates extends Templates> extends Component<\n  RefinementListPropsWithDefaultProps<TTemplates>\n> {\n  public static defaultProps = defaultProps;\n\n  private searchBox = createRef<SearchBox>();\n\n  public constructor(props: RefinementListPropsWithDefaultProps<TTemplates>) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  public shouldComponentUpdate(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    const areFacetValuesDifferent = !isEqual(\n      this.props.facetValues,\n      nextProps.facetValues\n    );\n\n    return areFacetValuesDifferent;\n  }\n\n  private refine(facetValueToRefine: string) {\n    this.props.toggleRefinement(facetValueToRefine);\n  }\n\n  private _generateFacetItem(facetValue: FacetValue) {\n    let subItems;\n    if (\n      isHierarchicalMenuItem(facetValue) &&\n      Array.isArray(facetValue.data) &&\n      facetValue.data.length > 0\n    ) {\n      const { root, ...cssClasses } = this.props.cssClasses;\n\n      subItems = (\n        <RefinementList\n          {...this.props}\n          // We want to keep `root` required for external usage but not for the\n          // sub items.\n          cssClasses={cssClasses as RefinementListComponentCSSClasses}\n          depth={this.props.depth + 1}\n          facetValues={facetValue.data}\n          showMore={false}\n          className={this.props.cssClasses.childList}\n        />\n      );\n    }\n\n    const url = this.props.createURL(facetValue.value);\n    const templateData: RefinementListItemTemplateData<TTemplates> = {\n      ...facetValue,\n      url,\n      attribute: this.props.attribute,\n      cssClasses: this.props.cssClasses,\n      isFromSearch: this.props.isFromSearch,\n    };\n\n    let { value: key } = facetValue;\n    if (facetValue.isRefined !== undefined) {\n      key += `/${facetValue.isRefined}`;\n    }\n\n    if (facetValue.count !== undefined) {\n      key += `/${facetValue.count}`;\n    }\n\n    const refinementListItemClassName = cx(\n      this.props.cssClasses.item,\n      facetValue.isRefined && this.props.cssClasses.selectedItem,\n      !facetValue.count && this.props.cssClasses.disabledItem,\n      Boolean(\n        isHierarchicalMenuItem(facetValue) &&\n          Array.isArray(facetValue.data) &&\n          facetValue.data.length > 0\n      ) && this.props.cssClasses.parentItem!\n    );\n\n    return (\n      <RefinementListItem\n        templateKey=\"item\"\n        key={key}\n        facetValueToRefine={facetValue.value}\n        handleClick={this.handleItemClick}\n        isRefined={facetValue.isRefined}\n        className={refinementListItemClassName}\n        subItems={subItems}\n        templateData={templateData}\n        templateProps={this.props.templateProps}\n      />\n    );\n  }\n\n  // Click events on DOM tree like LABEL > INPUT will result in two click events\n  // instead of one.\n  // No matter the framework, see https://www.google.com/search?q=click+label+twice\n  //\n  // Thus making it hard to distinguish activation from deactivation because both click events\n  // are very close. Debounce is a solution but hacky.\n  //\n  // So the code here checks if the click was done on or in a LABEL. If this LABEL\n  // has a checkbox inside, we ignore the first click event because we will get another one.\n  //\n  // We also check if the click was done inside a link and then e.preventDefault() because we already\n  // handle the url\n  //\n  // Finally, we always stop propagation of the event to avoid multiple levels RefinementLists to fail: click\n  // on child would click on parent also\n  private handleItemClick({\n    facetValueToRefine,\n    isRefined,\n    originalEvent,\n  }: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) {\n    if (isSpecialClick(originalEvent)) {\n      // do not alter the default browser behavior\n      // if one special key is down\n      return;\n    }\n\n    if (\n      !(originalEvent.target instanceof HTMLElement) ||\n      !(originalEvent.target.parentNode instanceof HTMLElement)\n    ) {\n      return;\n    }\n\n    if (\n      isRefined &&\n      originalEvent.target.parentNode.querySelector(\n        'input[type=\"radio\"]:checked'\n      )\n    ) {\n      // Prevent refinement for being reset if the user clicks on an already checked radio button\n      return;\n    }\n\n    if (originalEvent.target.tagName === 'INPUT') {\n      this.refine(facetValueToRefine);\n      return;\n    }\n\n    let parent = originalEvent.target;\n\n    while (parent !== originalEvent.currentTarget) {\n      if (\n        parent.tagName === 'LABEL' &&\n        (parent.querySelector('input[type=\"checkbox\"]') ||\n          parent.querySelector('input[type=\"radio\"]'))\n      ) {\n        return;\n      }\n\n      if (parent.tagName === 'A' && (parent as HTMLAnchorElement).href) {\n        originalEvent.preventDefault();\n      }\n\n      parent = parent.parentNode as HTMLElement;\n    }\n\n    originalEvent.stopPropagation();\n\n    this.refine(facetValueToRefine);\n  }\n\n  public componentWillReceiveProps(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    if (this.searchBox.current && !nextProps.isFromSearch) {\n      this.searchBox.current.resetInput();\n    }\n  }\n\n  private refineFirstValue() {\n    const firstValue = this.props.facetValues && this.props.facetValues[0];\n    if (firstValue) {\n      const actualValue = firstValue.value;\n      this.props.toggleRefinement(actualValue);\n    }\n  }\n\n  public render() {\n    const showMoreButtonClassName = cx(\n      this.props.cssClasses.showMore,\n      !(this.props.showMore === true && this.props.canToggleShowMore) &&\n        this.props.cssClasses.disabledShowMore\n    );\n\n    const showMoreButton = this.props.showMore === true && (\n      <Template\n        {...this.props.templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: showMoreButtonClassName,\n          disabled: !this.props.canToggleShowMore,\n          onClick: this.props.toggleShowMore,\n        }}\n        data={{\n          isShowingMore: this.props.isShowingMore,\n        }}\n      />\n    );\n\n    const shouldDisableSearchBox =\n      this.props.searchIsAlwaysActive !== true &&\n      !(this.props.isFromSearch || !this.props.hasExhaustiveItems);\n\n    const searchBox = this.props.searchFacetValues && (\n      <div className={this.props.cssClasses.searchBox}>\n        <SearchBox\n          ref={this.searchBox}\n          placeholder={this.props.searchPlaceholder}\n          disabled={shouldDisableSearchBox}\n          cssClasses={this.props.cssClasses.searchable!}\n          templates={this.props.searchBoxTemplateProps!.templates}\n          onChange={(event: Event) =>\n            this.props.searchFacetValues!(\n              (event.target as HTMLInputElement).value\n            )\n          }\n          onReset={() => this.props.searchFacetValues!('')}\n          onSubmit={() => this.refineFirstValue()}\n          // This sets the search box to a controlled state because\n          // we don't rely on the `refine` prop but on `onChange`.\n          searchAsYouType={false}\n        />\n      </div>\n    );\n\n    const facetValues = this.props.facetValues &&\n      this.props.facetValues.length > 0 && (\n        <ul className={this.props.cssClasses.list}>\n          {this.props.facetValues.map(this._generateFacetItem, this)}\n        </ul>\n      );\n\n    const noResults = this.props.searchFacetValues &&\n      this.props.isFromSearch &&\n      (!this.props.facetValues || this.props.facetValues.length === 0) && (\n        <Template\n          {...this.props.templateProps}\n          templateKey=\"searchableNoResults\"\n          rootProps={{ className: this.props.cssClasses.noResults }}\n        />\n      );\n\n    const rootClassName = cx(\n      this.props.cssClasses.root,\n      (!this.props.facetValues || this.props.facetValues.length === 0) &&\n        this.props.cssClasses.noRefinementRoot,\n      this.props.className\n    );\n\n    return (\n      <div className={rootClassName}>\n        {this.props.children}\n        {searchBox}\n        {facetValues}\n        {noResults}\n        {showMoreButton}\n      </div>\n    );\n  }\n}\n\nexport default RefinementList;\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type { HierarchicalMenuComponentTemplates } from './hierarchical-menu';\n\nconst defaultTemplates: HierarchicalMenuComponentTemplates = {\n  item({ url, label, count, cssClasses, isRefined }) {\n    return (\n      <a\n        className={cx(\n          cx(cssClasses.link),\n          cx(isRefined ? cssClasses.selectedItemLink : undefined)\n        )}\n        href={url}\n      >\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectHierarchicalMenu from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  HierarchicalMenuItem,\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuRenderState,\n  HierarchicalMenuWidgetDescription,\n} from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  TransformItems,\n  Template,\n  WidgetFactory,\n  RendererOptions,\n  SortBy,\n  ComponentCSSClasses,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n});\nconst suit = component('HierarchicalMenu');\n\ntype HierarchicalMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    label: string;\n    cssClasses: HierarchicalMenuCSSClasses;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n}>;\n\nexport type HierarchicalMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to the child list element.\n   */\n  childList: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each parent item element.\n   */\n  parentItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to the link of each selected item element (when using the default template).\n   */\n  selectedItemLink: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more element.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type HierarchicalMenuComponentCSSClasses =\n  ComponentCSSClasses<HierarchicalMenuCSSClasses>;\n\nexport type HierarchicalMenuComponentTemplates =\n  Required<HierarchicalMenuTemplates>;\n\nexport type HierarchicalMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n  /**\n   * Show the siblings of the selected parent level of the current refined value.\n   *\n   * With `showParentLevel` set to `true` (default):\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   *     - lvl2\n   *     - lvl2\n   *   - lvl 1\n   *   - lvl 1\n   * - Parent lvl0\n   * - Parent lvl0\n   *\n   * With `showParentLevel` set to `false`:\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   * - Parent lvl0\n   * - Parent lvl0\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   * does not impact the root level.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<HierarchicalMenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HierarchicalMenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: HierarchicalMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    cssClasses,\n    containerNode,\n    showMore,\n    templates,\n    renderState,\n  }: {\n    cssClasses: HierarchicalMenuComponentCSSClasses;\n    containerNode: HTMLElement;\n    showMore: boolean;\n    templates: HierarchicalMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HierarchicalMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      createURL,\n      items,\n      refine,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: HierarchicalMenuRenderState &\n      RendererOptions<HierarchicalMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        showMore={showMore}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The hierarchical menu widget is used to create a navigation based on a hierarchy of facet attributes.\n *\n * It is commonly used for categories with subcategories.\n *\n * All attributes (lvl0, lvl1 here) must be declared as [attributes for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting) in your\n * Algolia settings.\n *\n * By default, the separator we expect is ` > ` (with spaces) but you can use\n * a different one by using the `separator` option.\n * @requirements\n * Your objects must be formatted in a specific way to be\n * able to display hierarchical menus. Here's an example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": \"fruits\",\n *     \"lvl1\": \"fruits > citrus\"\n *   }\n * }\n * ```\n *\n * Every level must be specified entirely.\n * It's also possible to have multiple values per level, for example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": [\"fruits\", \"vitamins\"],\n *     \"lvl1\": [\"fruits > citrus\", \"vitamins > C\"]\n *   }\n * }\n * ```\n * @type {WidgetFactory}\n * @devNovel HierarchicalMenu\n * @category filter\n * @param {HierarchicalMenuWidgetParams} widgetParams The HierarchicalMenu widget options.\n * @return {Widget} A new HierarchicalMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.hierarchicalMenu({\n *     container: '#hierarchical-categories',\n *     attributes: ['hierarchicalCategories.lvl0', 'hierarchicalCategories.lvl1', 'hierarchicalCategories.lvl2'],\n *   })\n * ]);\n */\nexport type HierarchicalMenuWidget = WidgetFactory<\n  HierarchicalMenuWidgetDescription & { $$widgetType: 'ais.hierarchicalMenu' },\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetParams\n>;\n\nconst hierarchicalMenu: HierarchicalMenuWidget = function hierarchicalMenu(\n  widgetParams\n) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    showParentLevel,\n    limit,\n    showMore = false,\n    showMoreLimit,\n    sortBy,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    childList: cx(\n      suit({ descendantName: 'list', modifierName: 'child' }),\n      userCssClasses.childList\n    ),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    parentItem: cx(\n      suit({ descendantName: 'item', modifierName: 'parent' }),\n      userCssClasses.parentItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    selectedItemLink: cx(\n      suit({ descendantName: 'link', modifierName: 'selected' }),\n      userCssClasses.selectedItemLink\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    cssClasses,\n    containerNode,\n    templates,\n    showMore,\n    renderState: {},\n  });\n\n  const makeWidget = connectHierarchicalMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributes,\n      separator,\n      rootPath,\n      showParentLevel,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.hierarchicalMenu',\n  };\n};\n\nexport default hierarchicalMenu;\n","import { omit } from '../../lib/utils';\n\nimport type { HitsComponentTemplates } from '../../components/Hits/Hits';\n\nconst defaultTemplates: HitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  item(data) {\n    return JSON.stringify(omit(data, ['__hitIndex']), null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Hits from '../../components/Hits/Hits';\nimport connectHits from '../../connectors/hits/connectHits';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  HitsComponentCSSClasses,\n  HitsComponentTemplates,\n} from '../../components/Hits/Hits';\nimport type {\n  HitsConnectorParams,\n  HitsRenderState,\n  HitsWidgetDescription,\n} from '../../connectors/hits/connectHits';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  WidgetFactory,\n  Renderer,\n  InsightsClient,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'hits' });\nconst suit = component('Hits');\nconst HitsWithInsightsListener = withInsightsListener(Hits);\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: HitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HitsComponentTemplates>;\n    };\n    templates: HitsTemplates;\n  }): Renderer<HitsRenderState, Partial<HitsWidgetParams>> =>\n  (\n    {\n      hits: receivedHits,\n      results,\n      instantSearchInstance,\n      insights,\n      bindEvent,\n      sendEvent,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <HitsWithInsightsListener\n        cssClasses={cssClasses}\n        hits={receivedHits}\n        results={results}\n        templateProps={renderState.templateProps}\n        insights={insights as InsightsClient}\n        sendEvent={sendEvent}\n        bindEvent={bindEvent}\n      />,\n      containerNode\n    );\n  };\n\nexport type HitsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type HitsTemplates = Partial<{\n  /**\n   * Template to use when there are no results.\n   *\n   * @default 'No Results'\n   */\n  empty: Template<SearchResults>;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   *\n   * @default ''\n   */\n  item: TemplateWithBindEvent<\n    Hit & {\n      /** @deprecated the index in the hits array, use __position instead, which is the absolute position */\n      __hitIndex: number;\n    }\n  >;\n}>;\n\nexport type HitsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HitsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: HitsCSSClasses;\n};\n\nexport type HitsWidget = WidgetFactory<\n  HitsWidgetDescription & { $$widgetType: 'ais.hits' },\n  HitsConnectorParams,\n  HitsWidgetParams\n>;\n\nconst hits: HitsWidget = function hits(widgetParams) {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = withInsights(connectHits)(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ escapeHTML, transformItems }),\n    $$widgetType: 'ais.hits',\n  };\n};\n\nexport default hits;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { warning } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type { HitsCSSClasses, HitsTemplates } from '../../widgets/hits/hits';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nexport type HitsComponentCSSClasses = ComponentCSSClasses<HitsCSSClasses>;\nexport type HitsComponentTemplates = Required<HitsTemplates>;\n\nexport type HitsProps = {\n  results: SearchResults;\n  hits: Hit[];\n  sendEvent?: SendEventForHits;\n  bindEvent?: BindEventForHits;\n  cssClasses: HitsComponentCSSClasses;\n  templateProps: PreparedTemplateProps<HitsComponentTemplates>;\n};\n\nconst Hits = ({\n  results,\n  hits,\n  bindEvent,\n  sendEvent,\n  cssClasses,\n  templateProps,\n}: HitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      <ol className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              get __hitIndex() {\n                warning(\n                  false,\n                  'The `__hitIndex` property is deprecated. Use the absolute `__position` instead.'\n                );\n                return index;\n              },\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Hits;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nexport type SelectorOption = {\n  value?: string | number;\n  label: string;\n};\n\nexport type SelectorComponentCSSClasses = {\n  root: string;\n  select: string;\n  option: string;\n};\n\nexport type SelectorProps = {\n  cssClasses: SelectorComponentCSSClasses;\n  currentValue?: string | number;\n  options: SelectorOption[];\n  setValue(value: SelectorOption['value']): void;\n};\n\nfunction Selector({\n  currentValue,\n  options,\n  cssClasses,\n  setValue,\n}: SelectorProps) {\n  return (\n    <select\n      className={cx(cssClasses.select)}\n      onChange={(event) => setValue((event.target as HTMLSelectElement).value)}\n      value={`${currentValue}`}\n    >\n      {options.map((option) => (\n        <option\n          className={cx(cssClasses.option)}\n          key={option.label + option.value}\n          value={`${option.value}`}\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Selector;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Selector from '../../components/Selector/Selector';\nimport connectHitsPerPage from '../../connectors/hits-per-page/connectHitsPerPage';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n  find,\n} from '../../lib/utils';\n\nimport type {\n  HitsPerPageConnectorParams,\n  HitsPerPageRenderState,\n  HitsPerPageWidgetDescription,\n} from '../../connectors/hits-per-page/connectHitsPerPage';\nimport type { ComponentCSSClasses, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n});\nconst suit = component('HitsPerPage');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ComponentCSSClasses<HitsPerPageCSSClasses>;\n  }) =>\n  ({ items, refine }: HitsPerPageRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    const { value: currentValue } =\n      find(items, ({ isRefined }) => isRefined) || {};\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentValue}\n          options={items}\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\nexport type HitsPerPageCSSClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type HitsPerPageWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: HitsPerPageCSSClasses;\n};\n\nexport type HitsPerPageWidget = WidgetFactory<\n  HitsPerPageWidgetDescription & { $$widgetType: 'ais.hitsPerPage' },\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetParams\n>;\n\nconst hitsPerPage: HitsPerPageWidget = function hitsPerPage(widgetParams) {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectHitsPerPage(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ items, transformItems }),\n    $$widgetType: 'ais.hitsPerPage',\n  };\n};\n\nexport default hitsPerPage;\n","import { omit } from '../../lib/utils';\n\nimport type { InfiniteHitsComponentTemplates } from '../../components/InfiniteHits/InfiniteHits';\n\nconst defaultTemplates: InfiniteHitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  showPreviousText() {\n    return 'Show previous results';\n  },\n  showMoreText() {\n    return 'Show more results';\n  },\n  item(data) {\n    return JSON.stringify(omit(data, ['__hitIndex']), null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport InfiniteHits from '../../components/InfiniteHits/InfiniteHits';\nimport connectInfiniteHits from '../../connectors/infinite-hits/connectInfiniteHits';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  InfiniteHitsComponentCSSClasses,\n  InfiniteHitsComponentTemplates,\n} from '../../components/InfiniteHits/InfiniteHits';\nimport type {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsRenderState,\n  InfiniteHitsCache,\n  InfiniteHitsWidgetDescription,\n} from '../../connectors/infinite-hits/connectInfiniteHits';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  WidgetFactory,\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  InsightsClient,\n  Renderer,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n});\nconst suit = component('InfiniteHits');\nconst InfiniteHitsWithInsightsListener = withInsightsListener(InfiniteHits);\n\nexport type InfiniteHitsCSSClasses = Partial<{\n  /**\n   * The root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * The root container without results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * The list of results.\n   */\n  list: string | string[];\n\n  /**\n   * The list item.\n   */\n  item: string | string[];\n\n  /**\n   * The “Show previous” button.\n   */\n  loadPrevious: string | string[];\n\n  /**\n   * The disabled “Show previous” button.\n   */\n  disabledLoadPrevious: string | string[];\n\n  /**\n   * The “Show more” button.\n   */\n  loadMore: string | string[];\n\n  /**\n   * The disabled “Show more” button.\n   */\n  disabledLoadMore: string | string[];\n}>;\n\nexport type InfiniteHitsTemplates = Partial<{\n  /**\n   * The template to use when there are no results.\n   */\n  empty: Template<SearchResults>;\n\n  /**\n   * The template to use for the “Show previous” label.\n   */\n  showPreviousText: Template;\n\n  /**\n   * The template to use for the “Show more” label.\n   */\n  showMoreText: Template;\n\n  /**\n   * The template to use for each result.\n   */\n  item: TemplateWithBindEvent<\n    Hit & {\n      /** @deprecated the index in the hits array, use __position instead, which is the absolute position */\n      __hitIndex: number;\n    }\n  >;\n}>;\n\nexport type InfiniteHitsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: InfiniteHitsCSSClasses;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: InfiniteHitsTemplates;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache;\n};\n\nexport type InfiniteHitsWidget = WidgetFactory<\n  InfiniteHitsWidgetDescription & { $$widgetType: 'ais.infiniteHits' },\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showPrevious: hasShowPrevious,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: InfiniteHitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<InfiniteHitsComponentTemplates>;\n    };\n    templates: InfiniteHitsTemplates;\n    showPrevious?: boolean;\n  }): Renderer<InfiniteHitsRenderState, Partial<InfiniteHitsWidgetParams>> =>\n  (\n    {\n      hits,\n      results,\n      showMore,\n      showPrevious,\n      isFirstPage,\n      isLastPage,\n      instantSearchInstance,\n      insights,\n      bindEvent,\n      sendEvent,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <InfiniteHitsWithInsightsListener\n        cssClasses={cssClasses}\n        hits={hits}\n        results={results}\n        hasShowPrevious={hasShowPrevious}\n        showPrevious={showPrevious}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        insights={insights as InsightsClient}\n        sendEvent={sendEvent}\n        bindEvent={bindEvent}\n      />,\n      containerNode\n    );\n  };\n\nconst infiniteHits: InfiniteHitsWidget = (widgetParams) => {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n    showPrevious,\n    cache,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    loadPrevious: cx(\n      suit({ descendantName: 'loadPrevious' }),\n      userCssClasses.loadPrevious\n    ),\n    disabledLoadPrevious: cx(\n      suit({ descendantName: 'loadPrevious', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadPrevious\n    ),\n    loadMore: cx(suit({ descendantName: 'loadMore' }), userCssClasses.loadMore),\n    disabledLoadMore: cx(\n      suit({ descendantName: 'loadMore', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showPrevious,\n    renderState: {},\n  });\n\n  const makeWidget = withInsights(connectInfiniteHits)(\n    specializedRenderer,\n    () => render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      escapeHTML,\n      transformItems,\n      showPrevious,\n      cache,\n    }),\n    $$widgetType: 'ais.infiniteHits',\n  };\n};\n\nexport default infiniteHits;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { warning } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type {\n  InfiniteHitsCSSClasses,\n  InfiniteHitsTemplates,\n} from '../../widgets/infinite-hits/infinite-hits';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nexport type InfiniteHitsComponentCSSClasses =\n  ComponentCSSClasses<InfiniteHitsCSSClasses>;\nexport type InfiniteHitsComponentTemplates = Required<InfiniteHitsTemplates>;\n\nexport type InfiniteHitsProps = {\n  cssClasses: InfiniteHitsComponentCSSClasses;\n  hits: Hit[];\n  results: SearchResults;\n  hasShowPrevious: boolean;\n  showPrevious: () => void;\n  showMore: () => void;\n  templateProps: {\n    [key: string]: any;\n    templates: InfiniteHitsComponentTemplates;\n  };\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  sendEvent: SendEventForHits;\n  bindEvent: BindEventForHits;\n};\n\nconst InfiniteHits = ({\n  results,\n  hits,\n  bindEvent,\n  sendEvent,\n  hasShowPrevious,\n  showPrevious,\n  showMore,\n  isFirstPage,\n  isLastPage,\n  cssClasses,\n  templateProps,\n}: InfiniteHitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      {hasShowPrevious && (\n        <Template\n          {...templateProps}\n          templateKey=\"showPreviousText\"\n          rootTagName=\"button\"\n          rootProps={{\n            className: cx(\n              cssClasses.loadPrevious,\n              isFirstPage && cssClasses.disabledLoadPrevious\n            ),\n            disabled: isFirstPage,\n            onClick: showPrevious,\n          }}\n        />\n      )}\n\n      <ol className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              get __hitIndex() {\n                warning(\n                  false,\n                  'The `__hitIndex` property is deprecated. Use the absolute `__position` instead.'\n                );\n                return index;\n              },\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n\n      <Template\n        {...templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cx(\n            cssClasses.loadMore,\n            isLastPage && cssClasses.disabledLoadMore\n          ),\n          disabled: isLastPage,\n          onClick: showMore,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default InfiniteHits;\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type { MenuComponentTemplates } from './menu';\n\nconst defaultTemplates: MenuComponentTemplates = {\n  item({ cssClasses, url, label, count }) {\n    return (\n      <a className={cx(cssClasses.link)} href={url}>\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu' });\nconst suit = component('Menu');\n\nexport type MenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more button.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more button.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type MenuTemplates = Partial<{\n  /**\n   * Item template. The string template gets the same values as the function.\n   */\n  item: Template<{\n    count: number;\n    cssClasses: MenuCSSClasses;\n    isRefined: boolean;\n    label: string;\n    url: string;\n    value: string;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{\n    isShowingMore: boolean;\n  }>;\n}>;\n\nexport type MenuComponentCSSClasses = ComponentCSSClasses<MenuCSSClasses>;\n\nexport type MenuComponentTemplates = Required<MenuTemplates>;\n\nexport type MenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showMore,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuComponentTemplates>;\n    };\n    templates: MenuTemplates;\n    showMore?: boolean;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const facetValues = items.map((facetValue) => ({\n      ...facetValue,\n      url: createURL(facetValue.value),\n    }));\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={facetValues}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menu' },\n  MenuConnectorParams,\n  MenuWidgetParams\n>;\n\nconst menu: MenuWidget = function menu(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n    showMore,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.menu',\n  };\n};\n\nexport default menu;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { find } from '../../lib/utils';\nimport Template from '../Template/Template';\n\nimport type { MenuRenderState } from '../../connectors/menu/connectMenu';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  MenuSelectCSSClasses,\n  MenuSelectTemplates,\n} from '../../widgets/menu-select/menu-select';\n\nexport type MenuSelectComponentCSSClasses =\n  ComponentCSSClasses<MenuSelectCSSClasses>;\n\nexport type MenuSelectComponentTemplates = Required<MenuSelectTemplates>;\n\ntype MenuItem = {\n  /**\n   * The value of the menu item.\n   **/\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   **/\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   **/\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   **/\n  isRefined: boolean;\n};\n\ntype Props = {\n  cssClasses: MenuSelectComponentCSSClasses;\n  items: MenuItem[];\n  refine: MenuRenderState['refine'];\n  templateProps: {\n    templates: MenuSelectComponentTemplates;\n  };\n};\n\nfunction MenuSelect({ cssClasses, templateProps, items, refine }: Props) {\n  const { value: selectedValue } = find(items, (item) => item.isRefined) || {\n    value: '',\n  };\n\n  return (\n    <div\n      className={cx(\n        cssClasses.root,\n        items.length === 0 && cssClasses.noRefinementRoot\n      )}\n    >\n      <select\n        className={cssClasses.select}\n        value={selectedValue}\n        onChange={(event) => {\n          refine((event.target as HTMLSelectElement).value);\n        }}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"defaultOption\"\n          rootTagName=\"option\"\n          rootProps={{\n            value: '',\n            className: cssClasses.option,\n          }}\n        />\n\n        {items.map((item) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"option\"\n            rootProps={{\n              value: item.value,\n              className: cssClasses.option,\n            }}\n            key={item.value}\n            data={item}\n          />\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default MenuSelect;\n","import { formatNumber } from '../../lib/formatNumber';\n\nimport type { MenuSelectComponentTemplates } from '../../components/MenuSelect/MenuSelect';\n\nconst defaultTemplates: MenuSelectComponentTemplates = {\n  item({ label, count }) {\n    return `${label} (${formatNumber(count)})`;\n  },\n  defaultOption() {\n    return 'See all';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport MenuSelect from '../../components/MenuSelect/MenuSelect';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  MenuSelectComponentCSSClasses,\n  MenuSelectComponentTemplates,\n} from '../../components/MenuSelect/MenuSelect';\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu-select' });\nconst suit = component('MenuSelect');\n\nexport type MenuSelectCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root when there are no items to display\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the select element.\n   */\n  select: string | string[];\n  /**\n   * CSS class to add to the option element.\n   */\n  option: string | string[];\n}>;\n\nexport type MenuSelectTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `count`, `isRefined` and `value` data properties.\n   */\n  item: Template<{\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n  }>;\n  /**\n   * Label of the \"see all\" option in the select.\n   */\n  defaultOption: Template;\n}>;\n\nexport type MenuSelectWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuSelectTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuSelectCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuSelectComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuSelectComponentTemplates>;\n    };\n    templates: MenuSelectTemplates;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      instantSearchInstance,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <MenuSelect\n        cssClasses={cssClasses}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuSelectWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menuSelect' },\n  MenuConnectorParams,\n  MenuSelectWidgetParams\n>;\n\nconst menuSelect: MenuSelectWidget = function menuSelect(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy = ['name:asc'],\n    limit = 10,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, limit, sortBy, transformItems }),\n    $$widgetType: 'ais.menuSelect',\n  };\n};\n\nexport default menuSelect;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { NumericMenuComponentTemplates } from './numeric-menu';\n\nconst defaultTemplates: NumericMenuComponentTemplates = {\n  item({ cssClasses, attribute, label, isRefined }) {\n    return (\n      <label className={cssClasses.label}>\n        <input\n          type=\"radio\"\n          className={cssClasses.radio}\n          name={attribute}\n          defaultChecked={isRefined}\n        />\n        <span className={cssClasses.labelText}>{label}</span>\n      </label>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectNumericMenu from '../../connectors/numeric-menu/connectNumericMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  NumericMenuConnectorParams,\n  NumericMenuRenderState,\n  NumericMenuWidgetDescription,\n} from '../../connectors/numeric-menu/connectNumericMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  ComponentCSSClasses,\n  Renderer,\n  Template,\n  WidgetFactory,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'numeric-menu' });\nconst suit = component('NumericMenu');\n\nconst renderer =\n  ({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    attribute: string;\n    cssClasses: NumericMenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<NumericMenuTemplates>;\n    };\n    templates: NumericMenuTemplates;\n  }): Renderer<NumericMenuRenderState, Partial<NumericMenuWidgetParams>> =>\n  (\n    { createURL, instantSearchInstance, refine, items },\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        attribute={attribute}\n      />,\n      containerNode\n    );\n  };\n\nexport type NumericMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to each label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n\n  /**\n   * CSS class to add to each radio element (when using the default template).\n   */\n  radio: string | string[];\n}>;\n\nexport type NumericMenuComponentCSSClasses =\n  ComponentCSSClasses<NumericMenuCSSClasses>;\n\nexport type NumericMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `label` (the name in the configuration), `isRefined`, `url`, `value` (the setting for the filter) data properties.\n   */\n  item: Template<{\n    /**\n     * The name of the attribute.\n     */\n    attribute: string;\n\n    /**\n     * The label for the option.\n     */\n    label: string;\n\n    /**\n     * The encoded URL of the bounds object with a {start, end} form. This\n     * value can be used verbatim in the webpage and can be read by refine\n     * directly. If you want to inspect the value, you can do JSON.parse(window.decodeURI(value))\n     * to get the object.\n     */\n    value: string;\n\n    /**\n     *  Whether or not the refinement is selected.\n     */\n    isRefined: boolean;\n\n    /**\n     * The URL with the applied refinement.\n     */\n    url: string;\n\n    /**\n     * The CSS classes provided to the widget.\n     */\n    cssClasses: NumericMenuComponentCSSClasses;\n  }>;\n}>;\n\nexport type NumericMenuComponentTemplates = Required<NumericMenuTemplates>;\n\nexport type NumericMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: NumericMenuTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: NumericMenuCSSClasses;\n};\n\nexport type NumericMenuWidget = WidgetFactory<\n  NumericMenuWidgetDescription & { $$widgetType: 'ais.numericMenu' },\n  NumericMenuConnectorParams,\n  NumericMenuWidgetParams\n>;\n\nconst numericMenu: NumericMenuWidget = function numericMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    items,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    radio: cx(suit({ descendantName: 'radio' }), userCssClasses.radio),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectNumericMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      items,\n      transformItems,\n    }),\n    $$widgetType: 'ais.numericMenu',\n  };\n};\n\nexport default numericMenu;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { isSpecialClick } from '../../lib/utils';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  PaginationCSSClasses,\n  PaginationTemplates,\n} from '../../widgets/pagination/pagination';\n\nexport type PaginationComponentCSSClasses =\n  ComponentCSSClasses<PaginationCSSClasses>;\n\nexport type PaginationComponentTemplates = Required<PaginationTemplates>;\n\nexport type PaginationProps = {\n  createURL(value: number): string;\n  cssClasses: PaginationComponentCSSClasses;\n  templates: PaginationComponentTemplates;\n  currentPage: number;\n  nbPages: number;\n  pages: number[];\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  setCurrentPage(value: number): void;\n  showFirst?: boolean;\n  showLast?: boolean;\n  showPrevious?: boolean;\n  showNext?: boolean;\n};\n\nfunction Pagination(props: PaginationProps) {\n  function createClickHandler(pageNumber: number) {\n    return (event: MouseEvent) => {\n      if (isSpecialClick(event)) {\n        // do not alter the default browser behavior\n        // if one special key is down\n        return;\n      }\n      event.preventDefault();\n      props.setCurrentPage(pageNumber);\n    };\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.nbPages <= 1 && props.cssClasses.noRefinementRoot\n      )}\n    >\n      <ul className={props.cssClasses.list}>\n        {props.showFirst && (\n          <PaginationLink\n            ariaLabel=\"First\"\n            className={props.cssClasses.firstPageItem}\n            isDisabled={props.isFirstPage}\n            label={props.templates.first}\n            pageNumber={0}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showPrevious && (\n          <PaginationLink\n            ariaLabel=\"Previous\"\n            className={props.cssClasses.previousPageItem}\n            isDisabled={props.isFirstPage}\n            label={props.templates.previous}\n            pageNumber={props.currentPage - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.pages.map((pageNumber) => (\n          <PaginationLink\n            key={pageNumber}\n            ariaLabel={`Page ${pageNumber + 1}`}\n            className={props.cssClasses.pageItem}\n            isSelected={pageNumber === props.currentPage}\n            label={`${pageNumber + 1}`}\n            pageNumber={pageNumber}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        ))}\n\n        {props.showNext && (\n          <PaginationLink\n            ariaLabel=\"Next\"\n            className={props.cssClasses.nextPageItem}\n            isDisabled={props.isLastPage}\n            label={props.templates.next}\n            pageNumber={props.currentPage + 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showLast && (\n          <PaginationLink\n            ariaLabel=\"Last\"\n            className={props.cssClasses.lastPageItem}\n            isDisabled={props.isLastPage}\n            label={props.templates.last}\n            pageNumber={props.nbPages - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\ntype PaginationLinkProps = {\n  label: string;\n  ariaLabel: string;\n  pageNumber: number;\n  isDisabled?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  cssClasses: PaginationComponentCSSClasses;\n  createURL(value: number): string;\n  createClickHandler: (pageNumber: number) => (event: MouseEvent) => void;\n};\n\nfunction PaginationLink({\n  label,\n  ariaLabel,\n  pageNumber,\n  className,\n  isDisabled = false,\n  isSelected = false,\n  cssClasses,\n  createURL,\n  createClickHandler,\n}: PaginationLinkProps) {\n  return (\n    <li\n      className={cx(\n        cssClasses.item,\n        className,\n        isDisabled && cssClasses.disabledItem,\n        isSelected && cssClasses.selectedItem\n      )}\n    >\n      {isDisabled ? (\n        <span\n          className={cssClasses.link}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      ) : (\n        <a\n          className={cssClasses.link}\n          aria-label={ariaLabel}\n          href={createURL(pageNumber)}\n          onClick={createClickHandler(pageNumber)}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default Pagination;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Pagination from '../../components/Pagination/Pagination';\nimport connectPagination from '../../connectors/pagination/connectPagination';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  PaginationComponentCSSClasses,\n  PaginationComponentTemplates,\n} from '../../components/Pagination/Pagination';\nimport type {\n  PaginationConnectorParams,\n  PaginationRenderState,\n  PaginationWidgetDescription,\n} from '../../connectors/pagination/connectPagination';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('Pagination');\nconst withUsage = createDocumentationMessageGenerator({ name: 'pagination' });\n\nconst defaultTemplates: PaginationComponentTemplates = {\n  previous: '‹',\n  next: '›',\n  first: '«',\n  last: '»',\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PaginationComponentCSSClasses;\n    templates: PaginationComponentTemplates;\n    showFirst: boolean;\n    showLast: boolean;\n    showPrevious: boolean;\n    showNext: boolean;\n    scrollToNode: HTMLElement | false;\n  }): Renderer<PaginationRenderState, Partial<PaginationWidgetParams>> =>\n  (\n    {\n      createURL,\n      currentRefinement,\n      nbPages,\n      pages,\n      isFirstPage,\n      isLastPage,\n      refine,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) return;\n\n    const setCurrentPage = (pageNumber: number) => {\n      refine(pageNumber);\n\n      if (scrollToNode !== false) {\n        scrollToNode.scrollIntoView();\n      }\n    };\n\n    render(\n      <Pagination\n        createURL={createURL}\n        cssClasses={cssClasses}\n        currentPage={currentRefinement}\n        templates={templates}\n        nbPages={nbPages}\n        pages={pages}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        setCurrentPage={setCurrentPage}\n        showFirst={showFirst}\n        showLast={showLast}\n        showPrevious={showPrevious}\n        showNext={showNext}\n      />,\n      containerNode\n    );\n  };\n\nexport type PaginationCSSClasses = Partial<{\n  /**\n   * CSS classes added to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes added to the wrapping `<ul>`.\n   */\n  list: string | string[];\n\n  /**\n   * CSS classes added to each `<li>`.\n   */\n  item: string | string[];\n\n  /**\n   * CSS classes added to the first `<li>`.\n   */\n  firstPageItem: string | string[];\n\n  /**\n   * CSS classes added to the last `<li>`.\n   */\n  lastPageItem: string | string[];\n\n  /**\n   * CSS classes added to the previous `<li>`.\n   */\n  previousPageItem: string | string[];\n\n  /**\n   * CSS classes added to the next `<li>`.\n   */\n  nextPageItem: string | string[];\n\n  /**\n   * CSS classes added to page `<li>`.\n   */\n  pageItem: string | string[];\n\n  /**\n   * CSS classes added to the selected `<li>`.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS classes added to the disabled `<li>`.\n   */\n  disabledItem: string | string[];\n\n  /**\n   * CSS classes added to each link.\n   */\n  link: string | string[];\n}>;\n\nexport type PaginationTemplates = Partial<{\n  /**\n   * Label for the Previous link.\n   */\n  previous: string;\n\n  /**\n   * Label for the Next link.\n   */\n  next: string;\n\n  /**\n   * Label for the First link.\n   */\n  first: string;\n\n  /**\n   * Label for the Last link.\n   */\n  last: string;\n}>;\n\nexport type PaginationWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The max number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The number of pages to display on each side of the current page.\n   * @default 3\n   */\n  padding?: number;\n\n  /**\n   * Where to scroll after a click, set to `false` to disable.\n   * @default body\n   */\n  scrollTo?: string | HTMLElement | boolean;\n\n  /**\n   * Whether to show the \"first page\" control\n   * @default true\n   */\n  showFirst?: boolean;\n\n  /**\n   * Whether to show the \"last page\" control\n   * @default true\n   */\n  showLast?: boolean;\n\n  /**\n   * Whether to show the \"next page\" control\n   * @default true\n   */\n  showNext?: boolean;\n\n  /**\n   * Whether to show the \"previous page\" control\n   * @default true\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Text to display in the links.\n   */\n  templates?: PaginationTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: PaginationCSSClasses;\n};\n\nexport type PaginationWidget = WidgetFactory<\n  PaginationWidgetDescription & { $$widgetType: 'ais.pagination' },\n  PaginationConnectorParams,\n  PaginationWidgetParams\n>;\n\nconst pagination: PaginationWidget = function pagination(widgetParams) {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    totalPages,\n    padding,\n    showFirst = true,\n    showLast = true,\n    showPrevious = true,\n    showNext = true,\n    scrollTo: userScrollTo = 'body',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const scrollTo = userScrollTo === true ? 'body' : userScrollTo;\n  const scrollToNode = scrollTo !== false ? getContainerNode(scrollTo) : false;\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    firstPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'firstPage' }),\n      userCssClasses.firstPageItem\n    ),\n    lastPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'lastPage' }),\n      userCssClasses.lastPageItem\n    ),\n    previousPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'previousPage' }),\n      userCssClasses.previousPageItem\n    ),\n    nextPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'nextPage' }),\n      userCssClasses.nextPageItem\n    ),\n    pageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'page' }),\n      userCssClasses.pageItem\n    ),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  });\n\n  const makeWidget = connectPagination(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ totalPages, padding }),\n    $$widgetType: 'ais.pagination',\n  };\n};\n\nexport default pagination;\n","import{options as n,Fragment as t}from\"preact\";var r,u,i,o,f=0,c=[],e=[],a=n.__b,v=n.__r,l=n.diffed,m=n.__c,d=n.unmount;function p(t,r){n.__h&&n.__h(u,t,f||r),f=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:e}),i.__[t]}function y(n){return f=1,h(C,n)}function h(n,t,i){var o=p(r++,2);if(o.t=n,!o.__c&&(o.__=[i?i(t):C(void 0,t),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=u,!u.u)){u.u=!0;var f=u.shouldComponentUpdate;u.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!!i&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function s(t,i){var o=p(r++,3);!n.__s&&B(o.__H,i)&&(o.__=t,o.i=i,u.__H.__h.push(o))}function _(t,i){var o=p(r++,4);!n.__s&&B(o.__H,i)&&(o.__=t,o.i=i,u.__h.push(o))}function A(n){return f=5,T(function(){return{current:n}},[])}function F(n,t,r){f=6,_(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function T(n,t){var u=p(r++,7);return B(u.__H,t)?(u.__V=n(),u.i=t,u.__h=n,u.__V):u.__}function q(n,t){return f=8,T(function(){return n},t)}function x(n){var t=u.context[n.__c],i=p(r++,9);return i.c=n,t?(null==i.__&&(i.__=!0,t.sub(u)),t.props.value):n.__}function P(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function V(n){var t=p(r++,10),i=y();return t.__=n,u.componentDidCatch||(u.componentDidCatch=function(n,r){t.__&&t.__(n,r),i[1](n)}),[i[0],function(){i[1](void 0)}]}function b(){var n=p(r++,11);return n.__||(n.__=\"P\"+function(n){for(var t=0,r=n.length;r>0;)t=(t<<5)-t+n.charCodeAt(--r)|0;return t}(u.__v.o)+r),n.__}function g(){for(var t;t=c.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(w),t.__H.__h.forEach(z),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){\"function\"!=typeof n.type||n.o||n.type===t?n.o||(n.o=n.__&&n.__.o?n.__.o:\"\"):n.o=(n.__&&n.__.o?n.__.o:\"\")+(n.__&&n.__.__k?n.__.__k.indexOf(n):0),u=null,a&&a(n)},n.__r=function(n){v&&v(n),r=0;var t=(u=n.__c).__H;t&&(i===u?(t.__h=[],u.__h=[],t.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=e,n.__N=n.i=void 0})):(t.__h.forEach(w),t.__h.forEach(z),t.__h=[])),i=u},n.diffed=function(t){l&&l(t);var r=t.__c;r&&r.__H&&(r.__H.__h.length&&(1!==c.push(r)&&o===n.requestAnimationFrame||((o=n.requestAnimationFrame)||k)(g)),r.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==e&&(n.__=n.__V),n.i=void 0,n.__V=e})),i=u=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(w),t.__h=t.__h.filter(function(n){return!n.__||z(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),m&&m(t,r)},n.unmount=function(t){d&&d(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{w(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var j=\"function\"==typeof requestAnimationFrame;function k(n){var t,r=function(){clearTimeout(u),j&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);j&&(t=requestAnimationFrame(r))}function w(n){var t=u,r=n.__c;\"function\"==typeof r&&(n.__c=void 0,r()),u=t}function z(n){var t=u;n.__c=n.__(),u=t}function B(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function C(n,t){return\"function\"==typeof t?t(n):t}export{q as useCallback,x as useContext,P as useDebugValue,s as useEffect,V as useErrorBoundary,b as useId,F as useImperativeHandle,_ as useLayoutEffect,T as useMemo,h as useReducer,A as useRef,y as useState};\n//# sourceMappingURL=hooks.module.js.map\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses, UnknownWidgetFactory } from '../../types';\nimport type {\n  PanelCSSClasses,\n  PanelSharedOptions,\n  PanelTemplates,\n} from '../../widgets/panel/panel';\n\nexport type PanelComponentCSSClasses = ComponentCSSClasses<\n  // `collapseIcon` is only used in the default templates of the widget\n  Omit<PanelCSSClasses, 'collapseIcon'>\n>;\n\nexport type PanelComponentTemplates<TWidget extends UnknownWidgetFactory> =\n  Required<PanelTemplates<TWidget>>;\n\nexport type PanelProps<TWidget extends UnknownWidgetFactory> = {\n  hidden: boolean;\n  collapsible: boolean;\n  isCollapsed: boolean;\n  data: PanelSharedOptions<TWidget>;\n  cssClasses: PanelComponentCSSClasses;\n  templates: PanelComponentTemplates<TWidget>;\n  bodyElement: HTMLElement;\n};\n\nfunction Panel<TWidget extends UnknownWidgetFactory>(\n  props: PanelProps<TWidget>\n) {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(props.isCollapsed);\n  const [isControlled, setIsControlled] = useState<boolean>(false);\n  const bodyRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const node = bodyRef.current;\n    if (!node) {\n      return undefined;\n    }\n\n    node.appendChild(props.bodyElement);\n\n    return () => {\n      node.removeChild(props.bodyElement);\n    };\n  }, [bodyRef, props.bodyElement]);\n\n  if (!isControlled && props.isCollapsed !== isCollapsed) {\n    setIsCollapsed(props.isCollapsed);\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.hidden && props.cssClasses.noRefinementRoot,\n        props.collapsible && props.cssClasses.collapsibleRoot,\n        isCollapsed && props.cssClasses.collapsedRoot\n      )}\n      hidden={props.hidden}\n    >\n      {props.templates.header && (\n        <div className={props.cssClasses.header}>\n          <Template\n            templates={props.templates}\n            templateKey=\"header\"\n            rootTagName=\"span\"\n            data={props.data}\n          />\n\n          {props.collapsible && (\n            <button\n              className={props.cssClasses.collapseButton}\n              aria-expanded={!isCollapsed}\n              onClick={(event) => {\n                event.preventDefault();\n\n                setIsControlled(true);\n                setIsCollapsed((prevIsCollapsed) => !prevIsCollapsed);\n              }}\n            >\n              <Template\n                templates={props.templates}\n                templateKey=\"collapseButtonText\"\n                rootTagName=\"span\"\n                data={{ collapsed: isCollapsed }}\n              />\n            </button>\n          )}\n        </div>\n      )}\n\n      <div className={props.cssClasses.body} ref={bodyRef} />\n\n      {props.templates.footer && (\n        <Template\n          templates={props.templates}\n          templateKey=\"footer\"\n          rootProps={{\n            className: props.cssClasses.footer,\n          }}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Panel;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport type { PitProps } from './Rheostat';\n\nconst Pit = ({ style, children }: PitProps) => {\n  // first, end & middle\n  const positionValue = Math.round(parseFloat(style.left as string));\n  const shouldDisplayValue = [0, 50, 100].includes(positionValue);\n\n  const value = children as string;\n  const pitValue = Math.round(parseInt(value, 10) * 100) / 100;\n\n  return (\n    <div\n      style={{ ...style, marginLeft: positionValue === 100 ? '-2px' : 0 }}\n      className={cx(\n        'rheostat-marker',\n        'rheostat-marker-horizontal',\n        shouldDisplayValue && 'rheostat-marker-large'\n      )}\n    >\n      {shouldDisplayValue && <div className={'rheostat-value'}>{pitValue}</div>}\n    </div>\n  );\n};\n\nexport default Pit;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Panel from '../../components/Panel/Panel';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getObjectType,\n  warning,\n} from '../../lib/utils';\n\nimport type { PanelComponentCSSClasses } from '../../components/Panel/Panel';\nimport type {\n  Template,\n  RenderOptions,\n  WidgetFactory,\n  InitOptions,\n  Widget,\n} from '../../types';\n\nexport type PanelCSSClasses = Partial<{\n  /**\n   * CSS classes to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes to add to the root element of the widget when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsible (`collapse` is defined).\n   */\n  collapsibleRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsed.\n   */\n  collapsedRoot: string | string[];\n\n  /**\n   * CSS classes to add to the collapse button element.\n   */\n  collapseButton: string | string[];\n\n  /**\n   * CSS classes to add to the collapse icon of the button.\n   */\n  collapseIcon: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the body.\n   */\n  body: string | string[];\n\n  /**\n   * CSS classes to add to the footer.\n   */\n  footer: string | string[];\n}>;\n\ntype AnyWidgetFactory = WidgetFactory<\n  {\n    $$type: string;\n  },\n  Record<string, any>,\n  // @TODO: this really should be _at least_ { container: string | HTMLElement }\n  // but that or { container: string | HTMLElement; [key: string]: any }\n  // still doesn't allow wider types with another key required.\n  any\n>;\n\nexport type PanelTemplates<TWidget extends AnyWidgetFactory> = Partial<{\n  /**\n   * Template to use for the header.\n   */\n  header: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for the footer.\n   */\n  footer: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for collapse button.\n   */\n  collapseButtonText: Template<{ collapsed: boolean }>;\n}>;\n\ntype GetWidgetRenderState<TWidgetFactory extends AnyWidgetFactory> =\n  ReturnType<TWidgetFactory>['getWidgetRenderState'] extends (\n    renderOptions: any\n  ) => infer TRenderState\n    ? TRenderState extends Record<string, unknown>\n      ? TRenderState\n      : never\n    : Record<string, unknown>;\n\nexport type PanelRenderOptions<TWidgetFactory extends AnyWidgetFactory> =\n  RenderOptions & GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelSharedOptions<TWidgetFactory extends AnyWidgetFactory> = (\n  | InitOptions\n  | RenderOptions\n) &\n  GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelWidgetParams<TWidgetFactory extends AnyWidgetFactory> = {\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be hidden based on the render options.\n   */\n  hidden?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be collapsed based on the render options.\n   */\n  collapsed?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: PanelTemplates<TWidgetFactory>;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: PanelCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'panel' });\nconst suit = component('Panel');\n\nconst renderer =\n  <TWidget extends AnyWidgetFactory>({\n    containerNode,\n    bodyContainerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    bodyContainerNode: HTMLElement;\n    cssClasses: PanelComponentCSSClasses;\n    templates: Required<PanelTemplates<TWidget>>;\n  }) =>\n  ({\n    options,\n    hidden,\n    collapsible,\n    collapsed,\n  }: {\n    options: PanelSharedOptions<TWidget>;\n    hidden: boolean;\n    collapsible: boolean;\n    collapsed: boolean;\n  }) => {\n    render(\n      <Panel<TWidget>\n        cssClasses={cssClasses}\n        hidden={hidden}\n        collapsible={collapsible}\n        isCollapsed={collapsed}\n        templates={templates}\n        data={options}\n        bodyElement={bodyContainerNode}\n      />,\n      containerNode\n    );\n  };\n\ntype AugmentedWidget<\n  TWidgetFactory extends AnyWidgetFactory,\n  TOverriddenKeys extends keyof Widget = 'init' | 'render' | 'dispose'\n> = Omit<ReturnType<TWidgetFactory>, TOverriddenKeys> &\n  Pick<Required<Widget>, TOverriddenKeys>;\n\nexport type PanelWidget = <TWidgetFactory extends AnyWidgetFactory>(\n  panelWidgetParams?: PanelWidgetParams<TWidgetFactory>\n) => (\n  widgetFactory: TWidgetFactory\n) => (\n  widgetParams: Parameters<TWidgetFactory>[0]\n) => AugmentedWidget<TWidgetFactory>;\n\n/**\n * The panel widget wraps other widgets in a consistent panel design.\n * It also reacts, indicates and sets CSS classes when widgets are no longer relevant for refining.\n */\nconst panel: PanelWidget = (panelWidgetParams) => {\n  const {\n    templates = {},\n    hidden = () => false,\n    collapsed,\n    cssClasses: userCssClasses = {},\n  } = panelWidgetParams || {};\n\n  warning(\n    typeof hidden === 'function',\n    `The \\`hidden\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      hidden\n    )}).`\n  );\n\n  warning(\n    typeof collapsed === 'undefined' || typeof collapsed === 'function',\n    `The \\`collapsed\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      collapsed\n    )}).`\n  );\n\n  const bodyContainerNode = document.createElement('div');\n  const collapsible = Boolean(collapsed);\n  const collapsedFn = typeof collapsed === 'function' ? collapsed : () => false;\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    collapsibleRoot: cx(\n      suit({ modifierName: 'collapsible' }),\n      userCssClasses.collapsibleRoot\n    ),\n    collapsedRoot: cx(\n      suit({ modifierName: 'collapsed' }),\n      userCssClasses.collapsedRoot\n    ),\n    collapseButton: cx(\n      suit({ descendantName: 'collapseButton' }),\n      userCssClasses.collapseButton\n    ),\n    collapseIcon: cx(\n      suit({ descendantName: 'collapseIcon' }),\n      userCssClasses.collapseIcon\n    ),\n    body: cx(suit({ descendantName: 'body' }), userCssClasses.body),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    footer: cx(suit({ descendantName: 'footer' }), userCssClasses.footer),\n  };\n\n  return (widgetFactory) => (widgetParams) => {\n    if (!(widgetParams && widgetParams.container)) {\n      throw new Error(\n        withUsage(\n          `The \\`container\\` option is required in the widget within the panel.`\n        )\n      );\n    }\n\n    const containerNode = getContainerNode(widgetParams.container);\n\n    const defaultTemplates: Required<PanelTemplates<typeof widgetFactory>> = {\n      header: '',\n      footer: '',\n      collapseButtonText: ({ collapsed: isCollapsed }) =>\n        `<svg\n          class=\"${cssClasses.collapseIcon}\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 500 500\"\n        >\n        <path d=\"${\n          isCollapsed ? 'M100 250l300-150v300z' : 'M250 400l150-300H100z'\n        }\" fill=\"currentColor\" />\n        </svg>`,\n    };\n\n    const renderPanel = renderer<typeof widgetFactory>({\n      containerNode,\n      bodyContainerNode,\n      cssClasses,\n      templates: {\n        ...defaultTemplates,\n        ...templates,\n      },\n    });\n\n    const widget = widgetFactory({\n      ...widgetParams,\n      container: bodyContainerNode,\n    });\n\n    // TypeScript somehow loses track of the ...widget type, since it's\n    // not directly returned. Eventually the \"as AugmentedWidget<typeof widgetFactory>\"\n    // will not be needed anymore.\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return {\n      ...widget,\n      init(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...(widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: true,\n          collapsible,\n          collapsed: false,\n        });\n\n        if (typeof widget.init === 'function') {\n          widget.init.call(this, ...args);\n        }\n      },\n      render(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...((widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}) as GetWidgetRenderState<typeof widgetFactory>),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: Boolean(hidden(options)),\n          collapsible,\n          collapsed: Boolean(collapsedFn(options)),\n        });\n\n        if (typeof widget.render === 'function') {\n          widget.render.call(this, ...args);\n        }\n      },\n      dispose(...args) {\n        render(null, containerNode);\n\n        if (typeof widget.dispose === 'function') {\n          return widget.dispose.call(this, ...args);\n        }\n\n        return undefined;\n      },\n    } as AugmentedWidget<typeof widgetFactory>;\n  };\n};\n\nexport default panel;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PoweredByCSSClasses } from '../../widgets/powered-by/powered-by';\n\nexport type PoweredByComponentCSSClasses =\n  ComponentCSSClasses<PoweredByCSSClasses>;\n\nexport type PoweredByProps = {\n  url: string;\n  theme: string;\n  cssClasses: PoweredByComponentCSSClasses;\n};\n\nconst PoweredBy = ({ url, theme, cssClasses }: PoweredByProps) => (\n  <div className={cssClasses.root}>\n    <a\n      href={url}\n      target=\"_blank\"\n      className={cssClasses.link}\n      aria-label=\"Search by Algolia\"\n      rel=\"noopener noreferrer\"\n    >\n      <svg\n        height=\"1.2em\"\n        className={cssClasses.logo}\n        viewBox=\"0 0 572 64\"\n        // This style is necessary as long as it's not included in InstantSearch.css.\n        // For now, InstantSearch.css sets a maximum width of 70px.\n        style={{\n          width: 'auto',\n        }}\n      >\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#36395A'}\n          d=\"M16 48.3c-3.4 0-6.3-.6-8.7-1.7A12.4 12.4 0 0 1 1.9 42C.6 40 0 38 0 35.4h6.5a6.7 6.7 0 0 0 3.9 6c1.4.7 3.3 1.1 5.6 1.1 2.2 0 4-.3 5.4-1a7 7 0 0 0 3-2.4 6 6 0 0 0 1-3.4c0-1.5-.6-2.8-1.9-3.7-1.3-1-3.3-1.6-5.9-1.8l-4-.4c-3.7-.3-6.6-1.4-8.8-3.4a10 10 0 0 1-3.3-7.9c0-2.4.6-4.6 1.8-6.4a12 12 0 0 1 5-4.3c2.2-1 4.7-1.6 7.5-1.6s5.5.5 7.6 1.6a12 12 0 0 1 5 4.4c1.2 1.8 1.8 4 1.8 6.7h-6.5a6.4 6.4 0 0 0-3.5-5.9c-1-.6-2.6-1-4.4-1s-3.2.3-4.4 1c-1.1.6-2 1.4-2.6 2.4-.5 1-.8 2-.8 3.1a5 5 0 0 0 1.5 3.6c1 1 2.6 1.7 4.7 1.9l4 .3c2.8.2 5.2.8 7.2 1.8 2.1 1 3.7 2.2 4.9 3.8a9.7 9.7 0 0 1 1.7 5.8c0 2.5-.7 4.7-2 6.6a13 13 0 0 1-5.6 4.4c-2.4 1-5.2 1.6-8.4 1.6Zm35.6 0c-2.6 0-4.8-.4-6.7-1.3a13 13 0 0 1-4.7-3.5 17.1 17.1 0 0 1-3.6-10.4v-1c0-2 .3-3.8 1-5.6a13 13 0 0 1 7.3-8.3 15 15 0 0 1 6.3-1.4A13.2 13.2 0 0 1 64 24.3c1 2.2 1.6 4.6 1.6 7.2V34H39.4v-4.3h21.8l-1.8 2.2c0-2-.3-3.7-.9-5.1a7.3 7.3 0 0 0-2.7-3.4c-1.2-.7-2.7-1.1-4.6-1.1s-3.4.4-4.7 1.3a8 8 0 0 0-2.9 3.6c-.6 1.5-.9 3.3-.9 5.4 0 2 .3 3.7 1 5.3a7.9 7.9 0 0 0 2.8 3.7c1.3.8 3 1.3 5 1.3s3.8-.5 5.1-1.3c1.3-1 2.1-2 2.4-3.2h6a11.8 11.8 0 0 1-7 8.7 16 16 0 0 1-6.4 1.2ZM80 48c-2.2 0-4-.3-5.7-1a8.4 8.4 0 0 1-3.7-3.3 9.7 9.7 0 0 1-1.3-5.2c0-2 .5-3.8 1.5-5.2a9 9 0 0 1 4.3-3.1c1.8-.7 4-1 6.7-1H89v4.1h-7.5c-2 0-3.4.5-4.4 1.4-1 1-1.6 2.1-1.6 3.6s.5 2.7 1.6 3.6c1 1 2.5 1.4 4.4 1.4 1.1 0 2.2-.2 3.2-.7 1-.4 1.9-1 2.6-2 .6-1 1-2.4 1-4.2l1.7 2.1c-.2 2-.7 3.8-1.5 5.2a9 9 0 0 1-3.4 3.3 12 12 0 0 1-5.3 1Zm9.5-.7v-8.8h-1v-10c0-1.8-.5-3.2-1.4-4.1-1-1-2.4-1.4-4.2-1.4a142.9 142.9 0 0 0-10.2.4v-5.6a74.8 74.8 0 0 1 8.6-.4c3 0 5.5.4 7.5 1.2s3.4 2 4.4 3.6c1 1.7 1.4 4 1.4 6.7v18.4h-5Zm12.9 0V17.8h5v12.3h-.2c0-4.2 1-7.4 2.8-9.5a11 11 0 0 1 8.3-3.1h1v5.6h-2a9 9 0 0 0-6.3 2.2c-1.5 1.5-2.2 3.6-2.2 6.4v15.6h-6.4Zm34.4 1a15 15 0 0 1-6.6-1.3c-1.9-.9-3.4-2-4.7-3.5a15.5 15.5 0 0 1-2.7-5c-.6-1.7-1-3.6-1-5.4v-1c0-2 .4-3.8 1-5.6a15 15 0 0 1 2.8-4.9c1.3-1.5 2.8-2.6 4.6-3.5a16.4 16.4 0 0 1 13.3.2c2 1 3.5 2.3 4.8 4a12 12 0 0 1 2 6H144c-.2-1.6-1-3-2.2-4.1a7.5 7.5 0 0 0-5.2-1.7 8 8 0 0 0-4.7 1.3 8 8 0 0 0-2.8 3.6 13.8 13.8 0 0 0 0 10.3c.6 1.5 1.5 2.7 2.8 3.6s2.8 1.3 4.8 1.3c1.5 0 2.7-.2 3.8-.8a7 7 0 0 0 2.6-2c.7-1 1-2 1.2-3.2h6.2a11 11 0 0 1-2 6.2 15.1 15.1 0 0 1-11.8 5.5Zm19.7-1v-40h6.4V31h-1.3c0-3 .4-5.5 1.1-7.6a9.7 9.7 0 0 1 3.5-4.8A9.9 9.9 0 0 1 172 17h.3c3.5 0 6 1.1 7.9 3.5 1.7 2.3 2.6 5.7 2.6 10v16.8h-6.4V29.6c0-2.1-.6-3.8-1.8-5a6.4 6.4 0 0 0-4.8-1.8c-2 0-3.7.7-5 2a7.8 7.8 0 0 0-1.9 5.5v17h-6.4Zm63.8 1a12.2 12.2 0 0 1-10.9-6.2 19 19 0 0 1-1.8-7.3h1.4v12.5h-5.1v-40h6.4v19.8l-2 3.5c.2-3.1.8-5.7 1.9-7.7a11 11 0 0 1 4.4-4.5c1.8-1 3.9-1.5 6.1-1.5a13.4 13.4 0 0 1 12.8 9.1c.7 1.9 1 3.8 1 6v1c0 2.2-.3 4.1-1 6a13.6 13.6 0 0 1-13.2 9.4Zm-1.2-5.5a8.4 8.4 0 0 0 7.9-5c.7-1.5 1.1-3.3 1.1-5.3s-.4-3.8-1.1-5.3a8.7 8.7 0 0 0-3.2-3.6 9.6 9.6 0 0 0-9.2-.2 8.5 8.5 0 0 0-3.3 3.2c-.8 1.4-1.3 3-1.3 5v2.3a9 9 0 0 0 1.3 4.8 9 9 0 0 0 3.4 3c1.4.7 2.8 1 4.4 1Zm27.3 3.9-10-28.9h6.5l9.5 28.9h-6Zm-7.5 12.2v-5.7h4.9c1 0 2-.1 2.9-.4a4 4 0 0 0 2-1.4c.4-.7.9-1.6 1.2-2.7l8.6-30.9h6.2l-9.3 32.4a14 14 0 0 1-2.5 5 8.9 8.9 0 0 1-4 2.8c-1.5.6-3.4.9-5.6.9h-4.4Zm9-12.2v-5.2h6.4v5.2H248Z\"\n        />\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#003DFF'}\n          d=\"M534.4 9.1H528a.8.8 0 0 1-.7-.7V1.8c0-.4.2-.7.6-.8l6.5-1c.4 0 .8.2.9.6v7.8c0 .4-.4.7-.8.7zM428 35.2V.8c0-.5-.3-.8-.7-.8h-.2l-6.4 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.5 0 .8-.4.8-.8V43c0-.4-.3-.7-.6-.8-4.5-.5-4.5-6-4.5-7zm106.5-21.8H528c-.4 0-.7.4-.7.8v34c0 .4.3.8.7.8h6.5c.4 0 .8-.4.8-.8v-34c0-.5-.4-.8-.8-.8zm-17.7 21.8V.8c0-.5-.3-.8-.8-.8l-6.5 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.4 0 .8-.4.8-.8V43c0-.4-.3-.7-.7-.8-4.4-.5-4.4-6-4.4-7zm-22.2-20.6a16.5 16.5 0 0 1 8.6 9.3c.8 2.2 1.3 4.8 1.3 7.5a19.4 19.4 0 0 1-4.6 12.6 14.8 14.8 0 0 1-5.2 3.6c-2 .9-5.2 1.4-6.8 1.4a21 21 0 0 1-6.7-1.4 15.4 15.4 0 0 1-8.6-9.3 21.3 21.3 0 0 1 0-14.4 15.2 15.2 0 0 1 8.6-9.3c2-.8 4.3-1.2 6.7-1.2s4.6.4 6.7 1.2zm-6.7 27.6c2.7 0 4.7-1 6.2-3s2.2-4.3 2.2-7.8-.7-6.3-2.2-8.3-3.5-3-6.2-3-4.7 1-6.1 3c-1.5 2-2.2 4.8-2.2 8.3s.7 5.8 2.2 7.8 3.5 3 6.2 3zm-88.8-28.8c-6.2 0-11.7 3.3-14.8 8.2a18.6 18.6 0 0 0 4.8 25.2c1.8 1.2 4 1.8 6.2 1.7s.1 0 .1 0h.9c4.2-.7 8-4 9.1-8.1v7.4c0 .4.3.7.8.7h6.4a.7.7 0 0 0 .7-.7V14.2c0-.5-.3-.8-.7-.8h-13.5zm6.3 26.5a9.8 9.8 0 0 1-5.7 2h-.5a10 10 0 0 1-9.2-14c1.4-3.7 5-6.3 9-6.3h6.4v18.3zm152.3-26.5h13.5c.5 0 .8.3.8.7v33.7c0 .4-.3.7-.8.7h-6.4a.7.7 0 0 1-.8-.7v-7.4c-1.2 4-4.8 7.4-9 8h-.1a4.2 4.2 0 0 1-.5.1h-.9a10.3 10.3 0 0 1-7-2.6c-4-3.3-6.5-8.4-6.5-14.2 0-3.7 1-7.2 3-10 3-5 8.5-8.3 14.7-8.3zm.6 28.4c2.2-.1 4.2-.6 5.7-2V21.7h-6.3a9.8 9.8 0 0 0-9 6.4 10.2 10.2 0 0 0 9.1 13.9h.5zM452.8 13.4c-6.2 0-11.7 3.3-14.8 8.2a18.5 18.5 0 0 0 3.6 24.3 10.4 10.4 0 0 0 13 .6c2.2-1.5 3.8-3.7 4.5-6.1v7.8c0 2.8-.8 5-2.2 6.3-1.5 1.5-4 2.2-7.5 2.2l-6-.3c-.3 0-.7.2-.8.5l-1.6 5.5c-.1.4.1.8.5 1h.1c2.8.4 5.5.6 7 .6 6.3 0 11-1.4 14-4.1 2.7-2.5 4.2-6.3 4.5-11.4V14.2c0-.5-.4-.8-.8-.8h-13.5zm6.3 8.2v18.3a9.6 9.6 0 0 1-5.6 2h-1a10.3 10.3 0 0 1-8.8-14c1.4-3.7 5-6.3 9-6.3h6.4zM291 31.5A32 32 0 0 1 322.8 0h30.8c.6 0 1.2.5 1.2 1.2v61.5c0 1.1-1.3 1.7-2.2 1l-19.2-17a18 18 0 0 1-11 3.4 18.1 18.1 0 1 1 18.2-14.8c-.1.4-.5.7-.9.6-.1 0-.3 0-.4-.2l-3.8-3.4c-.4-.3-.6-.8-.7-1.4a12 12 0 1 0-2.4 8.3c.4-.4 1-.5 1.6-.2l14.7 13.1v-46H323a26 26 0 1 0 10 49.7c.8-.4 1.6-.2 2.3.3l3 2.7c.3.2.3.7 0 1l-.2.2a32 32 0 0 1-47.2-28.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n);\n\nexport default PoweredBy;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport PoweredBy from '../../components/PoweredBy/PoweredBy';\nimport connectPoweredBy from '../../connectors/powered-by/connectPoweredBy';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type { PoweredByComponentCSSClasses } from '../../components/PoweredBy/PoweredBy';\nimport type {\n  PoweredByConnectorParams,\n  PoweredByRenderState,\n  PoweredByWidgetDescription,\n} from '../../connectors/powered-by/connectPoweredBy';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('PoweredBy');\nconst withUsage = createDocumentationMessageGenerator({ name: 'powered-by' });\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PoweredByComponentCSSClasses;\n  }): Renderer<PoweredByRenderState, Partial<PoweredByWidgetParams>> =>\n  ({ url, widgetParams }, isFirstRendering) => {\n    if (isFirstRendering) {\n      const { theme = 'light' } = widgetParams;\n\n      render(\n        <PoweredBy cssClasses={cssClasses} url={url} theme={theme} />,\n        containerNode\n      );\n\n      return;\n    }\n  };\n\nexport type PoweredByCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the link.\n   */\n  link: string | string[];\n\n  /**\n   * CSS class to add to the SVG logo.\n   */\n  logo: string | string[];\n}>;\n\nexport type PoweredByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The theme of the logo.\n   * @default 'light'\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: PoweredByCSSClasses;\n};\n\nexport type PoweredByWidget = WidgetFactory<\n  PoweredByWidgetDescription & { $$widgetType: 'ais.poweredBy' },\n  PoweredByConnectorParams,\n  PoweredByWidgetParams\n>;\n\nconst poweredBy: PoweredByWidget = function poweredBy(widgetParams) {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    theme = 'light',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(\n      suit(),\n      suit({ modifierName: theme === 'dark' ? 'dark' : 'light' }),\n      userCssClasses.root\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    logo: cx(suit({ descendantName: 'logo' }), userCssClasses.logo),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectPoweredBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ theme }),\n    $$widgetType: 'ais.poweredBy',\n  };\n};\n\nexport default poweredBy;\n","import connectQueryRules from '../../connectors/query-rules/connectQueryRules';\nimport { createDocumentationMessageGenerator, noop } from '../../lib/utils';\n\nimport type {\n  ParamTrackedFilters,\n  ParamTransformRuleContexts,\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport type { WidgetFactory } from '../../types';\n\nexport type QueryRuleContextWidgetParams = {\n  trackedFilters: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n};\n\nexport type QueryRuleContextWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleContext' },\n  QueryRulesConnectorParams,\n  QueryRuleContextWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-context',\n});\n\nconst queryRuleContext: QueryRuleContextWidget = (\n  widgetParams = {} as QueryRuleContextWidgetParams\n) => {\n  if (!widgetParams.trackedFilters) {\n    throw new Error(withUsage('The `trackedFilters` option is required.'));\n  }\n\n  return {\n    ...connectQueryRules<QueryRuleContextWidgetParams>(noop)(widgetParams),\n    $$widgetType: 'ais.queryRuleContext',\n  };\n};\n\nexport default queryRuleContext;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  QueryRuleCustomDataCSSClasses,\n  QueryRuleCustomDataTemplates,\n} from '../../widgets/query-rule-custom-data/query-rule-custom-data';\n\nexport type QueryRuleCustomDataComponentCSSClasses =\n  ComponentCSSClasses<QueryRuleCustomDataCSSClasses>;\n\nexport type QueryRuleCustomDataComponentTemplates =\n  Required<QueryRuleCustomDataTemplates>;\n\nexport type QueryRuleCustomDataProps = {\n  cssClasses: QueryRuleCustomDataComponentCSSClasses;\n  templates: QueryRuleCustomDataComponentTemplates;\n  items: any[];\n};\n\nconst QueryRuleCustomData = ({\n  cssClasses,\n  templates,\n  items,\n}: QueryRuleCustomDataProps) => (\n  <Template\n    templateKey=\"default\"\n    templates={templates}\n    rootProps={{ className: cssClasses.root }}\n    data={{ items }}\n  />\n);\n\nexport default QueryRuleCustomData;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport CustomData from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport connectQueryRules from '../../connectors/query-rules/connectQueryRules';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  QueryRuleCustomDataComponentCSSClasses,\n  QueryRuleCustomDataComponentTemplates,\n} from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport type {\n  QueryRulesConnectorParams,\n  QueryRulesRenderState,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template } from '../../types';\n\nexport type QueryRuleCustomDataCSSClasses = Partial<{\n  root: string | string[];\n}>;\n\nexport type QueryRuleCustomDataTemplates = Partial<{\n  default: Template<{ items: any[] }>;\n}>;\n\nexport type QueryRuleCustomDataWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: QueryRuleCustomDataCSSClasses;\n  templates?: QueryRuleCustomDataTemplates;\n};\n\nexport type QueryRuleCustomDataWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleCustomData' },\n  QueryRulesConnectorParams,\n  QueryRuleCustomDataWidgetParams\n>;\n\nexport const defaultTemplates: QueryRuleCustomDataComponentTemplates = {\n  default: ({ items }) => JSON.stringify(items, null, 2),\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-custom-data',\n});\n\nconst suit = component('QueryRuleCustomData');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: QueryRuleCustomDataComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<QueryRuleCustomDataComponentTemplates>;\n    };\n    templates: QueryRuleCustomDataComponentTemplates;\n  }) =>\n  ({ items }: QueryRulesRenderState) => {\n    render(\n      <CustomData\n        cssClasses={cssClasses}\n        templates={templates}\n        items={items}\n      />,\n      containerNode\n    );\n  };\n\nconst queryRuleCustomData: QueryRuleCustomDataWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    transformItems = ((items) =>\n      items) as QueryRulesConnectorParams['transformItems'],\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n  };\n\n  const containerNode = getContainerNode(container);\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectQueryRules(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({\n      transformItems,\n    }),\n    $$widgetType: 'ais.queryRuleCustomData',\n  };\n};\n\nexport default queryRuleCustomData;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, Component } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type {\n  Range,\n  RangeBoundaries,\n} from '../../connectors/range/connectRange';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  RangeInputCSSClasses,\n  RangeInputTemplates,\n} from '../../widgets/range-input/range-input';\n\nexport type RangeInputComponentCSSClasses =\n  ComponentCSSClasses<RangeInputCSSClasses>;\n\nexport type RangeInputComponentTemplates = Required<RangeInputTemplates>;\n\nexport type RangeInputProps = {\n  min?: number;\n  max?: number;\n  step: number;\n  values: Partial<Range>;\n  cssClasses: RangeInputComponentCSSClasses;\n  templateProps: {\n    templates: RangeInputComponentTemplates;\n  };\n  refine(rangeValue: RangeBoundaries): void;\n};\n\nclass RangeInput extends Component<RangeInputProps, Partial<Range>> {\n  public state = {\n    min: this.props.values.min,\n    max: this.props.values.max,\n  };\n\n  public componentWillReceiveProps(nextProps: RangeInputProps) {\n    this.setState({\n      min: nextProps.values.min,\n      max: nextProps.values.max,\n    });\n  }\n\n  private onInput = (key: string) => (event: Event) => {\n    const { value } = event.currentTarget as HTMLInputElement;\n\n    this.setState({\n      [key]: Number(value),\n    });\n  };\n\n  private onSubmit = (event: Event) => {\n    event.preventDefault();\n\n    this.props.refine([this.state.min, this.state.max]);\n  };\n\n  public render() {\n    const { min: minValue, max: maxValue } = this.state;\n    const { min, max, step, cssClasses, templateProps } = this.props;\n    const isDisabled = min && max ? min >= max : false;\n    const hasRefinements = Boolean(minValue || maxValue);\n    const rootClassNames = cx(\n      cssClasses.root,\n      !hasRefinements && cssClasses.noRefinement\n    );\n\n    return (\n      <div className={rootClassNames}>\n        <form className={cssClasses.form} onSubmit={this.onSubmit}>\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMin)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={minValue ?? ''}\n              onInput={this.onInput('min')}\n              placeholder={min?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"separatorText\"\n            rootTagName=\"span\"\n            rootProps={{\n              className: cssClasses.separator,\n            }}\n          />\n\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMax)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={maxValue ?? ''}\n              onInput={this.onInput('max')}\n              placeholder={max?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"submitText\"\n            rootTagName=\"button\"\n            rootProps={{\n              type: 'submit',\n              className: cssClasses.submit,\n              disabled: isDisabled,\n            }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RangeInput;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RangeInput from '../../components/RangeInput/RangeInput';\nimport connectRange from '../../connectors/range/connectRange';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  RangeInputComponentCSSClasses,\n  RangeInputComponentTemplates,\n} from '../../components/RangeInput/RangeInput';\nimport type {\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-input' });\nconst suit = component('RangeInput');\n\nconst defaultTemplates: RangeInputComponentTemplates = {\n  separatorText() {\n    return 'to';\n  },\n  submitText() {\n    return 'Go';\n  },\n};\n\nexport type RangeInputTemplates = Partial<{\n  /**\n   * The label of the separator, between min and max.\n   * @default \"to\"\n   */\n  separatorText: Template;\n  /**\n   * The label of the submit button\n   * @default \"Go\"\n   */\n  submitText: Template;\n}>;\n\nexport type RangeInputCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinement: string | string[];\n  /**\n   * CSS class to add to the form element.\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the input element.\n   */\n  input: string | string[];\n  /**\n   * CSS class to add to the min input element.\n   */\n  inputMin: string | string[];\n  /**\n   * CSS class to add to the max input element.\n   */\n  separator: string | string[];\n  /**\n   * CSS class to add to the separator of the form.\n   */\n  inputMax: string | string[];\n  /**\n   * CSS class to add to the submit button of the form.\n   */\n  submit: string | string[];\n}>;\n\nexport type RangeInputWidgetParams = {\n  /**\n   * Valid CSS Selector as a string or DOMElement.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Labels to use for the widget.\n   */\n  templates?: RangeInputTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RangeInputCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeInputComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RangeInputComponentTemplates>;\n    };\n    templates: RangeInputTemplates;\n  }): Renderer<RangeRenderState, Partial<RangeInputWidgetParams>> =>\n  (\n    { refine, range, start, widgetParams, instantSearchInstance },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const { min: rangeMin, max: rangeMax } = range;\n    const [minValue, maxValue] = start;\n\n    const step = 1 / Math.pow(10, widgetParams.precision || 0);\n\n    const values = {\n      min:\n        minValue !== -Infinity && minValue !== rangeMin ? minValue : undefined,\n      max:\n        maxValue !== Infinity && maxValue !== rangeMax ? maxValue : undefined,\n    };\n\n    render(\n      <RangeInput\n        min={rangeMin}\n        max={rangeMax}\n        step={step}\n        values={values}\n        cssClasses={cssClasses}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeInputWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeInput';\n    $$type: 'ais.rangeInput';\n  },\n  RangeConnectorParams,\n  RangeInputWidgetParams\n>;\n\nconst rangeInput: RangeInputWidget = function rangeInput(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    precision = 0,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinement: cx(suit({ modifierName: 'noRefinement' })),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    inputMin: cx(\n      suit({ descendantName: 'input', modifierName: 'min' }),\n      userCssClasses.inputMin\n    ),\n    inputMax: cx(\n      suit({ descendantName: 'input', modifierName: 'max' }),\n      userCssClasses.inputMax\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      min,\n      max,\n      precision,\n    }),\n\n    $$type: 'ais.rangeInput',\n    $$widgetType: 'ais.rangeInput',\n  };\n};\n\nexport default rangeInput;\n","/**\n * This is a fork of Rheostat for Preact X.\n *\n * @see https://github.com/airbnb/rheostat\n */\n\n/** @jsx h */\n\nimport { h, Component, createRef } from 'preact';\n\nimport type { ComponentChildren, ComponentType, JSX } from 'preact';\n\ntype BoundingBox = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nconst KEYS = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  LEFT: 37,\n  PAGE_DOWN: 34,\n  PAGE_UP: 33,\n  RIGHT: 39,\n  UP: 38,\n} as const;\nconst PERCENT_EMPTY = 0;\nconst PERCENT_FULL = 100;\n\nfunction getPosition(value: number, min: number, max: number) {\n  return ((value - min) / (max - min)) * 100;\n}\n\nfunction getValue(pos: number, min: number, max: number) {\n  const decimal = pos / 100;\n\n  if (pos === 0) {\n    return min;\n  } else if (pos === 100) {\n    return max;\n  }\n\n  return Math.round((max - min) * decimal + min);\n}\n\nfunction getClassName(props: Props) {\n  const orientation =\n    props.orientation === 'vertical'\n      ? 'rheostat-vertical'\n      : 'rheostat-horizontal';\n\n  return ['rheostat', orientation]\n    .concat(props.className!.split(' '))\n    .join(' ');\n}\n\nfunction getHandleFor(ev: Event) {\n  return Number(\n    (ev.currentTarget as HTMLElement).getAttribute('data-handle-key')\n  );\n}\n\nfunction killEvent(ev: Event) {\n  ev.stopPropagation();\n  ev.preventDefault();\n}\n\nfunction Button(props: JSX.IntrinsicElements['button']) {\n  return <button {...props} type=\"button\" />;\n}\n\n// Preact doesn't have builtin types for Style, JSX.HTMLAttributes['style'] is just object\n// maybe migrate to csstype later?\ntype Style = {\n  position?: 'absolute';\n  top?: number | string;\n  left?: number | string;\n  height?: string;\n  width?: string;\n};\n\nexport type PitProps = {\n  children: number | string;\n  style: Style;\n};\n\nexport type HandleProps = {\n  'aria-valuemax'?: number;\n  'aria-valuemin'?: number;\n  'aria-valuenow'?: number;\n  'aria-disabled': boolean;\n  'data-handle-key': number;\n  className: 'rheostat-handle';\n  key: string;\n  onClick: (e: MouseEvent) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onMouseDown?: (e: MouseEvent) => void;\n  onTouchStart?: (e: TouchEvent) => void;\n  role: 'slider';\n  style: JSX.HTMLAttributes['style'];\n  tabIndex: number;\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  className?: string;\n  disabled?: boolean;\n  handle?: ComponentType<HandleProps>;\n  max?: number;\n  min?: number;\n  onClick?(...args: unknown[]): unknown;\n  onChange?(...args: unknown[]): unknown;\n  onKeyPress?(...args: unknown[]): unknown;\n  onSliderDragEnd?(...args: unknown[]): unknown;\n  onSliderDragMove?(...args: unknown[]): unknown;\n  onSliderDragStart?(...args: unknown[]): unknown;\n  onValuesUpdated?(...args: unknown[]): unknown;\n  orientation?: 'horizontal' | 'vertical';\n  pitComponent?: ComponentType<PitProps>;\n  pitPoints?: number[];\n  progressBar?: ComponentType<JSX.HTMLAttributes>;\n  snap?: boolean;\n  snapPoints?: number[];\n  values?: number[];\n};\n\ntype State = {\n  className: string;\n  handlePos: number[];\n  handleDimensions: number;\n  mousePos: { x: number; y: number } | null;\n  sliderBox: Partial<BoundingBox>;\n  slidingIndex: number | null;\n  values: number[];\n};\n\nclass Rheostat extends Component<Props, State> {\n  public static defaultProps = {\n    className: '',\n    children: null,\n    disabled: false,\n    handle: Button,\n    max: PERCENT_FULL,\n    min: PERCENT_EMPTY,\n    onClick: null,\n    onChange: null,\n    onKeyPress: null,\n    onSliderDragEnd: null,\n    onSliderDragMove: null,\n    onSliderDragStart: null,\n    onValuesUpdated: null,\n    orientation: 'horizontal',\n    pitComponent: null,\n    pitPoints: [],\n    progressBar: 'div',\n    snap: false,\n    snapPoints: [],\n    values: [PERCENT_EMPTY],\n  };\n\n  public state: State = {\n    className: getClassName(this.props),\n    // non-null thanks to defaultProps\n    handlePos: this.props.values!.map((value) =>\n      getPosition(value, this.props.min!, this.props.max!)\n    ),\n    handleDimensions: 0,\n    mousePos: null,\n    sliderBox: {},\n    slidingIndex: null,\n    // non-null thanks to defaultProps\n    values: this.props.values!,\n  };\n\n  private rheostat = createRef<HTMLDivElement>();\n\n  public constructor(props: Props) {\n    super(props);\n\n    this.getPublicState = this.getPublicState.bind(this);\n    this.getSliderBoundingBox = this.getSliderBoundingBox.bind(this);\n    this.getProgressStyle = this.getProgressStyle.bind(this);\n    this.getMinValue = this.getMinValue.bind(this);\n    this.getMaxValue = this.getMaxValue.bind(this);\n    this.getHandleDimensions = this.getHandleDimensions.bind(this);\n    this.getClosestSnapPoint = this.getClosestSnapPoint.bind(this);\n    this.getSnapPosition = this.getSnapPosition.bind(this);\n    this.getNextPositionForKey = this.getNextPositionForKey.bind(this);\n    this.getNextState = this.getNextState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getClosestHandle = this.getClosestHandle.bind(this);\n    this.setStartSlide = this.setStartSlide.bind(this);\n    this.startMouseSlide = this.startMouseSlide.bind(this);\n    this.startTouchSlide = this.startTouchSlide.bind(this);\n    this.handleMouseSlide = this.handleMouseSlide.bind(this);\n    this.handleTouchSlide = this.handleTouchSlide.bind(this);\n    this.handleSlide = this.handleSlide.bind(this);\n    this.endSlide = this.endSlide.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.validatePosition = this.validatePosition.bind(this);\n    this.validateValues = this.validateValues.bind(this);\n    this.canMove = this.canMove.bind(this);\n    this.fireChangeEvent = this.fireChangeEvent.bind(this);\n    this.slideTo = this.slideTo.bind(this);\n    this.updateNewValues = this.updateNewValues.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: Required<Props>) {\n    const { className, disabled, min, max, orientation } = this.props;\n    const { values, slidingIndex } = this.state;\n\n    const minMaxChanged = nextProps.min !== min || nextProps.max !== max;\n\n    const valuesChanged =\n      values.length !== nextProps.values.length ||\n      values.some((value, idx) => nextProps.values[idx] !== value);\n\n    const orientationChanged =\n      nextProps.className !== className ||\n      nextProps.orientation !== orientation;\n\n    const willBeDisabled = nextProps.disabled && !disabled;\n\n    if (orientationChanged) {\n      this.setState({\n        className: getClassName(nextProps),\n      });\n    }\n\n    if (minMaxChanged || valuesChanged) this.updateNewValues(nextProps);\n\n    if (willBeDisabled && slidingIndex !== null) {\n      this.endSlide();\n    }\n  }\n\n  private getPublicState() {\n    const { min, max } = this.props;\n    const { values } = this.state;\n\n    return { max, min, values };\n  }\n\n  private getSliderBoundingBox(): BoundingBox {\n    // only gets called after render, so it will always be defined\n    const node = this.rheostat.current!;\n    const rect = node.getBoundingClientRect();\n\n    return {\n      height: rect.height || node.clientHeight,\n      left: rect.left,\n      top: rect.top,\n      width: rect.width || node.clientWidth,\n    };\n  }\n\n  private getProgressStyle(idx: number): Style {\n    const { handlePos } = this.state;\n\n    const value = handlePos[idx];\n\n    if (idx === 0) {\n      return this.props.orientation === 'vertical'\n        ? { height: `${value}%`, top: 0 }\n        : { left: 0, width: `${value}%` };\n    }\n\n    const prevValue = handlePos[idx - 1];\n    const diffValue = value - prevValue;\n\n    return this.props.orientation === 'vertical'\n      ? { height: `${diffValue}%`, top: `${prevValue}%` }\n      : { left: `${prevValue}%`, width: `${diffValue}%` };\n  }\n\n  private getMinValue(idx: number) {\n    return this.state.values[idx - 1]\n      ? Math.max(this.props.min!, this.state.values[idx - 1])\n      : this.props.min;\n  }\n\n  private getMaxValue(idx: number) {\n    return this.state.values[idx + 1]\n      ? Math.min(this.props.max!, this.state.values[idx + 1])\n      : this.props.max;\n  }\n\n  private getHandleDimensions(ev: Event, sliderBox: BoundingBox) {\n    const handleNode = (ev.currentTarget as HTMLElement) || null;\n\n    if (!handleNode) return 0;\n\n    return this.props.orientation === 'vertical'\n      ? ((handleNode.clientHeight / sliderBox.height) * PERCENT_FULL) / 2\n      : ((handleNode.clientWidth / sliderBox.width) * PERCENT_FULL) / 2;\n  }\n\n  private getClosestSnapPoint(value: number) {\n    // non-null thanks to defaultProps\n    if (!this.props.snapPoints!.length) return value;\n\n    return this.props.snapPoints!.reduce((snapTo, snap) =>\n      Math.abs(snapTo - value) < Math.abs(snap - value) ? snapTo : snap\n    );\n  }\n\n  private getSnapPosition(positionPercent: number) {\n    if (!this.props.snap) return positionPercent;\n\n    const { max, min } = this.props as Required<Props>;\n\n    const value = getValue(positionPercent, min, max);\n\n    const snapValue = this.getClosestSnapPoint(value);\n\n    return getPosition(snapValue, min, max);\n  }\n\n  private getNextPositionForKey(idx: number, keyCode: number) {\n    const { handlePos, values } = this.state;\n    const { max, min, snapPoints } = this.props as Required<Props>;\n\n    const shouldSnap = this.props.snap;\n\n    let proposedValue = values[idx];\n    let proposedPercentage = handlePos[idx];\n    const originalPercentage = proposedPercentage;\n    let stepValue = 1;\n\n    if (max >= 100) {\n      proposedPercentage = Math.round(proposedPercentage);\n    } else {\n      stepValue = 100 / (max - min);\n    }\n\n    let currentIndex: number | null = null;\n\n    if (shouldSnap) {\n      currentIndex = snapPoints.indexOf(this.getClosestSnapPoint(values[idx]));\n    }\n\n    type StepMultiplier = { [key: number]: (value: number) => number };\n\n    const stepMultiplier: StepMultiplier = {\n      [KEYS.LEFT]: (v) => v * -1,\n      [KEYS.RIGHT]: (v) => v,\n      [KEYS.UP]: (v) => v,\n      [KEYS.DOWN]: (v) => v * -1,\n      [KEYS.PAGE_DOWN]: (v) => (v > 1 ? -v : v * -10),\n      [KEYS.PAGE_UP]: (v) => (v > 1 ? v : v * 10),\n    };\n\n    if (Object.prototype.hasOwnProperty.call(stepMultiplier, keyCode)) {\n      proposedPercentage += stepMultiplier[keyCode](stepValue);\n\n      if (shouldSnap) {\n        if (!currentIndex) {\n          // nothing happens\n        } else if (proposedPercentage > originalPercentage) {\n          // move cursor right unless overflow\n          if (currentIndex < snapPoints.length - 1) {\n            proposedValue = snapPoints[currentIndex + 1];\n          }\n          // move cursor left unless there is overflow\n        } else if (currentIndex > 0) {\n          proposedValue = snapPoints[currentIndex - 1];\n        }\n      }\n    } else if (keyCode === KEYS.HOME) {\n      proposedPercentage = PERCENT_EMPTY;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[0];\n      }\n    } else if (keyCode === KEYS.END) {\n      proposedPercentage = PERCENT_FULL;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[snapPoints.length - 1];\n      }\n    } else {\n      return null;\n    }\n\n    return shouldSnap\n      ? getPosition(proposedValue, min, max)\n      : proposedPercentage;\n  }\n\n  private getNextState(idx: number, proposedPosition: number) {\n    const { handlePos } = this.state;\n    const { max, min } = this.props as Required<Props>;\n\n    const actualPosition = this.validatePosition(idx, proposedPosition);\n\n    const nextHandlePos = handlePos.map((pos, index) =>\n      index === idx ? actualPosition : pos\n    );\n\n    return {\n      handlePos: nextHandlePos,\n      values: nextHandlePos.map((pos) => getValue(pos, min, max)),\n    };\n  }\n\n  private getClosestHandle(positionPercent: number) {\n    const { handlePos } = this.state;\n\n    return handlePos.reduce((closestIdx, _node, idx) => {\n      const challenger = Math.abs(handlePos[idx] - positionPercent);\n      const current = Math.abs(handlePos[closestIdx] - positionPercent);\n      return challenger < current ? idx : closestIdx;\n    }, 0);\n  }\n\n  private setStartSlide(ev: MouseEvent | TouchEvent, x: number, y: number) {\n    const sliderBox = this.getSliderBoundingBox();\n\n    this.setState({\n      handleDimensions: this.getHandleDimensions(ev, sliderBox),\n      mousePos: { x, y },\n      sliderBox,\n      slidingIndex: getHandleFor(ev),\n    });\n  }\n\n  private startMouseSlide(ev: MouseEvent) {\n    this.setStartSlide(ev, ev.clientX, ev.clientY);\n\n    document.addEventListener('mousemove', this.handleMouseSlide, false);\n    document.addEventListener('mouseup', this.endSlide, false);\n\n    killEvent(ev);\n  }\n\n  private startTouchSlide(ev: TouchEvent) {\n    if (ev.changedTouches.length > 1) return;\n\n    const touch = ev.changedTouches[0];\n\n    this.setStartSlide(ev, touch.clientX, touch.clientY);\n\n    document.addEventListener('touchmove', this.handleTouchSlide, false);\n    document.addEventListener('touchend', this.endSlide, false);\n\n    if (this.props.onSliderDragStart) this.props.onSliderDragStart();\n\n    killEvent(ev);\n  }\n\n  private handleMouseSlide(ev: MouseEvent) {\n    if (this.state.slidingIndex === null) return;\n    this.handleSlide(ev.clientX, ev.clientY);\n    killEvent(ev);\n  }\n\n  private handleTouchSlide(ev: TouchEvent) {\n    if (this.state.slidingIndex === null) return;\n\n    if (ev.changedTouches.length > 1) {\n      this.endSlide();\n      return;\n    }\n\n    const touch = ev.changedTouches[0];\n\n    this.handleSlide(touch.clientX, touch.clientY);\n    killEvent(ev);\n  }\n\n  private handleSlide(x: number, y: number) {\n    const { slidingIndex: idx, sliderBox } = this.state;\n\n    const positionPercent =\n      this.props.orientation === 'vertical'\n        ? ((y - sliderBox.top!) / sliderBox.height!) * PERCENT_FULL\n        : ((x - sliderBox.left!) / sliderBox.width!) * PERCENT_FULL;\n\n    this.slideTo(idx!, positionPercent);\n\n    if (this.canMove(idx!, positionPercent)) {\n      // update mouse positions\n      this.setState({ mousePos: { x, y } });\n      if (this.props.onSliderDragMove) this.props.onSliderDragMove();\n    }\n  }\n\n  private endSlide() {\n    const idx = this.state.slidingIndex;\n\n    this.setState({ slidingIndex: null });\n\n    document.removeEventListener('mouseup', this.endSlide, false);\n    document.removeEventListener('touchend', this.endSlide, false);\n    document.removeEventListener('touchmove', this.handleTouchSlide, false);\n    document.removeEventListener('mousemove', this.handleMouseSlide, false);\n\n    if (this.props.onSliderDragEnd) this.props.onSliderDragEnd();\n    if (this.props.snap) {\n      const positionPercent = this.getSnapPosition(this.state.handlePos[idx!]);\n      this.slideTo(idx!, positionPercent, () => this.fireChangeEvent());\n    } else {\n      this.fireChangeEvent();\n    }\n  }\n\n  private handleClick(ev: MouseEvent) {\n    if ((ev.target as HTMLDivElement).getAttribute('data-handle-key')) {\n      return;\n    }\n\n    // Calculate the position of the slider on the page so we can determine\n    // the position where you click in relativity.\n    const sliderBox = this.getSliderBoundingBox();\n\n    const positionDecimal =\n      this.props.orientation === 'vertical'\n        ? (ev.clientY - sliderBox.top) / sliderBox.height\n        : (ev.clientX - sliderBox.left) / sliderBox.width;\n\n    const positionPercent = positionDecimal * PERCENT_FULL;\n\n    const handleId = this.getClosestHandle(positionPercent);\n\n    const validPositionPercent = this.getSnapPosition(positionPercent);\n\n    // Move the handle there\n    this.slideTo(handleId, validPositionPercent, () => this.fireChangeEvent());\n\n    if (this.props.onClick) this.props.onClick();\n  }\n\n  private handleKeydown(ev: KeyboardEvent) {\n    const idx = getHandleFor(ev);\n\n    if (ev.keyCode === KEYS.ESC) {\n      (ev.currentTarget as HTMLElement).blur();\n      return;\n    }\n\n    const proposedPercentage = this.getNextPositionForKey(idx, ev.keyCode);\n\n    if (proposedPercentage === null) return;\n\n    if (this.canMove(idx, proposedPercentage)) {\n      this.slideTo(idx, proposedPercentage, () => this.fireChangeEvent());\n      if (this.props.onKeyPress) this.props.onKeyPress();\n    }\n\n    killEvent(ev);\n  }\n\n  // Make sure the proposed position respects the bounds and\n  // does not collide with other handles too much.\n  private validatePosition(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    return Math.max(\n      Math.min(\n        proposedPosition,\n        handlePos[idx + 1] !== undefined\n          ? handlePos[idx + 1] - handleDimensions\n          : PERCENT_FULL // 100% is the highest value\n      ),\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : PERCENT_EMPTY // 0% is the lowest value\n    );\n  }\n\n  private validateValues(proposedValues: number[], props: Required<Props>) {\n    const { max, min } = props || this.props;\n\n    return proposedValues.map((value, idx, values) => {\n      const realValue = Math.max(Math.min(value, max), min);\n\n      if (values.length && realValue < values[idx - 1]) {\n        return values[idx - 1];\n      }\n\n      return realValue;\n    });\n  }\n\n  public canMove(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    if (proposedPosition < PERCENT_EMPTY) return false;\n    if (proposedPosition > PERCENT_FULL) return false;\n\n    const nextHandlePosition =\n      handlePos[idx + 1] !== undefined\n        ? handlePos[idx + 1] - handleDimensions\n        : Infinity;\n\n    if (proposedPosition > nextHandlePosition) return false;\n\n    const prevHandlePosition =\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : -Infinity;\n\n    if (proposedPosition < prevHandlePosition) return false;\n\n    return true;\n  }\n\n  public fireChangeEvent() {\n    const { onChange } = this.props;\n    if (onChange) onChange(this.getPublicState());\n  }\n\n  public slideTo(\n    idx: number,\n    proposedPosition: number,\n    onAfterSet?: () => void\n  ) {\n    const nextState = this.getNextState(idx, proposedPosition);\n\n    this.setState(nextState, () => {\n      const { onValuesUpdated } = this.props;\n      if (onValuesUpdated) onValuesUpdated(this.getPublicState());\n      if (onAfterSet) onAfterSet();\n    });\n  }\n\n  public updateNewValues(nextProps: Required<Props>) {\n    const { slidingIndex } = this.state;\n\n    // Don't update while the slider is sliding\n    if (slidingIndex !== null) {\n      return;\n    }\n\n    const { max, min, values } = nextProps;\n\n    const nextValues = this.validateValues(values, nextProps);\n\n    this.setState(\n      {\n        handlePos: nextValues.map((value) => getPosition(value, min, max)),\n        values: nextValues,\n      },\n      () => this.fireChangeEvent()\n    );\n  }\n\n  public render() {\n    const {\n      children,\n      disabled,\n      handle: Handle,\n      max,\n      min,\n      orientation,\n      pitComponent: PitComponent,\n      pitPoints,\n      progressBar: ProgressBar,\n    } = this.props as Required<Props>; // all required thanks to defaultProps\n    const { className, handlePos, values } = this.state;\n\n    return (\n      <div\n        className={className}\n        ref={this.rheostat}\n        onClick={disabled ? undefined : this.handleClick}\n        style={{ position: 'relative' }}\n      >\n        <div className=\"rheostat-background\" />\n        {handlePos.map((pos, idx) => {\n          const handleStyle: Style =\n            orientation === 'vertical'\n              ? { top: `${pos}%`, position: 'absolute' }\n              : { left: `${pos}%`, position: 'absolute' };\n\n          return (\n            <Handle\n              aria-valuemax={this.getMaxValue(idx)}\n              aria-valuemin={this.getMinValue(idx)}\n              aria-valuenow={values[idx]}\n              aria-disabled={disabled}\n              data-handle-key={idx}\n              className=\"rheostat-handle\"\n              key={`handle-${idx}`}\n              onClick={killEvent}\n              onKeyDown={disabled ? undefined : this.handleKeydown}\n              onMouseDown={disabled ? undefined : this.startMouseSlide}\n              onTouchStart={disabled ? undefined : this.startTouchSlide}\n              role=\"slider\"\n              style={handleStyle}\n              tabIndex={0}\n            />\n          );\n        })}\n\n        {handlePos.map((_node, idx, arr) => {\n          if (idx === 0 && arr.length > 1) {\n            return null;\n          }\n\n          return (\n            <ProgressBar\n              className=\"rheostat-progress\"\n              key={`progress-bar-${idx}`}\n              style={this.getProgressStyle(idx)}\n            />\n          );\n        })}\n\n        {PitComponent &&\n          pitPoints.map((n) => {\n            const pos = getPosition(n, min, max);\n            const pitStyle: Style =\n              orientation === 'vertical'\n                ? { top: `${pos}%`, position: 'absolute' }\n                : { left: `${pos}%`, position: 'absolute' };\n\n            return (\n              <PitComponent key={`pit-${n}`} style={pitStyle}>\n                {n}\n              </PitComponent>\n            );\n          })}\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Rheostat;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, Component } from 'preact';\n\nimport { range } from '../../lib/utils';\n\nimport Pit from './Pit';\nimport Rheostat from './Rheostat';\n\nimport type { RangeBoundaries } from '../../connectors/range/connectRange';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  RangeSliderCssClasses,\n  RangeSliderWidgetParams,\n} from '../../widgets/range-slider/range-slider';\nimport type { HandleProps } from './Rheostat';\n\nexport type RangeSliderComponentCSSClasses =\n  ComponentCSSClasses<RangeSliderCssClasses>;\n\nexport type SliderProps = {\n  refine(values: RangeBoundaries): void;\n  min?: number;\n  max?: number;\n  values: RangeBoundaries;\n  pips?: boolean;\n  step?: number;\n  tooltips?: RangeSliderWidgetParams['tooltips'];\n  cssClasses: RangeSliderComponentCSSClasses;\n};\n\nclass Slider extends Component<SliderProps> {\n  private get isDisabled() {\n    return this.props.min! >= this.props.max!;\n  }\n\n  private handleChange = ({ values }: { values: RangeBoundaries }) => {\n    if (!this.isDisabled) {\n      this.props.refine(values);\n    }\n  };\n\n  // creates an array number where to display a pit point on the slider\n  private computeDefaultPitPoints({ min, max }: { min: number; max: number }) {\n    const totalLength = max - min;\n    const steps = 34;\n    const stepsLength = totalLength / steps;\n\n    const pitPoints = [\n      min,\n      ...range({\n        end: steps - 1,\n      }).map((step) => min + stepsLength * (step + 1)),\n      max,\n    ];\n\n    return pitPoints;\n  }\n\n  // creates an array of values where the slider should snap to\n  private computeSnapPoints({\n    min,\n    max,\n    step,\n  }: {\n    min: number;\n    max: number;\n    step?: number;\n  }) {\n    if (!step) return undefined;\n    return [...range({ start: min, end: max, step }), max];\n  }\n\n  private createHandleComponent =\n    (tooltips: RangeSliderWidgetParams['tooltips']) => (props: HandleProps) => {\n      // display only two decimals after comma,\n      // and apply `tooltips.format()` if any\n      const roundedValue =\n        Math.round(\n          // have to cast as a string, as the value given to the prop is a number, but becomes a string when read\n          parseFloat(props['aria-valuenow'] as unknown as string) * 100\n        ) / 100;\n      const value =\n        typeof tooltips === 'object' && tooltips.format\n          ? tooltips.format(roundedValue)\n          : roundedValue;\n\n      const className = cx(\n        props.className,\n        props['data-handle-key'] === 0 && 'rheostat-handle-lower',\n        props['data-handle-key'] === 1 && 'rheostat-handle-upper'\n      );\n\n      return (\n        <div {...props} className={className}>\n          {tooltips && <div className=\"rheostat-tooltip\">{value}</div>}\n        </div>\n      );\n    };\n\n  public render() {\n    const { tooltips, step, pips, values, cssClasses } = this.props;\n\n    // @TODO: figure out why this.props needs to be non-null asserted\n    const { min, max } = this.isDisabled\n      ? { min: this.props.min!, max: this.props.max! + 0.001 }\n      : (this.props as Required<SliderProps>);\n\n    const snapPoints = this.computeSnapPoints({ min, max, step });\n    const pitPoints =\n      pips === false ? [] : this.computeDefaultPitPoints({ min, max });\n\n    return (\n      <div\n        className={cx(\n          cssClasses.root,\n          this.isDisabled && cssClasses.disabledRoot\n        )}\n      >\n        <Rheostat\n          handle={this.createHandleComponent(tooltips)}\n          onChange={this.handleChange}\n          min={min}\n          max={max}\n          pitComponent={Pit}\n          pitPoints={pitPoints}\n          snap={true}\n          snapPoints={snapPoints}\n          values={(this.isDisabled ? [min, max] : values) as number[]}\n          disabled={this.isDisabled}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Slider from '../../components/Slider/Slider';\nimport connectRange from '../../connectors/range/connectRange';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type { RangeSliderComponentCSSClasses } from '../../components/Slider/Slider';\nimport type {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-slider' });\nconst suit = component('RangeSlider');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    pips,\n    step,\n    tooltips,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeSliderComponentCSSClasses;\n    pips: boolean;\n    step?: number;\n    tooltips: RangeSliderWidgetParams['tooltips'];\n  }): Renderer<RangeRenderState, Partial<RangeSliderWidgetParams>> =>\n  ({ refine, range, start }, isFirstRendering) => {\n    if (isFirstRendering) {\n      // There's no information at this point, let's render nothing.\n      return;\n    }\n\n    const { min: minRange, max: maxRange } = range;\n\n    const [minStart, maxStart] = start;\n    const minFinite = minStart === -Infinity ? minRange : minStart;\n    const maxFinite = maxStart === Infinity ? maxRange : maxStart;\n\n    // Clamp values to the range for avoid extra rendering & refinement\n    // Should probably be done on the connector side, but we need to stay\n    // backward compatible so we still need to pass [-Infinity, Infinity]\n    const values: RangeBoundaries = [\n      minFinite! > maxRange! ? maxRange : minFinite,\n      maxFinite! < minRange! ? minRange : maxFinite,\n    ];\n\n    render(\n      <Slider\n        cssClasses={cssClasses}\n        refine={refine}\n        min={minRange}\n        max={maxRange}\n        values={values}\n        tooltips={tooltips}\n        step={step}\n        pips={pips}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeSliderCssClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the disabled root element.\n   */\n  disabledRoot: string | string[];\n}>;\n\ntype RangeSliderTooltipOptions = {\n  /**\n   * The function takes the raw value as input, and should return\n   * a string for the label that should be used for this value.\n   * @example\n   * { format(rawValue) {return '$' + Math.round(rawValue).toLocaleString() } }\n   */\n  format(value: number): string;\n};\n\nexport type RangeSliderWidgetParams = {\n  /**\n   * CSS Selector or DOMElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.;\n   */\n  attribute: string;\n  /**\n   * Should we show tooltips or not.\n   * The default tooltip will show the raw value.\n   * You can also provide an object with a format function as an attribute.\n   * So that you can format the tooltip display value as you want.\n   * @default true\n   */\n  tooltips?: boolean | RangeSliderTooltipOptions;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RangeSliderCssClasses;\n  /**\n   * Show slider pips.\n   * @default true\n   */\n  pips?: boolean;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Every handle move will jump that number of steps.\n   */\n  step?: number;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n};\n\nexport type RangeSliderWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeSlider';\n    $$type: 'ais.rangeSlider';\n  },\n  RangeConnectorParams,\n  RangeSliderWidgetParams\n>;\n\n/**\n * The range slider is a widget which provides a user-friendly way to filter the\n * results based on a single numeric range.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n */\nconst rangeSlider: RangeSliderWidget = function rangeSlider(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    cssClasses: userCssClasses = {},\n    step,\n    pips = true,\n    precision = 0,\n    tooltips = true,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    disabledRoot: cx(\n      suit({ modifierName: 'disabled' }),\n      userCssClasses.disabledRoot\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    step,\n    pips,\n    tooltips,\n    cssClasses,\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, min, max, precision }),\n\n    $$type: 'ais.rangeSlider',\n    $$widgetType: 'ais.rangeSlider',\n  };\n};\n\nexport default rangeSlider;\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type {\n  RatingMenuComponentTemplates,\n  RatingMenuCSSClasses,\n} from './rating-menu';\nimport type { ComponentChild } from 'preact';\n\ntype ItemWrapperProps = { children: ComponentChild } & {\n  value: string;\n  count: number;\n  url: string;\n  cssClasses: RatingMenuCSSClasses;\n};\n\nfunction ItemWrapper({\n  children,\n  count,\n  value,\n  url,\n  cssClasses,\n}: ItemWrapperProps) {\n  if (count) {\n    return (\n      <a\n        className={cx(cssClasses.link)}\n        aria-label={`${value} & up`}\n        href={url}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <div className={cx(cssClasses.link)} aria-label={`${value} & up`} disabled>\n      {children}\n    </div>\n  );\n}\n\nconst defaultTemplates: RatingMenuComponentTemplates = {\n  item({ count, value, url, stars, cssClasses }) {\n    return (\n      <ItemWrapper\n        count={count}\n        value={value}\n        url={url}\n        cssClasses={cssClasses}\n      >\n        {stars.map((isFull, index) => (\n          <svg\n            key={index}\n            className={cx(\n              cssClasses.starIcon,\n              isFull ? cssClasses.fullStarIcon : cssClasses.emptyStarIcon\n            )}\n            aria-hidden=\"true\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <use\n              xlinkHref={\n                isFull\n                  ? '#ais-RatingMenu-starSymbol'\n                  : '#ais-RatingMenu-starEmptySymbol'\n              }\n            />\n          </svg>\n        ))}\n        <span className={cx(cssClasses.label)}>&amp; Up</span>\n        {count && (\n          <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n        )}\n      </ItemWrapper>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectRatingMenu from '../../connectors/rating-menu/connectRatingMenu';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams,\n  RatingMenuRenderState,\n} from '../../connectors/rating-menu/connectRatingMenu';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'rating-menu' });\nconst suit = component('RatingMenu');\n\nexport type RatingMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    stars: [boolean, boolean, boolean, boolean, boolean];\n    cssClasses: RatingMenuCSSClasses;\n    attribute?: string;\n    isFromSearch?: boolean;\n  }>;\n}>;\n\nexport type RatingMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add the selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add a disabled item element.\n   */\n  disabledItem: string | string[];\n  /**\n   * CSS class to add to each link element.\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each star element (when using the default template).\n   */\n  starIcon: string | string[];\n  /**\n   * CSS class to add to each full star element (when using the default template).\n   */\n  fullStarIcon: string | string[];\n  /**\n   * CSS class to add to each empty star element (when using the default template).\n   */\n  emptyStarIcon: string | string[];\n  /**\n   * CSS class to add to each label.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each counter.\n   */\n  count: string | string[];\n}>;\n\nexport type RatingMenuComponentCSSClasses =\n  ComponentCSSClasses<RatingMenuCSSClasses>;\n\nexport type RatingMenuComponentTemplates = Required<RatingMenuTemplates>;\n\nexport type RatingMenuWidgetParams = {\n  /**\n   * Place where to insert the widget in your webpage.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute in your records that contains the ratings.\n   */\n  attribute: string;\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RatingMenuTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RatingMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RatingMenuComponentCSSClasses;\n    templates: RatingMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RatingMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n    }: RatingMenuRenderState & RendererOptions<RatingMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n      >\n        <svg style=\"display:none;\">\n          <symbol\n            id={suit({ descendantName: 'starSymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n          </symbol>\n          <symbol\n            id={suit({ descendantName: 'starEmptySymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n          </symbol>\n        </svg>\n      </RefinementList>,\n      containerNode\n    );\n  };\n\n/**\n * Rating menu is used for displaying grade like filters. The values are normalized within boundaries.\n *\n * The maximum value can be set (with `max`), the minimum is always 0.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n *\n * @type {WidgetFactory}\n * @devNovel RatingMenu\n * @category filter\n * @param {RatingMenuWidgetParams} widgetParams RatingMenu widget options.\n * @return {Widget} A new RatingMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.ratingMenu({\n *     container: '#stars',\n *     attribute: 'rating',\n *     max: 5,\n *   })\n * ]);\n */\nexport type RatingMenuWidget = WidgetFactory<\n  RatingMenuWidgetDescription & { $$widgetType: 'ais.ratingMenu' },\n  RatingMenuConnectorParams,\n  RatingMenuWidgetParams\n>;\n\nconst ratingMenu: RatingMenuWidget = function ratingMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    max = 5,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    starIcon: cx(suit({ descendantName: 'starIcon' }), userCssClasses.starIcon),\n    fullStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'full' }),\n      userCssClasses.fullStarIcon\n    ),\n    emptyStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'empty' }),\n      userCssClasses.emptyStarIcon\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRatingMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, max }),\n    $$widgetType: 'ais.ratingMenu',\n  };\n};\n\nexport default ratingMenu;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\n\nconst defaultTemplate: SearchBoxComponentTemplates = {\n  reset({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.resetIcon}\n        viewBox=\"0 0 20 20\"\n        width=\"10\"\n        height=\"10\"\n      >\n        <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\" />\n      </svg>\n    );\n  },\n  submit({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.submitIcon}\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 40 40\"\n      >\n        <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\" />\n      </svg>\n    );\n  },\n  loadingIndicator({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.loadingIcon}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 38 38\"\n        stroke=\"#444\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur=\"1s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n          </g>\n        </g>\n      </svg>\n    );\n  },\n};\n\nexport default defaultTemplate;\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\n\nimport type { RefinementListComponentTemplates } from './refinement-list';\n\nconst defaultTemplates: RefinementListComponentTemplates = {\n  item({ cssClasses, count, value, highlighted, isRefined, isFromSearch }) {\n    return (\n      <label className={cx(cssClasses.label)}>\n        <input\n          type=\"checkbox\"\n          className={cx(cssClasses.checkbox)}\n          value={value}\n          defaultChecked={isRefined}\n        />\n        {/* @MAJOR: use the `<Highlight>` component instead */}\n        <span\n          className={cx(cssClasses.labelText)}\n          dangerouslySetInnerHTML={\n            isFromSearch ? { __html: highlighted } : undefined\n          }\n        >\n          {!isFromSearch && highlighted}\n        </span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </label>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n  searchableNoResults() {\n    return 'No results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport connectRefinementList from '../../connectors/refinement-list/connectRefinementList';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport searchBoxDefaultTemplates from '../search-box/defaultTemplates';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type { RefinementListComponentCSSClasses } from '../../components/RefinementList/RefinementList';\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\nimport type {\n  RefinementListRenderState,\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n} from '../../connectors/refinement-list/connectRefinementList';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Template, WidgetFactory, Renderer } from '../../types';\nimport type { SearchBoxTemplates } from '../search-box/search-box';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n});\nconst suit = component('RefinementList');\nconst searchBoxSuit = component('SearchBox');\n\nexport type RefinementListOwnCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the root element with no results.\n   */\n  noResults: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each label element (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each checkbox element (when using the default template).\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n  /**\n   * CSS class to add to the show more element\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element\n   */\n  disabledShowMore: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the searchable container.\n   */\n  searchBox: string | string[];\n}>;\n\ntype RefinementListSearchableCSSClasses = Partial<{\n  searchableRoot: string | string[];\n  searchableForm: string | string[];\n  searchableInput: string | string[];\n  searchableSubmit: string | string[];\n  searchableSubmitIcon: string | string[];\n  searchableReset: string | string[];\n  searchableResetIcon: string | string[];\n  searchableLoadingIndicator: string | string[];\n  searchableLoadingIcon: string | string[];\n}>;\n\nexport type RefinementListCSSClasses = RefinementListOwnCSSClasses &\n  RefinementListSearchableCSSClasses;\n\nexport type RefinementListItemData = {\n  /**\n   * The number of occurrences of the facet in the result set.\n   */\n  count: number;\n  /**\n   * True if the value is selected.\n   */\n  isRefined: boolean;\n  /**\n   * The label to display.\n   */\n  label: string;\n  /**\n   * The value used for refining.\n   */\n  value: string;\n  /**\n   * The label highlighted (when using search for facet values). This value is displayed in the default template.\n   */\n  highlighted: string;\n  /**\n   * The url with this refinement selected.\n   */\n  url: string;\n  /**\n   * Object containing all the classes computed for the item.\n   */\n  cssClasses: RefinementListCSSClasses;\n  /**\n   * Whether the `items` prop contains facet values from the global search or from the search inside the items.\n   */\n  isFromSearch: boolean;\n};\n\nexport type RefinementListOwnTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `highlighted`, `value`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<RefinementListItemData>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n  /**\n   * Templates to use for search for facet values when there are no results.\n   */\n  searchableNoResults: Template;\n}>;\n\ntype RefinementListSearchableTemplates = Partial<{\n  /**\n   * Templates to use for search for facet values submit button.\n   */\n  searchableSubmit: SearchBoxTemplates['submit'];\n  /**\n   * Templates to use for search for facet values reset button.\n   */\n  searchableReset: SearchBoxTemplates['reset'];\n  /**\n   * Templates to use for the search for facet values loading indicator.\n   */\n  searchableLoadingIndicator: SearchBoxTemplates['loadingIndicator'];\n}>;\n\nexport type RefinementListTemplates = RefinementListOwnTemplates &\n  RefinementListSearchableTemplates;\nexport type RefinementListComponentTemplates =\n  Required<RefinementListOwnTemplates>;\n\nexport type RefinementListWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Add a search input to let the user search for more facet values. In order\n   * to make this feature work, you need to make the attribute searchable\n   * [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting)\n   * or [the dashboard](https://www.algolia.com/explorer/display/)\n   */\n  searchable?: boolean;\n  /**\n   * Value of the search field placeholder.\n   */\n  searchablePlaceholder?: string;\n  /**\n   * When `false` the search field will become disabled if there are less items\n   * to display than the `options.limit`, otherwise the search field is always usable.\n   */\n  searchableIsAlwaysActive?: boolean;\n  /**\n   * When activated, it will escape the facet values that are returned from Algolia.\n   * In this case, the surrounding tags will always be `<mark></mark>`.\n   */\n  searchableEscapeFacetValues?: boolean;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RefinementListTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RefinementListCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates,\n    renderState,\n    showMore,\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RefinementListComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RefinementListComponentTemplates>;\n      searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n    };\n    templates: RefinementListOwnTemplates;\n    searchBoxTemplates: SearchBoxTemplates;\n    showMore?: boolean;\n    searchable?: boolean;\n    searchablePlaceholder?: string;\n    searchableIsAlwaysActive?: boolean;\n  }): Renderer<RefinementListRenderState, RefinementListConnectorParams> =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      searchForItems,\n      isFromSearch,\n      instantSearchInstance,\n      toggleShowMore,\n      isShowingMore,\n      hasExhaustiveItems,\n      canToggleShowMore,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      renderState.searchBoxTemplateProps = prepareTemplateProps({\n        defaultTemplates: searchBoxDefaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates: searchBoxTemplates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        searchBoxTemplateProps={renderState.searchBoxTemplateProps}\n        toggleRefinement={refine}\n        searchFacetValues={searchable ? searchForItems : undefined}\n        searchPlaceholder={searchablePlaceholder}\n        searchIsAlwaysActive={searchableIsAlwaysActive}\n        isFromSearch={isFromSearch}\n        showMore={showMore && !isFromSearch && items.length > 0}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        hasExhaustiveItems={hasExhaustiveItems}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type RefinementListWidget = WidgetFactory<\n  RefinementListWidgetDescription & { $$widgetType: 'ais.refinementList' },\n  RefinementListConnectorParams,\n  RefinementListWidgetParams\n>;\n\n/**\n * The refinement list widget is one of the most common widget that you can find\n * in a search UI. With this widget, the user can filter the dataset based on facets.\n *\n * The refinement list displays only the most relevant facets for the current search\n * context. The sort option only affects the facet that are returned by the engine,\n * not which facets are returned.\n *\n * This widget also implements search for facet values, which is a mini search inside the\n * values of the facets. This makes easy to deal with uncommon facet values.\n *\n * @requirements\n *\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * If you also want to use search for facet values on this attribute, you need to make it searchable using the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).\n */\nconst refinementList: RefinementListWidget = function refinementList(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    operator,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    searchable = false,\n    searchablePlaceholder = 'Search...',\n    searchableEscapeFacetValues = true,\n    searchableIsAlwaysActive = true,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const escapeFacetValues = searchable\n    ? Boolean(searchableEscapeFacetValues)\n    : false;\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    searchBox: cx(\n      suit({ descendantName: 'searchBox' }),\n      userCssClasses.searchBox\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    noResults: cx(\n      suit({ descendantName: 'noResults' }),\n      userCssClasses.noResults\n    ),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n    searchable: {\n      root: cx(searchBoxSuit(), userCssClasses.searchableRoot),\n      form: cx(\n        searchBoxSuit({ descendantName: 'form' }),\n        userCssClasses.searchableForm\n      ),\n      input: cx(\n        searchBoxSuit({ descendantName: 'input' }),\n        userCssClasses.searchableInput\n      ),\n      submit: cx(\n        searchBoxSuit({ descendantName: 'submit' }),\n        userCssClasses.searchableSubmit\n      ),\n      submitIcon: cx(\n        searchBoxSuit({ descendantName: 'submitIcon' }),\n        userCssClasses.searchableSubmitIcon\n      ),\n      reset: cx(\n        searchBoxSuit({ descendantName: 'reset' }),\n        userCssClasses.searchableReset\n      ),\n      resetIcon: cx(\n        searchBoxSuit({ descendantName: 'resetIcon' }),\n        userCssClasses.searchableResetIcon\n      ),\n      loadingIndicator: cx(\n        searchBoxSuit({ descendantName: 'loadingIndicator' }),\n        userCssClasses.searchableLoadingIndicator\n      ),\n      loadingIcon: cx(\n        searchBoxSuit({ descendantName: 'loadingIcon' }),\n        userCssClasses.searchableLoadingIcon\n      ),\n    },\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates: {\n      submit: templates.searchableSubmit,\n      reset: templates.searchableReset,\n      loadingIndicator: templates.searchableLoadingIndicator,\n    },\n    renderState: {},\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n    showMore,\n  });\n\n  const makeWidget = connectRefinementList(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      operator,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      escapeFacetValues,\n      transformItems,\n    }),\n    $$widgetType: 'ais.refinementList',\n  };\n};\n\nexport default refinementList;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  RelevantSortCSSClasses,\n  RelevantSortTemplates,\n} from '../../widgets/relevant-sort/relevant-sort';\n\nexport type RelevantSortComponentCSSClasses =\n  ComponentCSSClasses<RelevantSortCSSClasses>;\n\nexport type RelevantSortComponentTemplates = Required<RelevantSortTemplates>;\n\ntype RelevantSortProps = {\n  cssClasses: RelevantSortComponentCSSClasses;\n  templates: RelevantSortComponentTemplates;\n  isRelevantSorted: boolean;\n  isVirtualReplica: boolean;\n  refine(relevancyStrictness: number | undefined): void;\n};\n\nconst RelevantSort = ({\n  cssClasses,\n  templates,\n  isRelevantSorted,\n  isVirtualReplica,\n  refine,\n}: RelevantSortProps) =>\n  isVirtualReplica ? (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"text\"\n        templates={templates}\n        rootProps={{\n          className: cssClasses.text,\n        }}\n        data={{ isRelevantSorted }}\n      />\n      <button\n        type=\"button\"\n        className={cssClasses.button}\n        onClick={() => {\n          if (isRelevantSorted) {\n            refine(0);\n          } else {\n            refine(undefined);\n          }\n        }}\n      >\n        <Template\n          rootTagName=\"span\"\n          templateKey=\"button\"\n          templates={templates}\n          data={{ isRelevantSorted }}\n        />\n      </button>\n    </div>\n  ) : null;\n\nexport default RelevantSort;\n","import type { RelevantSortComponentTemplates } from '../../components/RelevantSort/RelevantSort';\n\nconst defaultTemplates: RelevantSortComponentTemplates = {\n  text() {\n    return '';\n  },\n  button({ isRelevantSorted }) {\n    return isRelevantSorted ? 'See all results' : 'See relevant results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport RelevantSort from '../../components/RelevantSort/RelevantSort';\nimport connectRelevantSort from '../../connectors/relevant-sort/connectRelevantSort';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  RelevantSortComponentCSSClasses,\n  RelevantSortComponentTemplates,\n} from '../../components/RelevantSort/RelevantSort';\nimport type {\n  RelevantSortConnectorParams,\n  RelevantSortRenderState,\n  RelevantSortWidgetDescription,\n} from '../../connectors/relevant-sort/connectRelevantSort';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { WidgetFactory, Template } from '../../types';\n\nexport type RelevantSortCSSClasses = Partial<{\n  root: string;\n  text: string;\n  button: string;\n}>;\n\nexport type RelevantSortTemplates = Partial<{\n  text: Template<{ isRelevantSorted: boolean }>;\n  button: Template<{ isRelevantSorted: boolean }>;\n}>;\n\nexport type RelevantSortWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: RelevantSortCSSClasses;\n  templates?: RelevantSortTemplates;\n};\n\nexport type RelevantSortWidget = WidgetFactory<\n  RelevantSortWidgetDescription & { $$widgetType: 'ais.relevantSort' },\n  RelevantSortConnectorParams,\n  RelevantSortWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'relevant-sort',\n});\n\nconst suit = component('RelevantSort');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RelevantSortComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RelevantSortComponentTemplates>;\n    };\n    templates: RelevantSortComponentTemplates;\n  }) =>\n  ({ isRelevantSorted, isVirtualReplica, refine }: RelevantSortRenderState) => {\n    render(\n      <RelevantSort\n        cssClasses={cssClasses}\n        templates={templates}\n        isRelevantSorted={isRelevantSorted}\n        isVirtualReplica={isVirtualReplica}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nconst relevantSort: RelevantSortWidget = (widgetParams) => {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams;\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRelevantSort(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.relevantSort',\n  };\n};\n\nexport default relevantSort;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport connectSearchBox from '../../connectors/search-box/connectSearchBox';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../../components/SearchBox/SearchBox';\nimport type {\n  SearchBoxConnectorParams,\n  SearchBoxRenderState,\n  SearchBoxWidgetDescription,\n} from '../../connectors/search-box/connectSearchBox';\nimport type { WidgetFactory, Template, RendererOptions } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'search-box' });\nconst suit = component('SearchBox');\n\nexport type SearchBoxTemplates = Partial<{\n  /**\n   * Template used for displaying the submit button. Can accept a function or a Hogan string.\n   */\n  submit: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the reset button. Can accept a function or a Hogan string.\n   */\n  reset: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the loading indicator. Can accept a function or a Hogan string.\n   */\n  loadingIndicator: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n}>;\n\nexport type SearchBoxCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping `<div>`\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the form\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the input.\n   */\n  input: string | string[];\n  /**\n   * CSS classes added to the submit button.\n   */\n  submit: string | string[];\n  /**\n   * CSS classes added to the submit icon.\n   */\n  submitIcon: string | string[];\n  /**\n   * CSS classes added to the reset button.\n   */\n  reset: string | string[];\n  /**\n   * CSS classes added to the reset icon.\n   */\n  resetIcon: string | string[];\n  /**\n   * CSS classes added to the loading indicator element.\n   */\n  loadingIndicator: string | string[];\n  /**\n   * CSS classes added to the loading indicator icon.\n   */\n  loadingIcon: string | string[];\n}>;\n\nexport type SearchBoxWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget\n   */\n  container: string | HTMLElement;\n  /**\n   * The placeholder of the input\n   */\n  placeholder?: string;\n  /**\n   * Whether the input should be autofocused\n   */\n  autofocus?: boolean;\n  /**\n   * If set, trigger the search\n   * once `<Enter>` is pressed only.\n   */\n  searchAsYouType?: boolean;\n  /**\n   * Whether to show the reset button\n   */\n  showReset?: boolean;\n  /**\n   * Whether to show the submit button\n   */\n  showSubmit?: boolean;\n  /**\n   * Whether to show the loading indicator (replaces the submit if\n   * the search is stalled)\n   */\n  showLoadingIndicator?: boolean;\n  /**\n   * CSS classes to add\n   */\n  cssClasses?: SearchBoxCSSClasses;\n\n  /**\n   * Templates used for customizing the rendering of the searchbox\n   */\n  templates?: SearchBoxTemplates;\n  /**\n   * A function that is called every time a new search is done. You\n   * will get the query as the first parameter and a search (query) function to call as the second parameter.\n   * This `queryHook` can be used to debounce the number of searches done from the search box.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SearchBoxComponentCSSClasses;\n    placeholder: string;\n    templates: SearchBoxComponentTemplates;\n    autofocus: boolean;\n    searchAsYouType: boolean;\n    showReset: boolean;\n    showSubmit: boolean;\n    showLoadingIndicator: boolean;\n  }) =>\n  ({\n    refine,\n    query,\n    isSearchStalled,\n  }: SearchBoxRenderState & RendererOptions<SearchBoxConnectorParams>) => {\n    render(\n      <SearchBox\n        query={query}\n        placeholder={placeholder}\n        autofocus={autofocus}\n        refine={refine}\n        searchAsYouType={searchAsYouType}\n        templates={templates}\n        showSubmit={showSubmit}\n        showReset={showReset}\n        showLoadingIndicator={showLoadingIndicator}\n        isSearchStalled={isSearchStalled}\n        cssClasses={cssClasses}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The searchbox widget is used to let the user set a text based query.\n *\n * This is usually the  main entry point to start the search in an instantsearch context. For that\n * reason is usually placed on top, and not hidden so that the user can start searching right\n * away.\n *\n */\nexport type SearchBoxWidget = WidgetFactory<\n  SearchBoxWidgetDescription & { $$widgetType: 'ais.searchBox' },\n  SearchBoxConnectorParams,\n  SearchBoxWidgetParams\n>;\n\nconst searchBox: SearchBoxWidget = function searchBox(widgetParams) {\n  const {\n    container,\n    placeholder = '',\n    cssClasses: userCssClasses = {},\n    autofocus = false,\n    searchAsYouType = true,\n    showReset = true,\n    showSubmit = true,\n    showLoadingIndicator = true,\n    queryHook,\n    templates: userTemplates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n    submitIcon: cx(\n      suit({ descendantName: 'submitIcon' }),\n      userCssClasses.submitIcon\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n    resetIcon: cx(\n      suit({ descendantName: 'resetIcon' }),\n      userCssClasses.resetIcon\n    ),\n    loadingIndicator: cx(\n      suit({ descendantName: 'loadingIndicator' }),\n      userCssClasses.loadingIndicator\n    ),\n    loadingIcon: cx(\n      suit({ descendantName: 'loadingIcon' }),\n      userCssClasses.loadingIcon\n    ),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  });\n\n  const makeWidget = connectSearchBox(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ queryHook }),\n    $$widgetType: 'ais.searchBox',\n  };\n};\n\nexport default searchBox;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Selector from '../../components/Selector/Selector';\nimport connectSortBy from '../../connectors/sort-by/connectSortBy';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type { SelectorComponentCSSClasses } from '../../components/Selector/Selector';\nimport type {\n  SortByConnectorParams,\n  SortByItem,\n  SortByRenderState,\n  SortByWidgetDescription,\n} from '../../connectors/sort-by/connectSortBy';\nimport type { Renderer, TransformItems, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'sort-by' });\nconst suit = component('SortBy');\n\nexport type SortByWidgetCssClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type SortByIndexDefinition = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByIndexDefinition[];\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: SortByWidgetCssClasses;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByWidget = WidgetFactory<\n  SortByWidgetDescription & { $$widgetType: 'ais.sortBy' },\n  SortByConnectorParams,\n  SortByWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SelectorComponentCSSClasses;\n  }): Renderer<SortByRenderState, SortByWidgetParams> =>\n  ({ currentRefinement, options, refine }, isFirstRendering) => {\n    if (isFirstRendering) {\n      return;\n    }\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentRefinement}\n          options={options}\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\n/**\n * Sort by selector is a widget used for letting the user choose between different\n * indices that contains the same data with a different order / ranking formula.\n */\nconst sortBy: SortByWidget = (widgetParams) => {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectSortBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ container: containerNode, items, transformItems }),\n    $$widgetType: 'ais.sortBy',\n  };\n};\n\nexport default sortBy;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  StatsCSSClasses,\n  StatsTemplates,\n} from '../../widgets/stats/stats';\n\nexport type StatsComponentCSSClasses = ComponentCSSClasses<StatsCSSClasses>;\n\nexport type StatsComponentTemplates = Required<StatsTemplates>;\n\ntype StatsProps = {\n  cssClasses: StatsComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: StatsComponentTemplates;\n  };\n  hitsPerPage: number | undefined;\n  nbHits: number;\n  nbSortedHits: number | undefined;\n  areHitsSorted: boolean;\n  nbPages: number;\n  page: number;\n  processingTimeMS: number;\n  query: string;\n};\n\nconst Stats = ({\n  nbHits,\n  nbSortedHits,\n  cssClasses,\n  templateProps,\n  ...rest\n}: StatsProps) => (\n  <div className={cx(cssClasses.root)}>\n    <Template\n      {...templateProps}\n      templateKey=\"text\"\n      rootTagName=\"span\"\n      rootProps={{ className: cssClasses.text }}\n      data={{\n        hasManySortedResults: nbSortedHits && nbSortedHits > 1,\n        hasNoSortedResults: nbSortedHits === 0,\n        hasOneSortedResults: nbSortedHits === 1,\n        hasManyResults: nbHits > 1,\n        hasNoResults: nbHits === 0,\n        hasOneResult: nbHits === 1,\n        nbHits,\n        nbSortedHits,\n        cssClasses,\n        ...rest,\n      }}\n    />\n  </div>\n);\n\nexport default Stats;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport Stats from '../../components/Stats/Stats';\nimport connectStats from '../../connectors/stats/connectStats';\nimport { formatNumber } from '../../lib/formatNumber';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport type {\n  StatsComponentCSSClasses,\n  StatsComponentTemplates,\n} from '../../components/Stats/Stats';\nimport type {\n  StatsConnectorParams,\n  StatsRenderState,\n  StatsWidgetDescription,\n} from '../../connectors/stats/connectStats';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'stats' });\nconst suit = component('Stats');\n\ntype TextTemplateProps = {\n  hasManyResults: boolean;\n  hasNoResults: boolean;\n  hasOneResult: boolean;\n  hasNoSortedResults: boolean;\n  hasOneSortedResults: boolean;\n  hasManySortedResults: boolean;\n};\n\nexport type StatsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the text span element.\n   */\n  text: string | string[];\n}>;\n\nexport type StatsTemplates = Partial<{\n  /**\n   * Text template, provided with `hasManyResults`, `hasNoResults`, `hasOneResult`, `hasNoSortedResults`, `hasOneSortedResults`, `hasManySortedResults`, `hitsPerPage`, `nbHits`, `nbSortedHits`, `nbPages`, `areHitsSorted`, `page`, `processingTimeMS`, `query`.\n   */\n  text: Template<TextTemplateProps & StatsRenderState>;\n}>;\n\nexport type StatsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: StatsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: StatsCSSClasses;\n};\n\nexport type StatsWidget = WidgetFactory<\n  StatsWidgetDescription & { $$widgetType: 'ais.stats' },\n  StatsConnectorParams,\n  StatsWidgetParams\n>;\n\nexport const defaultTemplates: StatsComponentTemplates = {\n  text(props) {\n    return `${\n      props.areHitsSorted\n        ? getSortedResultsSentence(props)\n        : getResultsSentence(props)\n    } found in ${props.processingTimeMS}ms`;\n  },\n};\n\nfunction getSortedResultsSentence({\n  nbHits,\n  hasNoSortedResults,\n  hasOneSortedResults,\n  hasManySortedResults,\n  nbSortedHits,\n}: TextTemplateProps & StatsRenderState) {\n  const suffix = `sorted out of ${formatNumber(nbHits)}`;\n\n  if (hasNoSortedResults) {\n    return `No relevant results ${suffix}`;\n  }\n\n  if (hasOneSortedResults) {\n    return `1 relevant result ${suffix}`;\n  }\n\n  if (hasManySortedResults) {\n    return `${formatNumber(nbSortedHits || 0)} relevant results ${suffix}`;\n  }\n\n  return '';\n}\n\nfunction getResultsSentence({\n  nbHits,\n  hasNoResults,\n  hasOneResult,\n  hasManyResults,\n}: TextTemplateProps & StatsRenderState) {\n  if (hasNoResults) {\n    return 'No results';\n  }\n\n  if (hasOneResult) {\n    return '1 result';\n  }\n\n  if (hasManyResults) {\n    return `${formatNumber(nbHits)} results`;\n  }\n\n  return '';\n}\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    renderState: {\n      templateProps?: PreparedTemplateProps<StatsComponentTemplates>;\n    };\n    cssClasses: StatsComponentCSSClasses;\n    containerNode: HTMLElement;\n    templates: StatsTemplates;\n  }): Renderer<StatsRenderState, Partial<StatsWidgetParams>> =>\n  (\n    {\n      hitsPerPage,\n      nbHits,\n      nbSortedHits,\n      areHitsSorted,\n      nbPages,\n      page,\n      processingTimeMS,\n      query,\n      instantSearchInstance,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Stats\n        cssClasses={cssClasses}\n        hitsPerPage={hitsPerPage}\n        nbHits={nbHits}\n        nbSortedHits={nbSortedHits}\n        areHitsSorted={areHitsSorted}\n        nbPages={nbPages}\n        page={page}\n        processingTimeMS={processingTimeMS}\n        query={query}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The `stats` widget is used to display useful insights about the current results.\n *\n * By default, it will display the **number of hits** and the time taken to compute the\n * results inside the engine.\n */\nconst stats: StatsWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses: StatsComponentCSSClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectStats(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.stats',\n  };\n};\n\nexport default stats;\n","/** @jsx h */\nimport { Fragment, h } from 'preact';\n\nimport type { VoiceSearchComponentTemplates } from '../../components/VoiceSearch/VoiceSearch';\n\ntype ButtonInnerElementProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n};\n\nconst ButtonInnerElement = ({\n  status,\n  errorCode,\n  isListening,\n}: ButtonInnerElementProps) => {\n  if (status === 'error' && errorCode === 'not-allowed') {\n    return (\n      <Fragment>\n        <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" />\n        <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n        <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n        <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <path\n        d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n        fill={isListening ? 'currentColor' : 'none'}\n      />\n      <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n      <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n      <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n    </Fragment>\n  );\n};\n\nconst defaultTemplates: VoiceSearchComponentTemplates = {\n  buttonText({ status, errorCode, isListening }) {\n    return (\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        /* eslint-disable react/no-unknown-property */\n        // Preact supports kebab case attributes, and using camel case would\n        // require using `preact/compat`.\n        // @TODO: reconsider using the `react` ESLint preset\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        /* eslint-enable react/no-unknown-property */\n      >\n        <ButtonInnerElement\n          status={status}\n          errorCode={errorCode}\n          isListening={isListening}\n        />\n      </svg>\n    );\n  },\n  status({ transcript }) {\n    return <p>{transcript}</p>;\n  },\n};\n\nexport default defaultTemplates;\n","import * as connectors from './connectors/index';\nimport * as helpers from './helpers/index';\nimport { createInfiniteHitsSessionStorageCache } from './lib/infiniteHitsCache/index';\nimport InstantSearch from './lib/InstantSearch';\nimport * as routers from './lib/routers/index';\nimport * as stateMappings from './lib/stateMappings/index';\nimport version from './lib/version';\nimport * as middlewares from './middlewares/index';\nimport * as widgets from './widgets/index';\n\nimport type { InstantSearchOptions } from './lib/InstantSearch';\nimport type { Expand, UiState } from './types';\n\ntype InstantSearchModule = {\n  <TUiState = Record<string, unknown>, TRouteState = TUiState>(\n    options: InstantSearchOptions<Expand<UiState & TUiState>, TRouteState>\n  ): InstantSearch<Expand<UiState & TUiState>, TRouteState>;\n  version: string;\n\n  connectors: typeof connectors;\n  widgets: typeof widgets;\n  middlewares: typeof middlewares;\n\n  routers: typeof routers;\n  stateMappings: typeof stateMappings;\n\n  createInfiniteHitsSessionStorageCache: typeof createInfiniteHitsSessionStorageCache;\n  highlight: typeof helpers.highlight;\n  reverseHighlight: typeof helpers.reverseHighlight;\n  snippet: typeof helpers.snippet;\n  reverseSnippet: typeof helpers.reverseSnippet;\n\n  /**\n   * @deprecated use createInsightsMiddleware\n   * @link https://www.algolia.com/doc/api-reference/widgets/insights/js/\n   */\n  insights: typeof helpers.insights;\n};\n\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](algolia.com/doc/api-client/getting-started/what-is-the-api-client/javascript/)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).\n */\nconst instantsearch: InstantSearchModule = (options) =>\n  new InstantSearch(options);\n\ninstantsearch.version = version;\n\ninstantsearch.connectors = connectors;\ninstantsearch.widgets = widgets;\ninstantsearch.middlewares = middlewares;\n\ninstantsearch.routers = routers;\ninstantsearch.stateMappings = stateMappings;\n\ninstantsearch.createInfiniteHitsSessionStorageCache =\n  createInfiniteHitsSessionStorageCache;\ninstantsearch.highlight = helpers.highlight;\ninstantsearch.reverseHighlight = helpers.reverseHighlight;\ninstantsearch.snippet = helpers.snippet;\ninstantsearch.reverseSnippet = helpers.reverseSnippet;\ninstantsearch.insights = helpers.insights;\n\nexport default instantsearch;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type {\n  ToggleRefinementRenderState,\n  ToggleRefinementValue,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  ToggleRefinementTemplates,\n  ToggleRefinementCSSClasses,\n} from '../../widgets/toggle-refinement/toggle-refinement';\n\nexport type ToggleRefinementComponentCSSClasses =\n  ComponentCSSClasses<ToggleRefinementCSSClasses>;\n\nexport type ToggleRefinementComponentTemplates =\n  Required<ToggleRefinementTemplates>;\n\nexport type ToggleRefinementProps = {\n  currentRefinement: ToggleRefinementValue;\n  refine: ToggleRefinementRenderState['refine'];\n  cssClasses: ToggleRefinementComponentCSSClasses;\n  templateProps: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n};\n\nconst ToggleRefinement = ({\n  currentRefinement,\n  refine,\n  cssClasses,\n  templateProps,\n}: ToggleRefinementProps) => (\n  <div className={cssClasses.root}>\n    <label className={cssClasses.label}>\n      <input\n        className={cssClasses.checkbox}\n        type=\"checkbox\"\n        checked={currentRefinement.isRefined}\n        onChange={(event) =>\n          refine({ isRefined: !(event.target as HTMLInputElement).checked })\n        }\n      />\n\n      <Template\n        {...templateProps}\n        rootTagName=\"span\"\n        rootProps={{ className: cssClasses.labelText }}\n        templateKey=\"labelText\"\n        data={currentRefinement}\n      />\n    </label>\n  </div>\n);\n\nexport default ToggleRefinement;\n","import type { ToggleRefinementComponentTemplates } from '../../components/ToggleRefinement/ToggleRefinement';\n\nconst defaultTemplates: ToggleRefinementComponentTemplates = {\n  labelText({ name }) {\n    return name;\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport ToggleRefinement from '../../components/ToggleRefinement/ToggleRefinement';\nimport connectToggleRefinement from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport { component } from '../../lib/suit';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  ToggleRefinementComponentCSSClasses,\n  ToggleRefinementComponentTemplates,\n} from '../../components/ToggleRefinement/ToggleRefinement';\nimport type {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementValue,\n  ToggleRefinementRenderState,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n});\nconst suit = component('ToggleRefinement');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ToggleRefinementComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n    };\n    templates: ToggleRefinementTemplates;\n  }) =>\n  (\n    {\n      value,\n      refine,\n      instantSearchInstance,\n    }: ToggleRefinementRenderState &\n      RendererOptions<ToggleRefinementConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <ToggleRefinement\n        cssClasses={cssClasses}\n        currentRefinement={value}\n        templateProps={renderState.templateProps!}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nexport type ToggleRefinementCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the label wrapping element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the checkbox.\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to the label text.\n   */\n  labelText: string | string[];\n}>;\n\nexport type ToggleRefinementTemplates = Partial<{\n  /**\n   * the text that describes the toggle action\n   */\n  labelText: Template<ToggleRefinementValue & { name: string }>;\n}>;\n\nexport type ToggleRefinementWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ToggleRefinementTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ToggleRefinementCSSClasses;\n};\n\nexport type ToggleRefinementWidget = WidgetFactory<\n  ToggleRefinementWidgetDescription & {\n    $$widgetType: 'ais.toggleRefinement';\n  },\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetParams\n>;\n\n/**\n * The toggleRefinement widget lets the user either:\n *  - switch between two values for a single facetted attribute (free_shipping / not_free_shipping)\n *  - toggleRefinement a faceted value on and off (only 'canon' for brands)\n *\n * This widget is particularly useful if you have a boolean value in the records.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n */\nconst toggleRefinement: ToggleRefinementWidget = function toggleRefinement(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    on = true,\n    off,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectToggleRefinement(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, on, off }),\n    $$widgetType: 'ais.toggleRefinement',\n  };\n};\n\nexport default toggleRefinement;\n","/** @jsx h */\n\nimport { h } from 'preact';\n\nimport Template from '../Template/Template';\n\nimport type { VoiceListeningState } from '../../lib/voiceSearchHelper/types';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  VoiceSearchCSSClasses,\n  VoiceSearchTemplates,\n} from '../../widgets/voice-search/voice-search';\n\nexport type VoiceSearchComponentCSSClasses =\n  ComponentCSSClasses<VoiceSearchCSSClasses>;\n\nexport type VoiceSearchComponentTemplates = Required<VoiceSearchTemplates>;\n\nexport type VoiceSearchProps = {\n  cssClasses: VoiceSearchComponentCSSClasses;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templates: VoiceSearchComponentTemplates;\n};\n\nconst VoiceSearch = ({\n  cssClasses,\n  isBrowserSupported,\n  isListening,\n  toggleListening,\n  voiceListeningState,\n  templates,\n}: VoiceSearchProps) => {\n  const handleClick = (event: MouseEvent): void => {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n\n  const { status, transcript, isSpeechFinal, errorCode } = voiceListeningState;\n  return (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"buttonText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cssClasses.button,\n          type: 'button',\n          title: `Search by voice${\n            isBrowserSupported ? '' : ' (not supported on this browser)'\n          }`,\n          onClick: handleClick,\n          disabled: !isBrowserSupported,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n      <Template\n        templateKey=\"status\"\n        rootProps={{\n          className: cssClasses.status,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n    </div>\n  );\n};\n\nexport default VoiceSearch;\n","/** @jsx h */\n\nimport { cx } from '@algolia/ui-components-shared';\nimport { h, render } from 'preact';\n\nimport VoiceSearchComponent from '../../components/VoiceSearch/VoiceSearch';\nimport connectVoiceSearch from '../../connectors/voice-search/connectVoiceSearch';\nimport { component } from '../../lib/suit';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\n\nimport defaultTemplates from './defaultTemplates';\n\nimport type {\n  VoiceSearchComponentCSSClasses,\n  VoiceSearchComponentTemplates,\n} from '../../components/VoiceSearch/VoiceSearch';\nimport type {\n  VoiceSearchConnectorParams,\n  VoiceSearchRenderState,\n  VoiceSearchWidgetDescription,\n} from '../../connectors/voice-search/connectVoiceSearch';\nimport type { CreateVoiceSearchHelper } from '../../lib/voiceSearchHelper/types';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'voice-search' });\nconst suit = component('VoiceSearch');\n\nexport type VoiceSearchCSSClasses = Partial<{\n  root: string | string[];\n  button: string | string[];\n  status: string | string[];\n}>;\n\ntype VoiceSearchTemplateProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n  transcript: string;\n  isSpeechFinal: boolean;\n  isBrowserSupported: boolean;\n};\n\nexport type VoiceSearchTemplates = Partial<{\n  buttonText: Template<VoiceSearchTemplateProps>;\n  status: Template<VoiceSearchTemplateProps>;\n}>;\n\nexport type VoiceSearchWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: VoiceSearchCSSClasses;\n  templates?: VoiceSearchTemplates;\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchWidget = WidgetFactory<\n  VoiceSearchWidgetDescription & { $$type: 'ais.voiceSearch' },\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: VoiceSearchComponentCSSClasses;\n    templates: VoiceSearchComponentTemplates;\n  }): Renderer<VoiceSearchRenderState, Partial<VoiceSearchWidgetParams>> =>\n  ({\n    isBrowserSupported,\n    isListening,\n    toggleListening,\n    voiceListeningState,\n  }) => {\n    render(\n      <VoiceSearchComponent\n        cssClasses={cssClasses}\n        templates={templates}\n        isBrowserSupported={isBrowserSupported}\n        isListening={isListening}\n        toggleListening={toggleListening}\n        voiceListeningState={voiceListeningState}\n      />,\n      containerNode\n    );\n  };\n\nconst voiceSearch: VoiceSearchWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    searchAsYouSpeak = false,\n    language,\n    additionalQueryParameters,\n    createVoiceSearchHelper,\n  }: VoiceSearchWidgetParams = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    status: cx(suit({ descendantName: 'status' }), userCssClasses.status),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n  });\n\n  const makeWidget = connectVoiceSearch(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      container: containerNode,\n      cssClasses,\n      templates,\n      searchAsYouSpeak,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper,\n    }),\n    $$widgetType: 'ais.voiceSearch',\n  };\n};\n\nexport default voiceSearch;\n","import { deprecate } from '../lib/utils';\n\nimport answers from './answers/answers';\nimport dynamicWidgets from './dynamic-widgets/dynamic-widgets';\n\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_answers = deprecate(\n  answers,\n  'answers is no longer supported'\n);\n\n/** @deprecated use dynamicWidgets */\nexport const EXPERIMENTAL_dynamicWidgets = deprecate(\n  dynamicWidgets,\n  'use dynamicWidgets'\n);\nexport { dynamicWidgets };\n\nexport { default as analytics } from './analytics/analytics';\nexport { default as breadcrumb } from './breadcrumb/breadcrumb';\nexport { default as clearRefinements } from './clear-refinements/clear-refinements';\nexport { default as configure } from './configure/configure';\nexport { default as currentRefinements } from './current-refinements/current-refinements';\nexport { default as EXPERIMENTAL_configureRelatedItems } from './configure-related-items/configure-related-items';\nexport { default as geoSearch } from './geo-search/geo-search';\nexport { default as hierarchicalMenu } from './hierarchical-menu/hierarchical-menu';\nexport { default as hits } from './hits/hits';\nexport { default as hitsPerPage } from './hits-per-page/hits-per-page';\nexport { default as index } from './index/index';\nexport { default as infiniteHits } from './infinite-hits/infinite-hits';\nexport { default as menu } from './menu/menu';\nexport { default as menuSelect } from './menu-select/menu-select';\nexport { default as numericMenu } from './numeric-menu/numeric-menu';\nexport { default as pagination } from './pagination/pagination';\nexport { default as panel } from './panel/panel';\nexport { default as places } from './places/places';\nexport { default as poweredBy } from './powered-by/powered-by';\nexport { default as queryRuleContext } from './query-rule-context/query-rule-context';\nexport { default as queryRuleCustomData } from './query-rule-custom-data/query-rule-custom-data';\nexport { default as rangeInput } from './range-input/range-input';\nexport { default as rangeSlider } from './range-slider/range-slider';\nexport { default as ratingMenu } from './rating-menu/rating-menu';\nexport { default as refinementList } from './refinement-list/refinement-list';\nexport { default as relevantSort } from './relevant-sort/relevant-sort';\nexport { default as searchBox } from './search-box/search-box';\nexport { default as sortBy } from './sort-by/sort-by';\nexport { default as stats } from './stats/stats';\nexport { default as toggleRefinement } from './toggle-refinement/toggle-refinement';\nexport { default as voiceSearch } from './voice-search/voice-search';\n","import connectConfigure from '../../connectors/configure/connectConfigure';\nimport { noop } from '../../lib/utils';\n\nimport type {\n  ConfigureConnectorParams,\n  ConfigureWidgetDescription,\n} from '../../connectors/configure/connectConfigure';\nimport type { Widget } from '../../types';\n\n/**\n * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n * to enable when the widget mounts.\n */\nexport type ConfigureWidgetParams =\n  ConfigureConnectorParams['searchParameters'];\n\nexport type ConfigureWidget = (widgetParams: ConfigureWidgetParams) => Widget<\n  ConfigureWidgetDescription & {\n    $$widgetType: 'ais.configure';\n    widgetParams: ConfigureConnectorParams;\n  }\n>;\n\nconst configure: ConfigureWidget = function configure(widgetParams) {\n  // This is a renderless widget that falls back to the connector's\n  // noop render and unmount functions.\n  const makeWidget = connectConfigure(noop);\n\n  return {\n    ...makeWidget({ searchParameters: widgetParams }),\n    $$widgetType: 'ais.configure',\n  };\n};\n\nexport default configure;\n","import connectConfigureRelatedItems from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport { noop } from '../../lib/utils';\n\nimport type {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport type { WidgetFactory } from '../../types';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\n\nexport type ConfigureRelatedItemsWidget = WidgetFactory<\n  ConfigureRelatedItemsWidgetDescription & {\n    $$widgetType: 'ais.configureRelatedItems';\n  },\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetParams\n>;\n\nexport type ConfigureRelatedItemsWidgetParams = PlainSearchParameters;\n\nconst configureRelatedItems: ConfigureRelatedItemsWidget =\n  function configureRelatedItems(widgetParams) {\n    const makeWidget = connectConfigureRelatedItems(noop);\n\n    return {\n      ...makeWidget(widgetParams),\n      $$widgetType: 'ais.configureRelatedItems',\n    };\n  };\n\nexport default configureRelatedItems;\n","/* global google EventListener */\nimport { render } from 'preact';\n\nimport type { renderTemplate } from '../../lib/templating';\n\nexport type HTMLMarkerArguments = {\n  __id: string;\n  position: google.maps.LatLngLiteral;\n  map: google.maps.Map;\n  template: ReturnType<typeof renderTemplate>;\n  title?: string;\n  className: string;\n  anchor?: { x: number; y: number };\n};\n\ninterface Marker {\n  __id: string;\n  anchor: { x: number; y: number };\n  offset?: { x: number; y: number };\n  listeners: { [key: string]: EventListener };\n  latLng: google.maps.LatLng;\n  element: HTMLDivElement;\n  getPosition(): google.maps.LatLng;\n}\n\nconst createHTMLMarker = (\n  googleReference: typeof google\n): new (args: HTMLMarkerArguments) => google.maps.OverlayView & Marker => {\n  class HTMLMarker extends googleReference.maps.OverlayView {\n    public __id: string;\n    public anchor: {\n      x: number;\n      y: number;\n    };\n    public offset?: {\n      x: number;\n      y: number;\n    };\n    public listeners: { [key: string]: EventListener };\n    public latLng: google.maps.LatLng;\n    public element: HTMLDivElement;\n\n    public constructor({\n      __id,\n      position,\n      map,\n      template,\n      className,\n      anchor = {\n        x: 0,\n        y: 0,\n      },\n    }: HTMLMarkerArguments) {\n      super();\n\n      this.__id = __id;\n      this.anchor = anchor;\n      this.listeners = {};\n      this.latLng = new googleReference.maps.LatLng(position);\n\n      this.element = document.createElement('div');\n      this.element.className = className;\n      this.element.style.position = 'absolute';\n\n      if (typeof template === 'object') {\n        render(template, this.element);\n      } else {\n        this.element.innerHTML = template;\n      }\n\n      this.setMap(map);\n    }\n\n    public onAdd() {\n      // Append the element to the map\n      this.getPanes()!.overlayMouseTarget.appendChild(this.element);\n\n      // Compute the offset onAdd & cache it because afterwards\n      // it won't retrieve the correct values, we also avoid\n      // to read the values on every draw\n      const bbBox = this.element.getBoundingClientRect();\n\n      this.offset = {\n        x: this.anchor.x + bbBox.width / 2,\n        y: this.anchor.y + bbBox.height,\n      };\n\n      // Force the width of the element will avoid the\n      // content to collapse when we move the map\n      this.element.style.width = `${bbBox.width}px`;\n    }\n\n    public draw() {\n      const position = this.getProjection().fromLatLngToDivPixel(this.latLng)!;\n\n      this.element.style.left = `${Math.round(position.x - this.offset!.x)}px`;\n      this.element.style.top = `${Math.round(position.y - this.offset!.y)}px`;\n\n      // Markers to the south are in front of markers to the north\n      // This is the default behaviour of Google Maps\n      this.element.style.zIndex = String(parseInt(this.element.style.top, 10));\n    }\n\n    public onRemove() {\n      if (this.element) {\n        this.element.parentNode!.removeChild(this.element);\n\n        Object.keys(this.listeners).forEach((eventName) => {\n          this.element.removeEventListener(\n            eventName,\n            this.listeners[eventName]\n          );\n        });\n\n        // after onRemove the class is no longer used, thus it can be deleted\n        // @ts-expect-error\n        delete this.element;\n        // @ts-expect-error\n        delete this.listeners;\n      }\n    }\n\n    public addListener(eventName: string, listener: EventListener) {\n      this.listeners[eventName] = listener;\n\n      const element = this.element;\n\n      element.addEventListener(eventName, listener);\n\n      return {\n        remove() {\n          return element.removeEventListener(eventName, listener);\n        },\n      };\n    }\n\n    public getPosition() {\n      return this.latLng;\n    }\n  }\n\n  return HTMLMarker;\n};\n\nexport default createHTMLMarker;\n","/** @ts-ignore */\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\nimport type * as Places from 'places.js';\n\n// using the type like this requires only one ts-ignore\ntype StaticOptions = Places.StaticOptions;\ntype ChangeEvent = Places.ChangeEvent;\ntype PlacesInstance = Places.PlacesInstance;\ntype ReconfigurableOptions = Places.ReconfigurableOptions;\n\nexport type PlacesWidgetParams = {\n  /**\n   * The Algolia Places reference to use.\n   *\n   * @see https://github.com/algolia/places\n   */\n  placesReference: (\n    options: StaticOptions & ReconfigurableOptions\n  ) => PlacesInstance;\n  /**\n   * The default position when the input is empty.\n   */\n  defaultPosition?: string[];\n} & StaticOptions;\n\ntype PlacesWidgetState = {\n  query: string;\n  initialLatLngViaIP: boolean | undefined;\n  isInitialLatLngViaIPSet: boolean;\n};\n\nexport type PlacesWidgetDescription = {\n  $$type: 'ais.places';\n  $$widgetType: 'ais.places';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    places: WidgetRenderState<Record<string, unknown>, PlacesWidgetParams>;\n  };\n  indexUiState: {\n    places: {\n      query: string;\n      position: string;\n    };\n  };\n};\n\nexport type PlacesWidget = WidgetFactory<\n  PlacesWidgetDescription,\n  PlacesWidgetParams,\n  PlacesWidgetParams\n>;\n\n/**\n * This widget sets the geolocation value for the search based on the selected\n * result in the Algolia Places autocomplete.\n */\nconst placesWidget: PlacesWidget = (widgetParams) => {\n  const {\n    placesReference,\n    defaultPosition = [],\n    ...placesOptions\n  } = widgetParams || {};\n\n  if (typeof placesReference !== 'function') {\n    throw new Error(\n      'The `placesReference` option requires a valid Places.js reference.'\n    );\n  }\n\n  const placesAutocomplete = placesReference(placesOptions);\n\n  const state: PlacesWidgetState = {\n    query: '',\n    initialLatLngViaIP: undefined,\n    isInitialLatLngViaIPSet: false,\n  };\n\n  return {\n    $$type: 'ais.places',\n    $$widgetType: 'ais.places',\n\n    init({ helper }) {\n      placesAutocomplete.on('change', (eventOptions: ChangeEvent) => {\n        const {\n          suggestion: {\n            value,\n            latlng: { lat, lng },\n          },\n        } = eventOptions;\n\n        state.query = value;\n\n        helper\n          .setQueryParameter('insideBoundingBox', undefined)\n          .setQueryParameter('aroundLatLngViaIP', false)\n          .setQueryParameter('aroundLatLng', `${lat},${lng}`)\n          .search();\n      });\n\n      placesAutocomplete.on('clear', () => {\n        state.query = '';\n\n        helper.setQueryParameter('insideBoundingBox', undefined);\n\n        if (defaultPosition.length > 1) {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', false)\n            .setQueryParameter('aroundLatLng', defaultPosition.join(','));\n        } else {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', state.initialLatLngViaIP)\n            .setQueryParameter('aroundLatLng', undefined);\n        }\n\n        helper.search();\n      });\n    },\n\n    getWidgetUiState(uiState, { searchParameters }) {\n      const position =\n        searchParameters.aroundLatLng || defaultPosition.join(',');\n      const hasPositionSet = position !== defaultPosition.join(',');\n\n      if (!hasPositionSet && !state.query) {\n        const { places, ...uiStateWithoutPlaces } = uiState;\n\n        return uiStateWithoutPlaces;\n      }\n\n      return {\n        ...uiState,\n        places: {\n          query: state.query,\n          position,\n        },\n      };\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      const { query = '', position = defaultPosition.join(',') } =\n        uiState.places || {};\n\n      state.query = query;\n\n      if (!state.isInitialLatLngViaIPSet) {\n        state.isInitialLatLngViaIPSet = true;\n        state.initialLatLngViaIP = searchParameters.aroundLatLngViaIP;\n      }\n\n      placesAutocomplete.setVal(query);\n      placesAutocomplete.close();\n\n      return searchParameters\n        .setQueryParameter('insideBoundingBox', undefined)\n        .setQueryParameter('aroundLatLngViaIP', false)\n        .setQueryParameter('aroundLatLng', position || undefined);\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        places: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default placesWidget;\n"],"names":["noop","deprecate","fn","message","checkRendering","rendering","usage","undefined","Error","Object","prototype","toString","call","slice","clearRefinements","helper","_ref$attributesToClea","attributesToClear","finalState","state","setPage","reduce","attribute","isNumericRefined","removeNumericRefinement","isHierarchicalFacet","removeHierarchicalFacetRefinement","isDisjunctiveFacet","removeDisjunctiveFacetRefinement","isConjunctiveFacet","removeFacetRefinement","indexOf","setQuery","htmlEntities","&","<",">","\"","'","regexUnescapedHtml","regexHasUnescapedHtml","RegExp","source","htmlCharacters","&amp;","&lt;","&gt;","&quot;","&#39;","regexEscapedHtml","regexHasEscapedHtml","unescape","value","test","replace","character","isPlainObject","_typeof","getPrototypeOf","proto","TAG_PLACEHOLDER","highlightPreTag","highlightPostTag","TAG_REPLACEMENT","replaceTagsAndEscape","recursiveEscape","input","keys","acc","key","Array","isArray","map","escapeHits","hits","__escaped","hit","_highlightResult","_snippetResult","concatHighlightedParts","parts","part","isHighlighted","join","createSendEventForFacet","instantSearchInstance","attr","widgetType","args","facet","eventType","facetValue","_args$","eventName","length","sendEventToInsights","isHierarchicalFacetRefined","isFacetRefined","isDisjunctiveFacetRefined","insightsMethod","payload","index","getIndex","filters","serializePayload","btoa","encodeURIComponent","JSON","stringify","deserializePayload","serialized","parse","decodeURIComponent","atob","buildPayloads","queryID","hitsChunks","objectIDsByChunk","positionsByChunk","methodName","hitsArray","__queryID","arr","chunkSize","chunks","i","Math","ceil","push","batch","objectID","__position","status","objectIDs","positions","createSendEventForHits","forEach","createBindEventForHits","payloads","isIndexWidget","widget","$$type","setIndexHelperState","finalUiState","indexWidget","nextIndexUiState","getIndexId","getHelper","setState","getWidgetSearchParameters","uiState","getWidgets","filter","debounce","func","wait","lastTimeout","Promise","resolve","reject","clearTimeout","setTimeout","then","catch","nextMicroTask","defer","callback","progress","cancelled","cancel","createDocumentationMessageGenerator","widgets","links","name","_ref$connector","connector","Boolean","escapeFacetValue","String","find","items","predicate","latLngRegExp","insideBoundingBoxToBoundingBox","insideBoundingBoxArrayToBoundingBox","_value$","neLat","neLng","swLat","swLng","northEast","lat","lng","southWest","split","parseFloat","getContainerNode","selectorOrHTMLElement","object","isSelectorString","domElement","document","querySelector","HTMLElement","nodeType","errorMessage","getHighlightedParts","highlightedValue","splitByPreTag","firstValue","shift","elements","splitByPostTag","hasAlphanumeric","getPropertyByPath","path","current","getRefinement","type","count","resultsFacets","res","escapedValue","resultsFacet","facetDeclaration","getHierarchicalFacetByName","nameParts","separator","_loop","facetData","data","refinementKey","refinement","exhaustive","getRefinements","results","includesQuery","refinements","facetsRefinements","_state$facetsExcludes","facetsExcludes","_state$disjunctiveFac","disjunctiveFacetsRefinements","_state$hierarchicalFa","hierarchicalFacetsRefinements","_state$numericRefinem","numericRefinements","_state$tagRefinements","tagRefinements","refinementName","facets","exclude","disjunctiveFacets","hierarchicalFacets","operators","operatorOriginal","operator","valueOrValues","numericValue","query","trim","getWidgetAttribute","initOptions","renderState","getWidgetRenderState","_widget$getWidgetRend","widgetParams","attributes","addAbsolutePosition","page","hitsPerPage","idx","addQueryID","isPrimitive","obj","isEqual","first","second","isFiniteNumber","isFinite","isSpecialClick","event","button","altKey","ctrlKey","metaKey","shiftKey","uniq","array","self","mergeWithRest","left","right","ruleContexts","rest","setQueryParameters","mergeFacets","_","addFacet","mergeDisjunctiveFacets","addDisjunctiveFacet","mergeHierarchicalFacets","comparator","concat","nextFacets","splice","mergeTagRefinements","addTagRefinement","mergeFacetRefinements","mergeFacetsExcludes","mergeDisjunctiveFacetsRefinements","mergeNumericRefinements","mergeHierarchicalFacetsRefinements","mergeRuleContexts","mergeSearchParameters","parameters","hierarchicalFacetsRefinementsMerged","hierarchicalFacetsMerged","tagRefinementsMerged","numericRefinementsMerged","disjunctiveFacetsRefinementsMerged","facetsExcludesMerged","facetRefinementsMerged","disjunctiveFacetsMerged","ruleContextsMerged","facetsMerged","omit","excluded","target","range","start","end","_ref$step","step","limitStep","arrayLength","round","_toConsumableArray","createInitArgs","parent","templatesConfig","createURL","scopedResults","searchMetadata","isSearchStalled","error","createRenderArgs","getResults","getScopedResults","_state","reverseHighlightedParts","some","isNextHighlighted","_parts","isPreviousHighlighted","_parts2","safelyRunOnBrowser","fallback","window","toArray","connectAnswers","renderFn","unmountFn","withUsage","runConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","lastHits","isLoading","debouncedRender","debouncedRefine","queryLanguages","attributesForPrediction","_ref$nbHits","nbHits","_ref$renderDebounceTi","renderDebounceTime","_ref$searchDebounceTi","searchDebounceTime","_ref$escapeHTML","escapeHTML","_ref$extraParameters","extraParameters","promise","currentPromiseId","x","init","answersIndex","client","initIndex","findAnswers","this","render","renderOptions","result","hitsWithAbsolutePositionAndQueryID","_this","getRenderState","answers","dispose","connectDynamicWidgets","localWidgets","_widgetParams$maxValu","maxValuesPerFacet","_widgetParams$facets","_widgetParams$transfo","transformItems","fallbackWidget","every","Map","set","isMounted","widgetsToUnmount","widgetsToMount","attributesToRender","has","shouldMount","addWidgets","removeWidgets","toRemove","curr","max","dynamicWidgets","renderingContent","_results$renderingCon2","facetOrdering","_results$renderingCon3","_results$renderingCon4","order","connectClearRefinements","_ref$includedAttribut","includedAttributes","_ref$excludedAttribut","excludedAttributes","_ref$transformItems","cachedRefine","connectorState","refine","cachedCreateURL","canRefine","scopedResult","indexHelper","search","attributeToClear","hasRefinements","connectCurrentRefinements","currentRefinements","accResults","getRefinementsItems","clearRefinement","clearRefinementFromState","filterFunction","item","normalizeRefinement","allItems","currentItem","indexName","label","sort","a","b","resetPage","removeExcludeRefinement","removeTagRefinement","setQueryParameter","Number","normalizedRefinement","connectHierarchicalMenu","_ref$separator","_ref$rootPath","rootPath","_ref$showParentLevel","showParentLevel","_ref$limit","limit","_ref$showMore","showMore","_ref$showMoreLimit","showMoreLimit","_ref$sortBy","sortBy","DEFAULT_SORT","sendEvent","_refine","hierarchicalFacetName","toggleShowMore","cachedToggleShowMore","isShowingMore","getLimit","removeHierarchicalFacet","hierarchicalMenu","hasExhaustiveItems","canToggleShowMore","toggleFacetRefinement","facetItems","facetValues","getFacetValues","_prepareFacetValues","getWidgetUiState","searchParameters","getHierarchicalFacetBreadcrumb","values","withFacetConfiguration","addHierarchicalFacet","currentMaxValuesPerFacet","nextMaxValuesPerFacet","withMaxValuesPerFacet","addHierarchicalFacetRefinement","connectHits","bindEvent","inferPayload","method","selectedHits","h","queryIDs","withInsights","isFirstRender","aa","insightsClient","insights","withInstantSearchUsage","TypeError","inferredPayload","n","l","u","t","o","f","e","c","s","parentNode","removeChild","r","arguments","children","defaultProps","v","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","y","p","d","context","g","__r","debounceRendering","__P","j","__n","ownerSVGElement","z","k","base","w","C","m","A","N","unmount","M","componentWillUnmount","appendChild","nextSibling","insertBefore","$","setProperty","H","style","cssText","toLowerCase","addEventListener","T","I","removeEventListener","setAttribute","removeAttribute","contextType","__E","O","sub","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","localName","createTextNode","createElementNS","createElement","is","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","diffed","P","firstChild","writeDataAttributes","serializedPayload","getDerivedStateFromError","componentDidCatch","forceUpdate","findInsightsTarget","startElement","endElement","validator","element","parentElement","insightsListener","BaseComponent","onClick","targetWithEvent","currentTarget","hasAttribute","getAttribute","single","insightsTarget","connectHitsPerPage","userItems","defaultItems","default","defaultItem","isRefined","hasNoResults","connectHitsWithInsights","getStateWithoutPage","connectInfiniteHits","cachedHits","cachedState","showPrevious","_ref4$escapeHTML","_ref4$transformItems","_ref4$cache","cache","read","write","getFirstReceivedPage","pages","min","getLastReceivedPage","widgetRenderState","currentPageHits","infiniteHits","existingState","getPreviousState","isFirstPage","transformedHits","__isArtificial","overrideStateWithoutTriggeringChangeEvent","searchWithoutTriggeringOnStateChange","isLastPage","nbPages","stateWithoutPage","widgetSearchParameters","connectMenu","_createURL","menu","refinedItem","connectNumericMenu","_ref2$attribute","_ref2$items","_ref2$transformItems","getNumericRefinements","equal","numericMenu","withMinRefinement","withoutRefinements","addNumericRefinement","_value$split$map2","_step","refinedState","getRefinedState","newState","preparedItems","encodeURI","allIsSelected","decodeURI","_iterator","connectInfiniteHitsWithInsights","option","hasNumericRefinement","refinedOption","resolvedState","includes","connectPagination","totalPages","_ref$padding","padding","pager","Paginator","currentPage","total","helperState","currentRefinement","pagination","params","_classCallCheck","_defineProperty","_createClass","totalDisplayedPages","nbPagesDisplayed","paddingLeft","calculatePaddingLeft","toPrecision","precision","pow","floor","connectRange","minBound","maxBound","_ref2$precision","rangeFormatter","from","toLocaleString","to","toFixed","currentRange","nextMin","nextMax","currentRangeMin","currentRangeMax","getNumericRefinement","isResetMin","isResetMax","nextMinAsNumber","nextMaxAsNumber","newNextMin","newNextMax","isResetNewNextMin","isGreaterThanCurrentRange","isMinValid","isResetNewNextMax","isLowerThanRange","isMaxValid","_ref12","facetResult","stats","minValue","maxValue","Infinity","format","removeDisjunctiveFacet","_searchParameters$get2","_searchParameters$get3","lowerBound","upperBound","connectRefinementList","_ref$operator","_ref$escapeFacetValue","escapeFacetValues","formatItems","highlighted","lastResultsFromMainSearch","triggerRefine","lastItemsFromMainSearch","createSearchForFacetValues","tags","searchResults","searchForFacetValues","facetHits","normalizedFacetValues","isFromSearch","refinementList","searchFacetValues","maxValuesPerFacetConfig","currentLimit","canShowLess","canShowMore","searchForItems","withoutMaxValuesPerFacet","removeFacet","getDisjunctiveRefinements","getConjunctiveRefinements","isDisjunctive","addDisjunctiveFacetRefinement","addFacetRefinement","defaultQueryHook","hook","connectSearchBox","_clear","_ref$queryHook","queryHook","searchBox","q","clear","connectSortBy","currentIndex","initialIndex","setIndex","getIndexName","options","connectRatingMenu","getRefinedStar","_ref2$max","_values$","bind","ratingMenu","maxDecimalPlaces","refinementIsApplied","totalCount","facetResults","_facetResult$name$spl3","refinedStar","star","sum","stars","_v","reverse","withDisjunctiveFacet","emptyState","connectStats","nbSortedHits","areHitsSorted","appliedRelevancyStrictness","processingTimeMS","connectToggleRefinement","hasAnOffValue","on","off","_ref2$on","userOff","valuesToRemove","valuesToAdd","toggleRefinement","allFacetValues","onFacetValue","offFacetValue","nextRefinement","offValue","onData","offData","toggle","connectBreadcrumb","breadcrumb","facetName","prepareItems","getBoundingBoxAsString","insideBoundingBox","setBoundingBoxAsString","connectGeoSearch","getPositionFromState","aroundLatLng","aroundLatLngToPosition","pattern","match","toggleRefineOnMapMove","widgetState","internalToggleRefineOnMapMove","createInternalToggleRefinementOnMapMove","isRefineOnMapMove","setMapMoveSinceLastRefine","internalSetMapMoveSinceLastRefine","createInternalSetMapMoveSinceLastRefine","shouldTriggerRender","hasMapMoveSinceLastRefine","_ref$enableRefineOnMa","enableRefineOnMapMove","lastRefinePosition","lastRefineBoundingBox","initArgs","renderArgs","positionChangedSinceLastRefine","boundingBoxChangedSinceLastRefine","_geoloc","position","ne","sw","boundingBox","clearMapRefinement","isRefinedWithMap","geoSearch","connectPoweredBy","defaultUrl","location","_window$location","hostname","_ref2$url","url","poweredBy","isObjectOrArrayOrFunction","_merge","sourceVal","targetVal","hasOwnProperty","reduceRight","arr1","arr2","valToNumber","sourceKeys","lib","addRefinement","mod","valueAsString","facetRefinement","defaultsPure","removeRefinement","refinementType","hasChanged","newRefinementList","objectHasKeys","memo","facetList","refinementValue","containsRefinements","isEqualNumericRefinement","el","SearchParameters","newParameters","_parseNumbers","userToken","console","warn","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","parsedValue","isNaN","geoRect","parsedValues","vPrime","merge","make","instance","getHierarchicalRefinement","toggleHierarchicalFacetRefinement","validate","currentState","tagFilters","numericFilters","patch","_clearNumericRefinements","RefinementList","clearTags","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","getExcludeRefinements","paramValue","op","val","newNumericRefinements","operatorList","outValues","hierarchicalFacet","addExcludeRefinement","tag","isTagRefined","modification","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","_getHierarchicalFacetSeparator","lastIndexOf","toggleTagRefinement","isExcludeRefined","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","intersection","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","parameter","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","collection","iteratees","orders","criteria","iteratee","other","valIsDefined","valIsNull","othIsDefined","othIsNull","hierarchicalFacetResult","hierarchicalFacetIndex","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","picked","level","subtree","tuple","parentPath","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","orderBy","facetCount","unescapeFacetValue","hierarchicalFacetRefinement","prepareHierarchicalFacetSortBy","rootExhaustive","fv","getIndices","indices","assignFacetStats","dest","facetStats","SearchResults","mainSubResponse","_rawResults","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","isFacetDisjunctive","isFacetConjunctive","facetValueObject","facetIndex","idxAttributeName","findIndex","exhaustiveFacetsCount","facets_stats","compact","disjunctiveFacet","dfacet","dataFromMainRequest","attributeIndex","refinedFacet","defaultData","root","excludes","generateHierarchicalTree","extractNormalizedFacetValues","hierarchicalFacetValues","currentRefinementSplit","isExcluded","unshift","setIsRefined","depth","child","getFacetStatsIfAvailable","attributeName","getFacetByName","opts","recSort","sortFn","node","names","sortedChildren","childNode","orderedFacets","remainingFacets","reverseOrder","sortRemainingBy","ordering","formatSort","getFacetStats","rootFacet","intermediateFacet","newFacet","EventEmitter","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","emit","handler","len","listeners","err","er","apply","addListener","listener","newListener","warned","trace","once","fired","removeListener","list","removeAllListeners","ret","listenerCount","evlistener","emitter","ctor","superCtor","create","enumerable","writable","configurable","DerivedHelper","mainHelper","main","lastResults","detach","detachDerivedHelper","getModifiedState","sortObject","localeCompare","requestBuilder","_getQueries","queries","_getHitsSearchParams","_getDisjunctiveFacetSearchParams","filtersMap","segment","hasHierarchicalFacetFilter","filteredFacetFilters","facetFilters","facetFilter","filtered","filterValue","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributesIndex","attributeToRefine","allAttributes","newAttributes","hierarchicalRefinement","rootLevel","parentLevel","getSearchForFacetQuery","maxFacetHits","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","require$$0","AlgoliaSearchHelper","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","content","_originalResponse","derivedHelper","derivedState","userState","clientHasSFFV","clientHasInitIndex","algoliaQuery","searchForFacetValuesPromise","response","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","isDisjunctiveRefined","hasTag","hasTagRefinements","getPage","getTags","states","mainQueries","derivedQueries","queriesCount","derivedStateQueries","queryId","_dispatchAlgoliaResponse","_dispatchAlgoliaError","specificResults","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","clearCache","newClient","getClient","derive","pos","hasPendingRequests","algoliasearchHelper","version","getInitialSearchParameters","connectConfigure","configure","_renderState$configur","actualState","nextSearchParameters","createOptionalFilter","attributeValue","attributeScore","connectConfigureRelatedItems","optionalFilters","matchingPatterns","_ref2$transformSearch","transformSearchParameters","score","attributeSubValue","sumOrFiltersScores","applyRuleContexts","sharedHelperState","trackedFilters","initialRuleContexts","transformRuleContexts","previousRuleContexts","newRuleContexts","facetRefinements","trackedFacetValues","getTrackedFacetValues","connectQueryRules","onHelperChange","_ref2$trackedFilters","_ref2$transformRuleCo","rules","hasTrackedFilters","_ref4$userData","userData","queryRules","createVoiceSearchHelper","resetState","getDefaultState","recognition","stop","onStart","onError","onResult","onEnd","searchAsYouSpeak","language","onQueryChange","onStateChange","SpeechRecognitionAPI","webkitSpeechRecognition","SpeechRecognition","transcript","isSpeechFinal","errorCode","isFinal","getState","isBrowserSupported","isListening","startListening","interimResults","lang","stopListening","connectVoiceSearch","additionalQueryParameters","_widgetParams$createV","builtInCreateVoiceSearchHelper","voiceSearch","ignorePlurals","removeStopWords","optionalWords","_voiceSearchHelper","toggleListening","voiceListeningState","toReset","additional","connectRelevantSort","relevantSort","relevancyStrictness","isVirtualReplica","isRelevantSorted","component","componentName","descendantName","modifierName","descendent","modifier","EXPERIMENTAL_connectAnswers","EXPERIMENTAL_connectDynamicWidgets","autocomplete","indexId","stateWithoutQuery","suit","highlight","_ref$highlightedTagNa","highlightedTagName","_ref$cssClasses","cssClasses","_ref2$value","className","reverseHighlight","snippet","reverseSnippet","ANONYMOUS_TOKEN_COOKIE_KEY","getInsightsAnonymousUserTokenInternal","getCookie","cookie","prefix","cookies","charAt","substring","KEY","isMetadataEnabled","navigator","_window$navigator","userAgent","_window$navigator$use","createMetadataMiddleware","payloadContainer","refNode","subscribe","ua","transporter","_ua","extractPayload","mainIndex","_initialUiState","$$widgetType","started","unsubscribe","remove","arrayToObject","plainObjects","generateArrayPrefix","strictNullHandling","skipNulls","encoder","allowDots","serializeDate","formatter","encodeValuesOnly","charset","Date","utils","maybeMap","isNonNullishPrimitive","isBuffer","keyValue","valuesArray","valuesJoined","objKeys","keyPrefix","pushToArray","setWindowTitle","title","percentTwenties","Format","formatters","RFC1738","RFC3986","hexTable","toUpperCase","assign","combine","queue","prop","refs","compactQueue","pop","compacted","decode","str","decoder","strWithoutPlus","encode","defaultEncoder","kind","string","Symbol","escape","$0","parseInt","charCodeAt","formats","isRegExp","mapped","allowPrototypes","mergeTarget","targetItem","arrayPrefixGenerators","brackets","comma","repeat","valueOrArray","toISO","toISOString","defaultFormat","addQueryPrefix","charsetSentinel","delimiter","date","arrayLimit","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","numberStr","fromCharCode","parseArrayValue","isoSentinel","parseObject","chain","valuesParsed","leaf","cleanRoot","0","tempObj","cleanStr","skipIndex","bracketEqualsPos","encodedVal","newObj","givenKey","exec","arrayFormat","joined","BrowserHistory","windowTitle","_ref$writeDelay","writeDelay","parseURL","getLocation","writeTimer","_start","_dispose","_push","latestAcknowledgedHistory","history","qsModule","qs","routeState","_this2","shouldWrite","pushState","inPopState","_this3","_onPopState","isDisposed","_this4","lastPushWasByISAfterDispose","_this5","href","historyRouter","_ref7$createURL","_ref7$parseURL","_ref7$writeDelay","_ref7$getLocation","protocol","_location$port","port","pathname","hash","queryString","portWithPrefix","getIndexStateWithoutConfigure","simpleStateMapping","stateToRoute","routeToState","createRouterMiddleware","router","stateMapping","nextState","route","lastRouteState","initialUiState","onUpdate","setUiState","_router$start","privateHelperSetState","_uiState","getLocalWidgetsUiState","widgetStateOptions","getWidgetState","getLocalWidgetsSearchParameters","widgetSearchParametersOptions","initialSearchParameters","localUiState","localInstantSearchInstance","localParent","lastValidSearchParameters","_derivedHelper","widgetParent","getParent","resolveScopedResultsFromWidgets","storeRenderState","scheduleSearch","indexInitialResults","_initialResults","_instantSearchInstanc","resetPageFromWidgets","indexWidgets","widgetHelper","scheduleStalledRender","scheduleRender","onInternalStateChange","_derivedHelper2","_helper","previousUiState","innerIndex","refreshUiState","setIndexUiState","indexUiState","parentIndexName","formatNumber","numberLocale","defaultCreateURL","InstantSearch","_inherits","shouldResetStatus","_this$mainHelper","_searchStalledTimer","nextUiState","middleware","_options$initialUiSta","_options$routing","routing","searchFunction","_options$stalledSearc","stalledSearchDelay","_options$searchClient","searchClient","_options$insightsClie","_options$onStateChang","helpers","compileOptions","_stalledSearchDelay","_searchFunction","use","get","newMiddlewareList","newMiddleware","creator","middlewareToUnuse","fakeClient","originalScheduleSearch","_mainHelperSearch","mainIndexHelper","searchFunctionHelper","_this$mainHelper2","callOnStateChange","hasInsightsClient","_insightsClient","insightsInitParams","onEvent","initialParameters","_getAppIdAndApiKey2","headers","queryParameters","APP_ID","API_KEY","applicationID","apiKey","appId","queuedUserToken","userTokenBeforeInit","_error","setUserTokenToSearch","anonymousUserToken","immediate","cx","_len","_key","prepareTemplateProps","defaultTemplates","templates","config","defaultTemplate","customTemplate","isCustomTemplate","useCustomCompileOptions","tagChange","text","buildTree","tokens","stack","customTags","instructions","opener","token","tail","allowedInSuper","Hogan","nodes","close","open","last","stringifyPartials","codeObj","partials","esc","subs","rSlash","rQuot","rNewline","rCr","rLineSep","rParagraphSep","chooseMethod","createPartial","sym","serialNo","code","indent","tripleStache","rIsWhitespace","exports","#","^","/","!","=","{","_t","scan","delimiters","closeIndex","tagType","buf","seenTag","lineStart","otag","ctag","addBuf","filterLine","haveSeenTag","noNewLine","isAllWhitespace","next","substr","\n","wrapMain","generate","tree","walk","asString","makeTemplate","template","Template","makePartials","Function","codegen","ctx","inPartial","nodelist","sectionTags","cacheKey","disableLambda","modelGet","compile","findInScope","scope","doModelGet","coerceToString","rAmp","rLt","rGt","rApos","hChars","compiler","ri","ep","symbol","partial","stackText","activeSub","stackSubs","stackPartials","PartialTemplate","Substitutions","subsText","rp","rs","section","inverted","pass","ms","returnFound","found","mv","ls","oldTags","ct","fl","textSource","_extends","module","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_excluded","_ref3","Fragment","InternalHighlight","_ref4","_ref4$highlightedTagN","_ref4$nonHighlightedT","nonHighlightedTagName","_ref4$separator","_ref4$classNames","classNames","_objectWithoutProperties","partIndex","isLastPart","subPart","subPartIndex","HighlightPart","_ref2","nonHighlighted","Highlight","HighlightUiComponent","ReverseHighlight","ReverseHighlightUiComponent","ReverseSnippet","ReverseSnippetUiComponent","Snippet","SnippetUiComponent","renderTemplate","templateKey","html","components","transformedHelpers","helperKey","hogan","spaces","Component","nextProps","rootProps","RootTagName","rootTagName","Answers","templateProps","emptyRoot","header","loader","__hitIndex","createContainer","rootContainer","container","userContainer","containers","connectorWidgets","containerSelector","otherWidgetParams","childWidget","renderer","CurrentRefinements","GeoSearchButton","_ref$disabled","disabled","GeoSearchToggle","classNameLabel","classNameInput","onToggle","onChange","isFirstRendering","_collectMarkersForNex2","updateMarkerIds","boundingBoxPadding","googleReference","initialZoom","initialPosition","enableRefine","enableClearMapRefinement","enableRefineControl","mapOptions","createMarker","markerOptions","isUserInteraction","isPendingRefine","markers","rootElement","mapElement","treeElement","mapInstance","maps","mapTypeControl","fullscreenControl","streetViewControl","clickableIcons","zoomControlOptions","ControlPosition","LEFT_TOP","addListenerOnce","refineWithMap","nextItemsIds","updateMarkers","collectMarkersForNextRender","exitMarkers","__id","nextPendingItems","marker","setMap","events","shouldUpdate","createBoundingBoxFromMarkers","lockUserInteraction","fitBounds","LatLngBounds","setCenter","setZoom","GeoSearchControls","onRefineToggle","onRefineClick","onClearClick","Breadcrumb","noRefinementRoot","selectedItem","link","preventDefault","isLast","aria-hidden","home","ClearRefinements","disabledButton","resetLabel","category","categoryLabel","delete","HTMLMarker","reset","redo","control","selectedLabel","disabledRedo","getBounds","getNorthEast","toJSON","getSouthWest","nextIds","update","exit","google","latLngBounds","extend","getPosition","functionThatAltersTheMapPosition","showSubmit","showReset","showLoadingIndicator","autofocus","searchAsYouType","onSubmit","onReset","SearchBox","focused","createRef","stopPropagation","blur","focus","placeholder","action","role","form","noValidate","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","maxLength","onInput","onBlur","onFocus","submit","hidden","loadingIndicator","RefinementListItem","handleClick","facetValueToRefine","templateData","subItems","originalEvent","isHierarchicalMenuItem","handleItemClick","childList","refinementListItemClassName","disabledItem","parentItem","tagName","resetInput","actualValue","showMoreButtonClassName","disabledShowMore","showMoreButton","shouldDisableSearchBox","searchIsAlwaysActive","searchPlaceholder","searchable","searchBoxTemplateProps","refineFirstValue","_generateFacetItem","noResults","selectedItemLink","showMoreText","empty","HitsWithInsightsListener","withInsightsListener","Selector","setValue","select","showPreviousText","InfiniteHitsWithInsightsListener","hasShowPrevious","loadPrevious","disabledLoadPrevious","loadMore","disabledLoadMore","MenuSelect","selectedValue","defaultOption","radio","defaultChecked","labelText","Pagination","createClickHandler","pageNumber","showFirst","PaginationLink","ariaLabel","firstPageItem","isDisabled","previousPageItem","pageItem","isSelected","showNext","nextPageItem","showLast","lastPageItem","_ref$isDisabled","_ref$isSelected","aria-label","__H","__V","__N","B","requestAnimationFrame","cancelAnimationFrame","Panel","_useState2","useState","isCollapsed","setIsCollapsed","_useState4","isControlled","setIsControlled","bodyRef","useRef","bodyElement","collapsible","collapsibleRoot","collapsedRoot","collapseButton","aria-expanded","prevIsCollapsed","collapsed","body","footer","Pit","positionValue","shouldDisplayValue","pitValue","marginLeft","PoweredBy","theme","rel","height","logo","viewBox","width","fill","QueryRuleCustomData","RangeInput","noRefinement","inputMin","inputMax","separatorText","submitText","KEYS","PERCENT_FULL","getValue","getClassName","orientation","getHandleFor","ev","killEvent","Rheostat","handlePos","handleDimensions","mousePos","sliderBox","slidingIndex","getPublicState","getSliderBoundingBox","getProgressStyle","getMinValue","getMaxValue","getHandleDimensions","getClosestSnapPoint","getSnapPosition","getNextPositionForKey","getNextState","getClosestHandle","setStartSlide","startMouseSlide","startTouchSlide","handleMouseSlide","handleTouchSlide","handleSlide","endSlide","handleKeydown","validatePosition","validateValues","canMove","fireChangeEvent","slideTo","updateNewValues","minMaxChanged","valuesChanged","orientationChanged","willBeDisabled","rheostat","rect","getBoundingClientRect","clientHeight","top","clientWidth","diffValue","prevValue","handleNode","snapPoints","snapTo","snap","abs","positionPercent","keyCode","shouldSnap","proposedValue","proposedPercentage","originalPercentage","stepValue","stepMultiplier","proposedPosition","actualPosition","nextHandlePos","closestIdx","_node","clientX","clientY","touch","changedTouches","onSliderDragStart","onSliderDragMove","onSliderDragEnd","handleId","validPositionPercent","onKeyPress","proposedValues","realValue","onAfterSet","onValuesUpdated","nextValues","_this6","Handle","handle","PitComponent","pitComponent","pitPoints","ProgressBar","progressBar","handleStyle","aria-valuemax","_this7","aria-valuemin","aria-valuenow","aria-disabled","data-handle-key","onKeyDown","onMouseDown","onTouchStart","tabIndex","pitStyle","Slider","tooltips","roundedValue","stepsLength","steps","pips","computeSnapPoints","computeDefaultPitPoints","disabledRoot","createHandleComponent","handleChange","ItemWrapper","isFull","starIcon","fullStarIcon","emptyStarIcon","xlinkHref","fillRule","transform","strokeWidth","strokeOpacity","cy","dur","repeatCount","resetIcon","submitIcon","loadingIcon","stroke","checkbox","searchableNoResults","searchBoxSuit","RelevantSort","Stats","hasManySortedResults","hasNoSortedResults","hasOneSortedResults","hasManyResults","hasOneResult","suffix","ButtonInnerElement","instantsearch","ToggleRefinement","VoiceSearch","x1","y1","x2","y2","buttonText","stroke-width","stroke-linecap","stroke-linejoin","EXPERIMENTAL_answers","containerNode","_ref3$templates","_ref3$cssClasses","userCssClasses","EXPERIMENTAL_dynamicWidgets","serializeRefinements","serializeNumericRefinements","lastSentData","sendAnalytics","pushTimeout","isInitialSearch","onUnload","pushFunction","_ref$delay","delay","_ref$triggerOnUIInter","triggerOnUIInteraction","_ref$pushInitialSearc","pushInitialSearch","_ref$pushPagination","pushPagination","equals","analyticsState","serializedParams","stringifiedParams","dataToSend","serializedRefinements","serializedNumericRefinements","builtInMarker","customHTMLMarker","_ref$initialZoom","_ref$initialPosition","_ref$templates","userTemplates","_ref$builtInMarker","userBuiltInMarker","userCustomHTMLMarker","_ref$enableRefine","_ref$enableClearMapRe","_ref$enableRefineCont","createOptions","OverlayView","_ref$anchor","anchor","latLng","LatLng","getPanes","overlayMouseTarget","bbBox","offset","getProjection","fromLatLngToDivPixel","zIndex","Marker","_ref3$showMore","receivedHits","_ref5$cssClasses","_ref3$sortBy","_ref3$limit","scrollToNode","_ref3$showFirst","_ref3$showLast","_ref3$showPrevious","_ref3$showNext","_ref3$scrollTo","scrollTo","userScrollTo","scrollIntoView","panelWidgetParams","_ref3$hidden","bodyContainerNode","collapsedFn","collapseIcon","widgetFactory","renderPanel","collapseButtonText","placesReference","_ref$defaultPosition","defaultPosition","placesOptions","placesAutocomplete","initialLatLngViaIP","isInitialLatLngViaIPSet","eventOptions","suggestion","_eventOptions$suggest2","latlng","places","_ref5$query","_ref5$position","aroundLatLngViaIP","setVal","_ref3$theme","_ref4$cssClasses","_ref4$templates","CustomData","_ref3$precision","rangeMin","rangeMax","_ref3$pips","_ref3$tooltips","maxFinite","minRange","maxRange","minStart","maxStart","minFinite","_ref5$max","_ref5$templates","id","searchBoxTemplates","searchablePlaceholder","searchableIsAlwaysActive","_ref3$searchable","_ref3$searchablePlace","_ref3$searchableEscap","searchableEscapeFacetValues","_ref3$searchableIsAlw","searchableRoot","searchableForm","searchableInput","searchableSubmit","searchableSubmitIcon","searchableReset","searchableResetIcon","searchableLoadingIndicator","searchableLoadingIcon","searchBoxDefaultTemplates","_widgetParams$templat","_widgetParams$cssClas","_ref3$placeholder","_ref3$autofocus","_ref3$searchAsYouType","_ref3$showReset","_ref3$showSubmit","_ref3$showLoadingIndi","_ref3$on","_ref3$searchAsYouSpea","VoiceSearchComponent","connectors","middlewares","routers","stateMappings","createInfiniteHitsSessionStorageCache","sessionStorage","getItem","SyntaxError","removeItem","setItem"],"mappings":"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"}