<meta charset=UTF-8>

<meta http-equiv="x-ua-compatible" content="ie=edge">

<meta name="viewport" content="width=device-width, initial-scale=1">

<iscomment>The page meta data will be replaced by rule based content if it's available</iscomment>
<isif condition="${dw.system.System.getInstanceType() != dw.system.System.PRODUCTION_SYSTEM}">
	<title>${pdict.CurrentPageMetaData.title} | ${Resource.msg('global.site.name', 'version', null)} | ${Resource.msg('global.version.number', 'version', null)}</title>
<iselse/>
  <title><isprint value="${pdict.CurrentPageMetaData.title}" encoding="htmlcontent" /></title>
</isif>

<meta name="description" content="${pdict.CurrentPageMetaData.description ? pdict.CurrentPageMetaData.description : Resource.msg('global.storename','common',null)}"/>
<meta name="keywords" content="${pdict.CurrentPageMetaData.keywords ? pdict.CurrentPageMetaData.keywords : Resource.msg('global.storename','common',null)}"/>

<iscomment>Additional Rule based page meta tags</iscomment>
<isloop items="${pdict.CurrentPageMetaData.pageMetaTags}" var="pageMetaTag">
    <isif condition="${pageMetaTag.name}">
        <meta name="<isprint value="${pageMetaTag.ID}">" content="<isprint value="${pageMetaTag.content}">">
    <iselseif condition="${pageMetaTag.property}">
        <meta property="<isprint value="${pageMetaTag.ID}">" content="<isprint value="${pageMetaTag.content}">">
    </isif>
</isloop>

<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-196x196.png')}" sizes="196x196" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-96x96.png')}" sizes="96x96" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-32x32.png')}" sizes="32x32" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-16x16.png')}" sizes="16x16" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-128.png')}" sizes="128x128" />

<!-- Start of Algolia dependencies -->
<isset name="algoliaData" value="${require('*/cartridge/scripts/algolia/lib/algoliaData')}" scope="page" />


<isif condition="${algoliaData.getPreference('Enable')}">
    <script>
        var algoliaData = {
            "enable": ${algoliaData.getPreference('Enable')},
            "applicationID": "${algoliaData.getPreference('ApplicationID')}",
            "searchApiKey": "${algoliaData.getPreference('SearchApiKey')}",
            "locale": "${request.getLocale()}",
            "currencyCode": "${request.getSession().getCurrency()}",
            "productsIndex": "${algoliaData.calculateIndexId('products')}",
            "categoriesIndex": "${algoliaData.calculateIndexId('categories')}"
        }
    </script>

    <!-- Algolia Insights (Click Analytics & Personalization) -->
    <script>
      var ALGOLIA_INSIGHTS_SRC = "https://cdn.jsdelivr.net/npm/search-insights@1.3.1";

      !function(e,a,t,n,s,i,c){e.AlgoliaAnalyticsObject=s,e[s]=e[s]||function(){
      (e[s].queue=e[s].queue||[]).push(arguments)},i=a.createElement(t),c=a.getElementsByTagName(t)[0],
      i.async=1,i.src=n,c.parentNode.insertBefore(i,c)
      }(window,document,"script",ALGOLIA_INSIGHTS_SRC,"aa");
    </script>
    <script src="${URLUtils.staticURL('/algolia/insights-config.js')}"></script>

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default%2CArray.prototype.find%2CArray.prototype.includes%2CPromise%2CObject.assign%2CObject.entries"></script>
    <script src="https://cdn.jsdelivr.net/npm/algoliasearch@3/dist/algoliasearchLite.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/hogan.js@1.0.2"></script>

    <!-- Algolia Autocomplete.js -->
    <script src="https://cdn.jsdelivr.net/autocomplete.js/0/autocomplete.min.js"></script>
    <script src="${URLUtils.staticURL('/algolia/autocomplete-config.js')}"></script>

    <!-- Algolia InstantSearch.js -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.css@7/themes/reset-min.css" />
    <script src="https://cdn.jsdelivr.net/npm/instantsearch.js@4/dist/instantsearch.production.min.js"></script>
    <script src="${URLUtils.staticURL('/algolia/instantsearch-config.js')}"></script>

    <link rel="stylesheet" href="${URLUtils.staticURL('/algolia/index.css')}" />
    <script src="${URLUtils.staticURL('/algolia/index.js')}"></script>
</isif>
<!-- End of Algolia dependencies -->

<link rel="stylesheet" href="${URLUtils.staticURL('/css/global.css')}" />
<isloop items="${ require('*/cartridge/scripts/assets.js').styles }" var="style">
    <link rel="stylesheet" href="${style.src}" <isif condition="${style.integrity != null}">integrity="${style.integrity}" crossorigin="anonymous"</isif> />
</isloop>

<isif condition="${'GoogleVerificationTag' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.GoogleVerificationTag!=''}">
    <meta name="google-site-verification" content="<isprint value="${dw.system.Site.current.preferences.custom.GoogleVerificationTag}"/>" />
</isif>

<iscomment>
    hook for Marketing Cloud connector & other integration which need to inject
    logic or markup into the page header
    IMPORTANT: Note that this hook will be called to cached as well as uncached pages
               which means you need to put privacy information into another remote include
</iscomment>
${dw.system.HookMgr.callHook('app.template.htmlHead', 'htmlHead') || ''}
